const unsigned char window_alt_map[] = {74,75,76,77};
.
.
// Where you want to make the change. change START/etc to what you want
set_win_tiles(START_X, START_Y, WIDTH, HEIGHT, window_alt_map);




WINDOW DI DIALOGO:
- davanti alle tile delle persone in gabbia
- all' uscita dello stage2
- all' ingresso dello stageBoss
- a boss sconfitto

SOUND EFFECT DI 1UP
SOUND EFFECT DI SHIELD
SOUND EFFECT DI EXIT SENZA TOOL


DA IMPLEMENTARE
CHECKPOINT DI SALVATAGGIO

RIUSCIRÃ² MAI A METTERE MONETE COME TILE DI BACKGROUND E 
SOSTITUIRLE CON BLANK QUANDO CI VADO SOPRA ?







DISCORD MARKDOWN:

SpritePlayer.c
```
void Printf(const char* txt, ...){
	UINT8 idx = 0;
	unsigned char c;
	unsigned char tmp[10];
	va_list list;

	va_start(list, txt); 
	while(*txt) {
		if(*txt == ' ') {
			c = font_idx;
		} else if(*txt >= 'A' && *txt <= 'Z'){
			c = font_idx +  1 + *txt - 'A';
		} else if(*txt >= 'a' && *txt <= 'z') {
			c = font_idx +  1 + *txt - 'a';
		} else if(*txt >= '0' && *txt <= '9') {
			c = font_idx + 27 + *txt - '0';
		} else {
			switch(*txt) {
				case  '!': c= font_idx + 37; break;
				case '\'': c= font_idx + 38; break;
				case  '(': c= font_idx + 39; break;
				case  ')': c= font_idx + 40; break;
				case  '-': c= font_idx + 41; break;
				case  '.': c= font_idx + 42; break;
				case  ':': c= font_idx + 43; break;
				case  '?': c= font_idx + 44; break;
				
				//INIZIO MIO INTERVENTO
				case  '$': c= font_idx + 45; break;
				case  ']': c= font_idx + 46; break;
				case  '[': c= font_idx + 47; break;
				case  '#': c= font_idx + 48; break;
				case  '@': c= font_idx + 49; break;
				case  '<': c= font_idx + 50; break;
				case  '>': c= font_idx + 51; break;
				case  '{': c= font_idx + 52; break;
				//FINE MIO INTERVENTO
				
				case  '%':
					switch(*(txt + 1)) {
						case 'd':
						case 'i':
							IntToString(va_arg(list, INT16), tmp);
							Printf(tmp);
							txt += 2;
							continue;

						case 'u':
							UIntToString(va_arg(list, UINT16), tmp);
							Printf(tmp);
							txt += 2;
							continue;

						case 's':
							Printf(va_arg(list, char*));
							txt += 2;
							break;
					}
					break;
			}
		}
		if(print_target == PRINT_BKG)
			set_bkg_tiles(0x1F & (print_x + scroll_offset_x), 0x1F & (print_y + scroll_offset_y), 1, 1, &c);
		else
			set_win_tiles(print_x, print_y, 1, 1, &c);

		print_x ++;
		txt ++;
	}
	va_end(list);
}
	
```

SpritePlayer.c
```c
	set_bkg_tiles(25*8, 12*8, 1, 1, tiles.data->data+3u);
```


#include "..\res\src\tiles.h"
...
set_bkg_tiles(THIS->x, THIS->y, 1, 1, tiles.data->data+3u);


tiles.h
```c
extern struct TilesInfo tiles;
```

TilesInfo.h
```c

struct TilesInfoInternal {
	unsigned char width;
	unsigned char height;
	unsigned char num_frames;
	unsigned char* data; // HERE IT IS !!
	unsigned char* color_data; 
};

struct TilesInfo {
	unsigned char bank;
	struct TilesInfoInternal const* data;
};

```

Now the declaration of the method I want to call:
```c
/** Sets the tiles in the background tile table.
    Starting at position x,y in tiles and writing across for w tiles
    and down for h tiles. Taking the values starting from the pointer
    data.
    @param data		Pointer to an unsigned char. Usually the 
    			first element in an array. // HERE IT IS !!
*/
void
set_bkg_tiles(UINT8 x,
	      UINT8 y,
	      UINT8 w,
	      UINT8 h,
	      unsigned char *tiles) NONBANKED; // HERE IT IS !!
```