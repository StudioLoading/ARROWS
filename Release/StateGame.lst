                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ANSI-C Compiler
                              3 ; Version 4.0.0 #11528 (MINGW32)
                              4 ;--------------------------------------------------------
                              5 	.module StateGame
                              6 	.optsdcc -mgbz80
                              7 	
                              8 ;--------------------------------------------------------
                              9 ; Public variables in this module
                             10 ;--------------------------------------------------------
                             11 	.globl _Update_StateGame
                             12 	.globl _ShowDiag
                             13 	.globl _Start_StateGame
                             14 	.globl _Printf
                             15 	.globl _SpriteManagerAdd
                             16 	.globl _SpriteManagerLoad
                             17 	.globl _ScrollFindTile
                             18 	.globl _GetMapSize
                             19 	.globl _InitWindow
                             20 	.globl _InitScroll
                             21 	.globl _ScrollSetTiles
                             22 	.globl _SetState
                             23 	.globl _empty
                             24 	.globl _bank_StateGame
                             25 	.globl _show_diag
                             26 	.globl _archer_state
                             27 	.globl _drop_player_y
                             28 	.globl _drop_player_x
                             29 	.globl _levels
                             30 	.globl _level_1
                             31 	.globl _current_map
                             32 	.globl _current_level
                             33 	.globl _load_next_b
                             34 	.globl _load_next_s
                             35 	.globl _load_next
                             36 	.globl _level_tool
                             37 	.globl _hp
                             38 	.globl _ups
                             39 	.globl _coins
                             40 	.globl _amulet
                             41 	.globl _collision_tiles
                             42 	.globl _sprites_palette
                             43 	.globl _bg_palette
                             44 	.globl _attack_wait
                             45 	.globl _damage_cooldown
                             46 	.globl _level_names
                             47 	.globl _ShowWindow
                             48 	.globl _populate_01
                             49 	.globl _populate_00
                             50 	.globl _WriteAMULET
                             51 	.globl _WriteMap
                             52 	.globl _WriteCOINS
                             53 	.globl _WriteHP
                             54 	.globl _WriteTOOL
                             55 	.globl _WriteUPS
                             56 ;--------------------------------------------------------
                             57 ; special function registers
                             58 ;--------------------------------------------------------
                             59 ;--------------------------------------------------------
                             60 ; ram data
                             61 ;--------------------------------------------------------
                             62 	.area _DATA
   0000                      63 _damage_cooldown::
   0000                      64 	.ds 1
   0001                      65 _attack_wait::
   0001                      66 	.ds 1
   0002                      67 _bg_palette::
   0002                      68 	.ds 64
   0042                      69 _sprites_palette::
   0042                      70 	.ds 64
   0082                      71 _collision_tiles::
   0082                      72 	.ds 25
   009B                      73 _amulet::
   009B                      74 	.ds 1
   009C                      75 _coins::
   009C                      76 	.ds 1
   009D                      77 _ups::
   009D                      78 	.ds 1
   009E                      79 _hp::
   009E                      80 	.ds 1
   009F                      81 _level_tool::
   009F                      82 	.ds 1
   00A0                      83 _load_next::
   00A0                      84 	.ds 1
   00A1                      85 _load_next_s::
   00A1                      86 	.ds 1
   00A2                      87 _load_next_b::
   00A2                      88 	.ds 1
   00A3                      89 _current_level::
   00A3                      90 	.ds 1
   00A4                      91 _current_map::
   00A4                      92 	.ds 1
   00A5                      93 _level_1::
   00A5                      94 	.ds 4
   00A9                      95 _levels::
   00A9                      96 	.ds 2
   00AB                      97 _drop_player_x::
   00AB                      98 	.ds 2
   00AD                      99 _drop_player_y::
   00AD                     100 	.ds 2
   00AF                     101 _archer_state::
   00AF                     102 	.ds 1
   00B0                     103 _show_diag::
   00B0                     104 	.ds 1
                            105 ;--------------------------------------------------------
                            106 ; CODE rom data
                            107 ;--------------------------------------------------------
                            108 	.area _CODE
   0000                     109 _bank_StateGame:
   0000 02                  110 	.db #0x02	; 2
                            111 ;--------------------------------------------------------
                            112 ; absolute external ram data
                            113 ;--------------------------------------------------------
                            114 	.area _DABS (ABS)
                            115 ;--------------------------------------------------------
                            116 ; global & static initialisations
                            117 ;--------------------------------------------------------
                            118 	.area _HOME
                            119 	.area _GSINIT
                            120 	.area _GSFINAL
                            121 	.area _GSINIT
                            122 ;custom_datas.h:54: UINT8 damage_cooldown = 30u;
   0000 21r00r00            123 	ld	hl, #_damage_cooldown
   0003 36 1E               124 	ld	(hl), #0x1e
                            125 ;custom_datas.h:55: UINT8 attack_wait = 32u;
   0005 21r01r00            126 	ld	hl, #_attack_wait
   0008 36 20               127 	ld	(hl), #0x20
                            128 ;StateGame.c:31: UINT16 bg_palette[] = {PALETTE_FROM_HEADER(tiles)};
   000A 21r02r00            129 	ld	hl, #_bg_palette
   000D 36 BC               130 	ld	(hl), #0xbc
   000F 23                  131 	inc	hl
   0010 36 17               132 	ld	(hl), #0x17
   0012 21r04r00            133 	ld	hl, #(_bg_palette + 0x0002)
   0015 36 E7               134 	ld	(hl), #0xe7
   0017 23                  135 	inc	hl
   0018 36 22               136 	ld	(hl), #0x22
   001A 21r06r00            137 	ld	hl, #(_bg_palette + 0x0004)
   001D 36 C4               138 	ld	(hl), #0xc4
   001F 23                  139 	inc	hl
   0020 36 19               140 	ld	(hl), #0x19
   0022 21r08r00            141 	ld	hl, #(_bg_palette + 0x0006)
   0025 36 E0               142 	ld	(hl), #0xe0
   0027 23                  143 	inc	hl
   0028 36 14               144 	ld	(hl), #0x14
   002A 21r0Ar00            145 	ld	hl, #(_bg_palette + 0x0008)
   002D 36 BC               146 	ld	(hl), #0xbc
   002F 23                  147 	inc	hl
   0030 36 17               148 	ld	(hl), #0x17
   0032 21r0Cr00            149 	ld	hl, #(_bg_palette + 0x000a)
   0035 36 18               150 	ld	(hl), #0x18
   0037 23                  151 	inc	hl
   0038 36 00               152 	ld	(hl), #0x00
   003A 21r0Er00            153 	ld	hl, #(_bg_palette + 0x000c)
   003D 36 10               154 	ld	(hl), #0x10
   003F 23                  155 	inc	hl
   0040 36 00               156 	ld	(hl), #0x00
   0042 21r10r00            157 	ld	hl, #(_bg_palette + 0x000e)
   0045 36 E0               158 	ld	(hl), #0xe0
   0047 23                  159 	inc	hl
   0048 36 14               160 	ld	(hl), #0x14
   004A 21r12r00            161 	ld	hl, #(_bg_palette + 0x0010)
   004D 36 BC               162 	ld	(hl), #0xbc
   004F 23                  163 	inc	hl
   0050 36 17               164 	ld	(hl), #0x17
   0052 21r14r00            165 	ld	hl, #(_bg_palette + 0x0012)
   0055 36 D6               166 	ld	(hl), #0xd6
   0057 23                  167 	inc	hl
   0058 36 5A               168 	ld	(hl), #0x5a
   005A 21r16r00            169 	ld	hl, #(_bg_palette + 0x0014)
   005D 36 F7               170 	ld	(hl), #0xf7
   005F 23                  171 	inc	hl
   0060 36 00               172 	ld	(hl), #0x00
   0062 21r18r00            173 	ld	hl, #(_bg_palette + 0x0016)
   0065 AF                  174 	xor	a, a
   0066 22                  175 	ld	(hl+), a
   0067 77                  176 	ld	(hl), a
   0068 21r1Ar00            177 	ld	hl, #(_bg_palette + 0x0018)
   006B 36 BC               178 	ld	(hl), #0xbc
   006D 23                  179 	inc	hl
   006E 36 17               180 	ld	(hl), #0x17
   0070 21r1Cr00            181 	ld	hl, #(_bg_palette + 0x001a)
   0073 36 E7               182 	ld	(hl), #0xe7
   0075 23                  183 	inc	hl
   0076 36 22               184 	ld	(hl), #0x22
   0078 21r1Er00            185 	ld	hl, #(_bg_palette + 0x001c)
   007B 36 C4               186 	ld	(hl), #0xc4
   007D 23                  187 	inc	hl
   007E 36 19               188 	ld	(hl), #0x19
   0080 21r20r00            189 	ld	hl, #(_bg_palette + 0x001e)
   0083 36 E0               190 	ld	(hl), #0xe0
   0085 23                  191 	inc	hl
   0086 36 14               192 	ld	(hl), #0x14
   0088 21r22r00            193 	ld	hl, #(_bg_palette + 0x0020)
   008B 36 BC               194 	ld	(hl), #0xbc
   008D 23                  195 	inc	hl
   008E 36 17               196 	ld	(hl), #0x17
   0090 21r24r00            197 	ld	hl, #(_bg_palette + 0x0022)
   0093 36 E7               198 	ld	(hl), #0xe7
   0095 23                  199 	inc	hl
   0096 36 22               200 	ld	(hl), #0x22
   0098 21r26r00            201 	ld	hl, #(_bg_palette + 0x0024)
   009B 36 C4               202 	ld	(hl), #0xc4
   009D 23                  203 	inc	hl
   009E 36 19               204 	ld	(hl), #0x19
   00A0 21r28r00            205 	ld	hl, #(_bg_palette + 0x0026)
   00A3 36 E0               206 	ld	(hl), #0xe0
   00A5 23                  207 	inc	hl
   00A6 36 14               208 	ld	(hl), #0x14
   00A8 21r2Ar00            209 	ld	hl, #(_bg_palette + 0x0028)
   00AB 36 BC               210 	ld	(hl), #0xbc
   00AD 23                  211 	inc	hl
   00AE 36 17               212 	ld	(hl), #0x17
   00B0 21r2Cr00            213 	ld	hl, #(_bg_palette + 0x002a)
   00B3 36 E7               214 	ld	(hl), #0xe7
   00B5 23                  215 	inc	hl
   00B6 36 22               216 	ld	(hl), #0x22
   00B8 21r2Er00            217 	ld	hl, #(_bg_palette + 0x002c)
   00BB 36 C4               218 	ld	(hl), #0xc4
   00BD 23                  219 	inc	hl
   00BE 36 19               220 	ld	(hl), #0x19
   00C0 21r30r00            221 	ld	hl, #(_bg_palette + 0x002e)
   00C3 36 E0               222 	ld	(hl), #0xe0
   00C5 23                  223 	inc	hl
   00C6 36 14               224 	ld	(hl), #0x14
   00C8 21r32r00            225 	ld	hl, #(_bg_palette + 0x0030)
   00CB 36 BC               226 	ld	(hl), #0xbc
   00CD 23                  227 	inc	hl
   00CE 36 17               228 	ld	(hl), #0x17
   00D0 21r34r00            229 	ld	hl, #(_bg_palette + 0x0032)
   00D3 36 E7               230 	ld	(hl), #0xe7
   00D5 23                  231 	inc	hl
   00D6 36 22               232 	ld	(hl), #0x22
   00D8 21r36r00            233 	ld	hl, #(_bg_palette + 0x0034)
   00DB 36 C4               234 	ld	(hl), #0xc4
   00DD 23                  235 	inc	hl
   00DE 36 19               236 	ld	(hl), #0x19
   00E0 21r38r00            237 	ld	hl, #(_bg_palette + 0x0036)
   00E3 36 E0               238 	ld	(hl), #0xe0
   00E5 23                  239 	inc	hl
   00E6 36 14               240 	ld	(hl), #0x14
   00E8 21r3Ar00            241 	ld	hl, #(_bg_palette + 0x0038)
   00EB 36 BC               242 	ld	(hl), #0xbc
   00ED 23                  243 	inc	hl
   00EE 36 17               244 	ld	(hl), #0x17
   00F0 21r3Cr00            245 	ld	hl, #(_bg_palette + 0x003a)
   00F3 36 E7               246 	ld	(hl), #0xe7
   00F5 23                  247 	inc	hl
   00F6 36 22               248 	ld	(hl), #0x22
   00F8 21r3Er00            249 	ld	hl, #(_bg_palette + 0x003c)
   00FB 36 C4               250 	ld	(hl), #0xc4
   00FD 23                  251 	inc	hl
   00FE 36 19               252 	ld	(hl), #0x19
   0100 21r40r00            253 	ld	hl, #(_bg_palette + 0x003e)
   0103 36 E0               254 	ld	(hl), #0xe0
   0105 23                  255 	inc	hl
   0106 36 14               256 	ld	(hl), #0x14
                            257 ;StateGame.c:33: UINT16 sprites_palette[] = {
   0108 21r42r00            258 	ld	hl, #_sprites_palette
   010B 36 BC               259 	ld	(hl), #0xbc
   010D 23                  260 	inc	hl
   010E 36 17               261 	ld	(hl), #0x17
   0110 21r44r00            262 	ld	hl, #(_sprites_palette + 0x0002)
   0113 36 5E               263 	ld	(hl), #0x5e
   0115 23                  264 	inc	hl
   0116 36 4F               265 	ld	(hl), #0x4f
   0118 21r46r00            266 	ld	hl, #(_sprites_palette + 0x0004)
   011B 36 B3               267 	ld	(hl), #0xb3
   011D 23                  268 	inc	hl
   011E 36 01               269 	ld	(hl), #0x01
   0120 21r48r00            270 	ld	hl, #(_sprites_palette + 0x0006)
   0123 36 03               271 	ld	(hl), #0x03
   0125 23                  272 	inc	hl
   0126 36 7E               273 	ld	(hl), #0x7e
   0128 21r4Ar00            274 	ld	hl, #(_sprites_palette + 0x0008)
   012B 36 BC               275 	ld	(hl), #0xbc
   012D 23                  276 	inc	hl
   012E 36 17               277 	ld	(hl), #0x17
   0130 21r4Cr00            278 	ld	hl, #(_sprites_palette + 0x000a)
   0133 36 5E               279 	ld	(hl), #0x5e
   0135 23                  280 	inc	hl
   0136 36 4F               281 	ld	(hl), #0x4f
   0138 21r4Er00            282 	ld	hl, #(_sprites_palette + 0x000c)
   013B 36 B3               283 	ld	(hl), #0xb3
   013D 23                  284 	inc	hl
   013E 36 01               285 	ld	(hl), #0x01
   0140 21r50r00            286 	ld	hl, #(_sprites_palette + 0x000e)
   0143 36 03               287 	ld	(hl), #0x03
   0145 23                  288 	inc	hl
   0146 36 7E               289 	ld	(hl), #0x7e
   0148 21r52r00            290 	ld	hl, #(_sprites_palette + 0x0010)
   014B 36 BC               291 	ld	(hl), #0xbc
   014D 23                  292 	inc	hl
   014E 36 17               293 	ld	(hl), #0x17
   0150 21r54r00            294 	ld	hl, #(_sprites_palette + 0x0012)
   0153 36 E7               295 	ld	(hl), #0xe7
   0155 23                  296 	inc	hl
   0156 36 22               297 	ld	(hl), #0x22
   0158 21r56r00            298 	ld	hl, #(_sprites_palette + 0x0014)
   015B 36 C4               299 	ld	(hl), #0xc4
   015D 23                  300 	inc	hl
   015E 36 19               301 	ld	(hl), #0x19
   0160 21r58r00            302 	ld	hl, #(_sprites_palette + 0x0016)
   0163 36 E0               303 	ld	(hl), #0xe0
   0165 23                  304 	inc	hl
   0166 36 14               305 	ld	(hl), #0x14
   0168 21r5Ar00            306 	ld	hl, #(_sprites_palette + 0x0018)
   016B 36 BC               307 	ld	(hl), #0xbc
   016D 23                  308 	inc	hl
   016E 36 17               309 	ld	(hl), #0x17
   0170 21r5Cr00            310 	ld	hl, #(_sprites_palette + 0x001a)
   0173 36 E7               311 	ld	(hl), #0xe7
   0175 23                  312 	inc	hl
   0176 36 22               313 	ld	(hl), #0x22
   0178 21r5Er00            314 	ld	hl, #(_sprites_palette + 0x001c)
   017B 36 C4               315 	ld	(hl), #0xc4
   017D 23                  316 	inc	hl
   017E 36 19               317 	ld	(hl), #0x19
   0180 21r60r00            318 	ld	hl, #(_sprites_palette + 0x001e)
   0183 36 E0               319 	ld	(hl), #0xe0
   0185 23                  320 	inc	hl
   0186 36 14               321 	ld	(hl), #0x14
   0188 21r62r00            322 	ld	hl, #(_sprites_palette + 0x0020)
   018B 36 BC               323 	ld	(hl), #0xbc
   018D 23                  324 	inc	hl
   018E 36 17               325 	ld	(hl), #0x17
   0190 21r64r00            326 	ld	hl, #(_sprites_palette + 0x0022)
   0193 36 E7               327 	ld	(hl), #0xe7
   0195 23                  328 	inc	hl
   0196 36 22               329 	ld	(hl), #0x22
   0198 21r66r00            330 	ld	hl, #(_sprites_palette + 0x0024)
   019B 36 C4               331 	ld	(hl), #0xc4
   019D 23                  332 	inc	hl
   019E 36 19               333 	ld	(hl), #0x19
   01A0 21r68r00            334 	ld	hl, #(_sprites_palette + 0x0026)
   01A3 36 E0               335 	ld	(hl), #0xe0
   01A5 23                  336 	inc	hl
   01A6 36 14               337 	ld	(hl), #0x14
   01A8 21r6Ar00            338 	ld	hl, #(_sprites_palette + 0x0028)
   01AB 36 BC               339 	ld	(hl), #0xbc
   01AD 23                  340 	inc	hl
   01AE 36 17               341 	ld	(hl), #0x17
   01B0 21r6Cr00            342 	ld	hl, #(_sprites_palette + 0x002a)
   01B3 36 E7               343 	ld	(hl), #0xe7
   01B5 23                  344 	inc	hl
   01B6 36 22               345 	ld	(hl), #0x22
   01B8 21r6Er00            346 	ld	hl, #(_sprites_palette + 0x002c)
   01BB 36 C4               347 	ld	(hl), #0xc4
   01BD 23                  348 	inc	hl
   01BE 36 19               349 	ld	(hl), #0x19
   01C0 21r70r00            350 	ld	hl, #(_sprites_palette + 0x002e)
   01C3 36 E0               351 	ld	(hl), #0xe0
   01C5 23                  352 	inc	hl
   01C6 36 14               353 	ld	(hl), #0x14
   01C8 21r72r00            354 	ld	hl, #(_sprites_palette + 0x0030)
   01CB 36 BC               355 	ld	(hl), #0xbc
   01CD 23                  356 	inc	hl
   01CE 36 17               357 	ld	(hl), #0x17
   01D0 21r74r00            358 	ld	hl, #(_sprites_palette + 0x0032)
   01D3 36 E7               359 	ld	(hl), #0xe7
   01D5 23                  360 	inc	hl
   01D6 36 22               361 	ld	(hl), #0x22
   01D8 21r76r00            362 	ld	hl, #(_sprites_palette + 0x0034)
   01DB 36 C4               363 	ld	(hl), #0xc4
   01DD 23                  364 	inc	hl
   01DE 36 19               365 	ld	(hl), #0x19
   01E0 21r78r00            366 	ld	hl, #(_sprites_palette + 0x0036)
   01E3 36 E0               367 	ld	(hl), #0xe0
   01E5 23                  368 	inc	hl
   01E6 36 14               369 	ld	(hl), #0x14
   01E8 21r7Ar00            370 	ld	hl, #(_sprites_palette + 0x0038)
   01EB 36 BC               371 	ld	(hl), #0xbc
   01ED 23                  372 	inc	hl
   01EE 36 17               373 	ld	(hl), #0x17
   01F0 21r7Cr00            374 	ld	hl, #(_sprites_palette + 0x003a)
   01F3 36 E7               375 	ld	(hl), #0xe7
   01F5 23                  376 	inc	hl
   01F6 36 22               377 	ld	(hl), #0x22
   01F8 21r7Er00            378 	ld	hl, #(_sprites_palette + 0x003c)
   01FB 36 C4               379 	ld	(hl), #0xc4
   01FD 23                  380 	inc	hl
   01FE 36 19               381 	ld	(hl), #0x19
   0200 21r80r00            382 	ld	hl, #(_sprites_palette + 0x003e)
   0203 36 E0               383 	ld	(hl), #0xe0
   0205 23                  384 	inc	hl
   0206 36 14               385 	ld	(hl), #0x14
                            386 ;StateGame.c:44: UINT8 collision_tiles[] = {1, 2, 3, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 40, 41, 42, 46, 0};//numero delle tile con collisioni e ultimo sempre zero
   0208 21r82r00            387 	ld	hl, #_collision_tiles
   020B 36 01               388 	ld	(hl), #0x01
   020D 21r83r00            389 	ld	hl, #(_collision_tiles + 0x0001)
   0210 36 02               390 	ld	(hl), #0x02
   0212 21r84r00            391 	ld	hl, #(_collision_tiles + 0x0002)
   0215 36 03               392 	ld	(hl), #0x03
   0217 21r85r00            393 	ld	hl, #(_collision_tiles + 0x0003)
   021A 36 07               394 	ld	(hl), #0x07
   021C 21r86r00            395 	ld	hl, #(_collision_tiles + 0x0004)
   021F 36 08               396 	ld	(hl), #0x08
   0221 21r87r00            397 	ld	hl, #(_collision_tiles + 0x0005)
   0224 36 09               398 	ld	(hl), #0x09
   0226 21r88r00            399 	ld	hl, #(_collision_tiles + 0x0006)
   0229 36 0A               400 	ld	(hl), #0x0a
   022B 21r89r00            401 	ld	hl, #(_collision_tiles + 0x0007)
   022E 36 0B               402 	ld	(hl), #0x0b
   0230 21r8Ar00            403 	ld	hl, #(_collision_tiles + 0x0008)
   0233 36 0C               404 	ld	(hl), #0x0c
   0235 21r8Br00            405 	ld	hl, #(_collision_tiles + 0x0009)
   0238 36 0D               406 	ld	(hl), #0x0d
   023A 21r8Cr00            407 	ld	hl, #(_collision_tiles + 0x000a)
   023D 36 0E               408 	ld	(hl), #0x0e
   023F 21r8Dr00            409 	ld	hl, #(_collision_tiles + 0x000b)
   0242 36 0F               410 	ld	(hl), #0x0f
   0244 21r8Er00            411 	ld	hl, #(_collision_tiles + 0x000c)
   0247 36 10               412 	ld	(hl), #0x10
   0249 21r8Fr00            413 	ld	hl, #(_collision_tiles + 0x000d)
   024C 36 11               414 	ld	(hl), #0x11
   024E 21r90r00            415 	ld	hl, #(_collision_tiles + 0x000e)
   0251 36 12               416 	ld	(hl), #0x12
   0253 21r91r00            417 	ld	hl, #(_collision_tiles + 0x000f)
   0256 36 13               418 	ld	(hl), #0x13
   0258 21r92r00            419 	ld	hl, #(_collision_tiles + 0x0010)
   025B 36 14               420 	ld	(hl), #0x14
   025D 21r93r00            421 	ld	hl, #(_collision_tiles + 0x0011)
   0260 36 15               422 	ld	(hl), #0x15
   0262 21r94r00            423 	ld	hl, #(_collision_tiles + 0x0012)
   0265 36 16               424 	ld	(hl), #0x16
   0267 21r95r00            425 	ld	hl, #(_collision_tiles + 0x0013)
   026A 36 17               426 	ld	(hl), #0x17
   026C 21r96r00            427 	ld	hl, #(_collision_tiles + 0x0014)
   026F 36 28               428 	ld	(hl), #0x28
   0271 21r97r00            429 	ld	hl, #(_collision_tiles + 0x0015)
   0274 36 29               430 	ld	(hl), #0x29
   0276 21r98r00            431 	ld	hl, #(_collision_tiles + 0x0016)
   0279 36 2A               432 	ld	(hl), #0x2a
   027B 21r99r00            433 	ld	hl, #(_collision_tiles + 0x0017)
   027E 36 2E               434 	ld	(hl), #0x2e
   0280 21r9Ar00            435 	ld	hl, #(_collision_tiles + 0x0018)
   0283 36 00               436 	ld	(hl), #0x00
                            437 ;StateGame.c:46: UINT8 amulet = 1u;
   0285 21r9Br00            438 	ld	hl, #_amulet
   0288 36 01               439 	ld	(hl), #0x01
                            440 ;StateGame.c:47: UINT8 coins = 0u;
   028A 21r9Cr00            441 	ld	hl, #_coins
   028D 36 00               442 	ld	(hl), #0x00
                            443 ;StateGame.c:48: INT8 ups = 3;
   028F 21r9Dr00            444 	ld	hl, #_ups
   0292 36 03               445 	ld	(hl), #0x03
                            446 ;StateGame.c:49: INT8 hp = 100;
   0294 21r9Er00            447 	ld	hl, #_hp
   0297 36 64               448 	ld	(hl), #0x64
                            449 ;StateGame.c:50: INT8 level_tool = -1;
   0299 21r9Fr00            450 	ld	hl, #_level_tool
   029C 36 FF               451 	ld	(hl), #0xff
                            452 ;StateGame.c:63: INT8 load_next = 0;
   029E 21rA0r00            453 	ld	hl, #_load_next
   02A1 36 00               454 	ld	(hl), #0x00
                            455 ;StateGame.c:64: INT8 load_next_s = 0;
   02A3 21rA1r00            456 	ld	hl, #_load_next_s
   02A6 36 00               457 	ld	(hl), #0x00
                            458 ;StateGame.c:65: INT8 load_next_b = 0;
   02A8 21rA2r00            459 	ld	hl, #_load_next_b
   02AB 36 00               460 	ld	(hl), #0x00
                            461 ;StateGame.c:66: UINT8 current_level = 0;
   02AD 21rA3r00            462 	ld	hl, #_current_level
   02B0 36 00               463 	ld	(hl), #0x00
                            464 ;StateGame.c:67: UINT8 current_map = 0;
   02B2 21rA4r00            465 	ld	hl, #_current_map
   02B5 36 00               466 	ld	(hl), #0x00
                            467 ;StateGame.c:68: const struct MapInfo* level_1[] = {
   02B7 21rA5r00            468 	ld	hl, #_level_1
   02BA 36r00               469 	ld	(hl), #<(_map)
   02BC 23                  470 	inc	hl
   02BD 36s00               471 	ld	(hl), #>(_map)
   02BF 21rA7r00            472 	ld	hl, #(_level_1 + 0x0002)
   02C2 36r00               473 	ld	(hl), #<(_map2)
   02C4 23                  474 	inc	hl
   02C5 36s00               475 	ld	(hl), #>(_map2)
                            476 ;StateGame.c:72: const struct MapInfo** levels[] = {level_1};
   02C7 21rA9r00            477 	ld	hl, #_levels
   02CA 36rA5               478 	ld	(hl), #<(_level_1)
   02CC 23                  479 	inc	hl
   02CD 36s00               480 	ld	(hl), #>(_level_1)
                            481 ;--------------------------------------------------------
                            482 ; Home
                            483 ;--------------------------------------------------------
                            484 	.area _HOME
                            485 ;C:/GB/ZGB/common/include/Banks/SetBankCommon.h:4: void empty(void) __nonbanked {}
                            486 ;	---------------------------------
                            487 ; Function empty
                            488 ; ---------------------------------
   0000                     489 _empty::
   0000 C9                  490 	ret
                            491 	.area _HOME
                            492 ;--------------------------------------------------------
                            493 ; code
                            494 ;--------------------------------------------------------
                            495 	.area _CODE_2
                            496 ;StateGame.c:84: void Start_StateGame() {
                            497 ;	---------------------------------
                            498 ; Function Start_StateGame
                            499 ; ---------------------------------
   0000                     500 _Start_StateGame::
   0000 E8 F8               501 	add	sp, #-8
                            502 ;StateGame.c:89: SPRITES_8x16;
   0002 F0r00               503 	ldh	a, (_LCDC_REG+0)
   0004 F6 04               504 	or	a, #0x04
   0006 E0r00               505 	ldh	(_LCDC_REG+0),a
                            506 ;StateGame.c:90: SpriteManagerLoad(SpritePlayer);
   0008 AF                  507 	xor	a, a
   0009 F5                  508 	push	af
   000A 33                  509 	inc	sp
   000B CDr00r00            510 	call	_SpriteManagerLoad
   000E 33                  511 	inc	sp
                            512 ;StateGame.c:91: SpriteManagerLoad(SpriteArrow);
   000F 3E 01               513 	ld	a, #0x01
   0011 F5                  514 	push	af
   0012 33                  515 	inc	sp
   0013 CDr00r00            516 	call	_SpriteManagerLoad
   0016 33                  517 	inc	sp
                            518 ;StateGame.c:92: SpriteManagerLoad(SpritePlatform);
   0017 3E 02               519 	ld	a, #0x02
   0019 F5                  520 	push	af
   001A 33                  521 	inc	sp
   001B CDr00r00            522 	call	_SpriteManagerLoad
   001E 33                  523 	inc	sp
                            524 ;StateGame.c:93: SpriteManagerLoad(SpriteItem);
   001F 3E 03               525 	ld	a, #0x03
   0021 F5                  526 	push	af
   0022 33                  527 	inc	sp
   0023 CDr00r00            528 	call	_SpriteManagerLoad
   0026 33                  529 	inc	sp
                            530 ;StateGame.c:94: SpriteManagerLoad(SpriteKey);
   0027 3E 04               531 	ld	a, #0x04
   0029 F5                  532 	push	af
   002A 33                  533 	inc	sp
   002B CDr00r00            534 	call	_SpriteManagerLoad
   002E 33                  535 	inc	sp
                            536 ;StateGame.c:95: SpriteManagerLoad(SpriteEnemy);
   002F 3E 06               537 	ld	a, #0x06
   0031 F5                  538 	push	af
   0032 33                  539 	inc	sp
   0033 CDr00r00            540 	call	_SpriteManagerLoad
   0036 33                  541 	inc	sp
                            542 ;StateGame.c:96: SpriteManagerLoad(SpriteScorpion);
   0037 3E 07               543 	ld	a, #0x07
   0039 F5                  544 	push	af
   003A 33                  545 	inc	sp
   003B CDr00r00            546 	call	_SpriteManagerLoad
   003E 33                  547 	inc	sp
                            548 ;StateGame.c:97: SpriteManagerLoad(SpritePorcupine);
   003F 3E 08               549 	ld	a, #0x08
   0041 F5                  550 	push	af
   0042 33                  551 	inc	sp
   0043 CDr00r00            552 	call	_SpriteManagerLoad
   0046 33                  553 	inc	sp
                            554 ;StateGame.c:98: SpriteManagerLoad(SpriteDiagface);
   0047 3E 05               555 	ld	a, #0x05
   0049 F5                  556 	push	af
   004A 33                  557 	inc	sp
   004B CDr00r00            558 	call	_SpriteManagerLoad
   004E 33                  559 	inc	sp
                            560 ;StateGame.c:99: SHOW_SPRITES;
   004F F0r00               561 	ldh	a, (_LCDC_REG+0)
   0051 F6 02               562 	or	a, #0x02
   0053 E0r00               563 	ldh	(_LCDC_REG+0),a
                            564 ;StateGame.c:102: scroll_bottom_movement_limit = 60;//customizzo altezza archer sul display
   0055 21r00r00            565 	ld	hl, #_scroll_bottom_movement_limit
   0058 36 3C               566 	ld	(hl), #0x3c
                            567 ;StateGame.c:104: const struct MapInfo** lvls = levels[current_level];
   005A 21rA3r00            568 	ld	hl, #_current_level
   005D 4E                  569 	ld	c, (hl)
   005E 06 00               570 	ld	b, #0x00
   0060 CB 21               571 	sla	c
   0062 CB 10               572 	rl	b
   0064 21rA9r00            573 	ld	hl, #_levels
   0067 09                  574 	add	hl, bc
   0068 4D                  575 	ld	c, l
   0069 44                  576 	ld	b, h
   006A 59                  577 	ld	e, c
   006B 50                  578 	ld	d, b
   006C 1A                  579 	ld	a,(de)
   006D F8 00               580 	ldhl	sp,	#0
   006F 22                  581 	ld	(hl+), a
   0070 13                  582 	inc	de
   0071 1A                  583 	ld	a, (de)
   0072 77                  584 	ld	(hl), a
                            585 ;StateGame.c:106: GetMapSize(lvls[current_map], &map_w, &map_h);
   0073 F8 03               586 	ldhl	sp,	#3
   0075 4D                  587 	ld	c, l
   0076 44                  588 	ld	b, h
   0077 F8 04               589 	ldhl	sp,	#4
   0079 71                  590 	ld	(hl), c
   007A 23                  591 	inc	hl
   007B 70                  592 	ld	(hl), b
   007C F8 02               593 	ldhl	sp,	#2
   007E 4D                  594 	ld	c, l
   007F 44                  595 	ld	b, h
   0080 F8 06               596 	ldhl	sp,	#6
   0082 71                  597 	ld	(hl), c
   0083 23                  598 	inc	hl
   0084 70                  599 	ld	(hl), b
   0085 21rA4r00            600 	ld	hl, #_current_map
   0088 4E                  601 	ld	c, (hl)
   0089 06 00               602 	ld	b, #0x00
   008B CB 21               603 	sla	c
   008D CB 10               604 	rl	b
   008F E1                  605 	pop	hl
   0090 E5                  606 	push	hl
   0091 09                  607 	add	hl, bc
   0092 4D                  608 	ld	c,l
   0093 44                  609 	ld	b,h
   0094 4E                  610 	ld	c, (hl)
   0095 23                  611 	inc	hl
   0096 46                  612 	ld	b, (hl)
   0097 F8 04               613 	ldhl	sp,	#4
   0099 2A                  614 	ld	a, (hl+)
   009A 66                  615 	ld	h, (hl)
   009B 6F                  616 	ld	l, a
   009C E5                  617 	push	hl
   009D F8 08               618 	ldhl	sp,	#8
   009F 2A                  619 	ld	a, (hl+)
   00A0 66                  620 	ld	h, (hl)
   00A1 6F                  621 	ld	l, a
   00A2 E5                  622 	push	hl
   00A3 C5                  623 	push	bc
   00A4 CDr00r00            624 	call	_GetMapSize
   00A7 E8 06               625 	add	sp, #6
   00A9 21rA4r00            626 	ld	hl, #_current_map
   00AC 4E                  627 	ld	c, (hl)
   00AD 06 00               628 	ld	b, #0x00
                            629 ;StateGame.c:109: ScrollFindTile(lvls[current_map], 45, 0, 0, map_w, map_h, &drop_player_x, &drop_player_y);
   00AF CB 21               630 	sla	c
   00B1 CB 10               631 	rl	b
   00B3 E1                  632 	pop	hl
   00B4 E5                  633 	push	hl
   00B5 09                  634 	add	hl, bc
   00B6 7D                  635 	ld	a, l
   00B7 54                  636 	ld	d, h
   00B8 F8 06               637 	ldhl	sp,	#6
   00BA 22                  638 	ld	(hl+), a
   00BB 72                  639 	ld	(hl), d
                            640 ;StateGame.c:107: if (load_next_s){ //vengo da secret!
   00BC 21rA1r00            641 	ld	hl, #_load_next_s
   00BF 7E                  642 	ld	a, (hl)
   00C0 B7                  643 	or	a, a
   00C1 CArF4r00            644 	jp	Z, 00102$
                            645 ;StateGame.c:108: load_next_s = 0;
   00C4 36 00               646 	ld	(hl), #0x00
                            647 ;StateGame.c:109: ScrollFindTile(lvls[current_map], 45, 0, 0, map_w, map_h, &drop_player_x, &drop_player_y);
   00C6 F8 06               648 	ldhl	sp,#(7 - 1)
   00C8 5E                  649 	ld	e, (hl)
   00C9 23                  650 	inc	hl
   00CA 56                  651 	ld	d, (hl)
   00CB 1A                  652 	ld	a,(de)
   00CC 4F                  653 	ld	c, a
   00CD 13                  654 	inc	de
   00CE 1A                  655 	ld	a,(de)
   00CF 47                  656 	ld	b, a
   00D0 21rADr00            657 	ld	hl, #_drop_player_y
   00D3 E5                  658 	push	hl
   00D4 21rABr00            659 	ld	hl, #_drop_player_x
   00D7 E5                  660 	push	hl
   00D8 F8 07               661 	ldhl	sp,	#7
   00DA 7E                  662 	ld	a, (hl)
   00DB F5                  663 	push	af
   00DC 33                  664 	inc	sp
   00DD 2B                  665 	dec	hl
   00DE 7E                  666 	ld	a, (hl)
   00DF F5                  667 	push	af
   00E0 33                  668 	inc	sp
   00E1 AF                  669 	xor	a, a
   00E2 F5                  670 	push	af
   00E3 33                  671 	inc	sp
   00E4 AF                  672 	xor	a, a
   00E5 F5                  673 	push	af
   00E6 33                  674 	inc	sp
   00E7 3E 2D               675 	ld	a, #0x2d
   00E9 F5                  676 	push	af
   00EA 33                  677 	inc	sp
   00EB C5                  678 	push	bc
   00EC CDr00r00            679 	call	_ScrollFindTile
   00EF E8 0B               680 	add	sp, #11
   00F1 C3r1Fr01            681 	jp	00103$
   00F4                     682 00102$:
                            683 ;StateGame.c:111: ScrollFindTile(lvls[current_map], 9, 0, 0, map_w, map_h, &drop_player_x, &drop_player_y);
   00F4 F8 06               684 	ldhl	sp,#(7 - 1)
   00F6 5E                  685 	ld	e, (hl)
   00F7 23                  686 	inc	hl
   00F8 56                  687 	ld	d, (hl)
   00F9 1A                  688 	ld	a,(de)
   00FA 4F                  689 	ld	c, a
   00FB 13                  690 	inc	de
   00FC 1A                  691 	ld	a,(de)
   00FD 47                  692 	ld	b, a
   00FE 21rADr00            693 	ld	hl, #_drop_player_y
   0101 E5                  694 	push	hl
   0102 21rABr00            695 	ld	hl, #_drop_player_x
   0105 E5                  696 	push	hl
   0106 F8 07               697 	ldhl	sp,	#7
   0108 7E                  698 	ld	a, (hl)
   0109 F5                  699 	push	af
   010A 33                  700 	inc	sp
   010B 2B                  701 	dec	hl
   010C 7E                  702 	ld	a, (hl)
   010D F5                  703 	push	af
   010E 33                  704 	inc	sp
   010F AF                  705 	xor	a, a
   0110 F5                  706 	push	af
   0111 33                  707 	inc	sp
   0112 AF                  708 	xor	a, a
   0113 F5                  709 	push	af
   0114 33                  710 	inc	sp
   0115 3E 09               711 	ld	a, #0x09
   0117 F5                  712 	push	af
   0118 33                  713 	inc	sp
   0119 C5                  714 	push	bc
   011A CDr00r00            715 	call	_ScrollFindTile
   011D E8 0B               716 	add	sp, #11
   011F                     717 00103$:
                            718 ;StateGame.c:113: scroll_target = SpriteManagerAdd(SpritePlayer, drop_player_x*8, drop_player_y*8);
   011F 21rAEr00            719 	ld	hl, #_drop_player_y + 1
   0122 2B                  720 	dec	hl
   0123 4E                  721 	ld	c, (hl)
   0124 23                  722 	inc	hl
   0125 46                  723 	ld	b, (hl)
   0126 CB 21               724 	sla	c
   0128 CB 10               725 	rl	b
   012A CB 21               726 	sla	c
   012C CB 10               727 	rl	b
   012E CB 21               728 	sla	c
   0130 CB 10               729 	rl	b
   0132 21rACr00            730 	ld	hl, #_drop_player_x + 1
   0135 2B                  731 	dec	hl
   0136 5E                  732 	ld	e, (hl)
   0137 23                  733 	inc	hl
   0138 56                  734 	ld	d, (hl)
   0139 CB 23               735 	sla	e
   013B CB 12               736 	rl	d
   013D CB 23               737 	sla	e
   013F CB 12               738 	rl	d
   0141 CB 23               739 	sla	e
   0143 CB 12               740 	rl	d
   0145 C5                  741 	push	bc
   0146 D5                  742 	push	de
   0147 AF                  743 	xor	a, a
   0148 F5                  744 	push	af
   0149 33                  745 	inc	sp
   014A CDr00r00            746 	call	_SpriteManagerAdd
   014D E8 05               747 	add	sp, #5
   014F 21r00r00            748 	ld	hl, #_scroll_target
   0152 73                  749 	ld	(hl), e
   0153 23                  750 	inc	hl
   0154 72                  751 	ld	(hl), d
                            752 ;StateGame.c:114: InitScroll(lvls[current_map], collision_tiles, 0);
   0155 21rA4r00            753 	ld	hl, #_current_map
   0158 4E                  754 	ld	c, (hl)
   0159 06 00               755 	ld	b, #0x00
   015B CB 21               756 	sla	c
   015D CB 10               757 	rl	b
   015F E1                  758 	pop	hl
   0160 E5                  759 	push	hl
   0161 09                  760 	add	hl, bc
   0162 4D                  761 	ld	c,l
   0163 44                  762 	ld	b,h
   0164 4E                  763 	ld	c, (hl)
   0165 23                  764 	inc	hl
   0166 46                  765 	ld	b, (hl)
   0167 21 00 00            766 	ld	hl, #0x0000
   016A E5                  767 	push	hl
   016B 21r82r00            768 	ld	hl, #_collision_tiles
   016E E5                  769 	push	hl
   016F C5                  770 	push	bc
   0170 CDr00r00            771 	call	_InitScroll
   0173 E8 06               772 	add	sp, #6
                            773 ;StateGame.c:115: SHOW_BKG;
   0175 F0r00               774 	ldh	a, (_LCDC_REG+0)
   0177 F6 01               775 	or	a, #0x01
   0179 E0r00               776 	ldh	(_LCDC_REG+0),a
                            777 ;StateGame.c:118: INIT_FONT(font, PRINT_WIN);
   017B 21r00r00            778 	ld	hl, #_font
   017E E5                  779 	push	hl
   017F 3E CA               780 	ld	a, #0xca
   0181 F5                  781 	push	af
   0182 33                  782 	inc	sp
   0183 CDr00r00            783 	call	_ScrollSetTiles
   0186 E8 03               784 	add	sp, #3
   0188 21r00r00            785 	ld	hl, #_font_idx
   018B 36 CA               786 	ld	(hl), #0xca
   018D 21r00r00            787 	ld	hl, #_print_target
   0190 36 01               788 	ld	(hl), #0x01
                            789 ;StateGame.c:124: struct ArcherInfo* archer_data = (struct ArcherInfo*)scroll_target->custom_data;
   0192 21r00r00            790 	ld	hl, #_scroll_target
   0195 46                  791 	ld	b, (hl)
   0196 23                  792 	inc	hl
   0197 4E                  793 	ld	c, (hl)
   0198 78                  794 	ld	a, b
   0199 C6 19               795 	add	a, #0x19
   019B 47                  796 	ld	b, a
   019C 30 01               797 	jr	NC,00173$
   019E 0C                  798 	inc	c
   019F                     799 00173$:
   019F F8 04               800 	ldhl	sp,	#4
   01A1 70                  801 	ld	(hl), b
   01A2 23                  802 	inc	hl
   01A3 71                  803 	ld	(hl), c
                            804 ;StateGame.c:125: if (archer_data->ups > 0 & archer_data->ups != ups){
   01A4 2B                  805 	dec	hl
   01A5 4E                  806 	ld	c, (hl)
   01A6 23                  807 	inc	hl
   01A7 46                  808 	ld	b, (hl)
   01A8 03                  809 	inc	bc
   01A9 03                  810 	inc	bc
   01AA 03                  811 	inc	bc
   01AB 0A                  812 	ld	a, (bc)
   01AC 23                  813 	inc	hl
   01AD 77                  814 	ld	(hl), a
   01AE 7E                  815 	ld	a, (hl)
   01AF 5F                  816 	ld	e, a
   01B0 3E 00               817 	ld	a, #0x00
   01B2 57                  818 	ld	d, a
   01B3 AF                  819 	xor	a, a
   01B4 96                  820 	sub	a, (hl)
   01B5 CB 7B               821 	bit	7, e
   01B7 28 07               822 	jr	Z,00174$
   01B9 CB 7A               823 	bit	7, d
   01BB 20 08               824 	jr	NZ,00175$
   01BD BF                  825 	cp	a, a
   01BE 18 05               826 	jr	00175$
   01C0                     827 00174$:
   01C0 CB 7A               828 	bit	7, d
   01C2 28 01               829 	jr	Z,00175$
   01C4 37                  830 	scf
   01C5                     831 00175$:
   01C5 3E 00               832 	ld	a, #0x00
   01C7 17                  833 	rla
   01C8 F8 07               834 	ldhl	sp,	#7
   01CA 77                  835 	ld	(hl), a
   01CB 21r9Dr00            836 	ld	hl, #_ups
   01CE 7E                  837 	ld	a, (hl)
   01CF F8 06               838 	ldhl	sp,	#6
   01D1 96                  839 	sub	a, (hl)
   01D2 3E 01               840 	ld	a, #0x01
   01D4 28 01               841 	jr	Z,00177$
   01D6 AF                  842 	xor	a, a
   01D7                     843 00177$:
   01D7 EE 01               844 	xor	a, #0x01
   01D9 F8 07               845 	ldhl	sp,	#7
   01DB 5E                  846 	ld	e, (hl)
   01DC A3                  847 	and	a,e
   01DD 28 08               848 	jr	Z,00105$
                            849 ;StateGame.c:126: ups = archer_data->ups;
   01DF E5                  850 	push	hl
   01E0 2B                  851 	dec	hl
   01E1 7E                  852 	ld	a, (hl)
   01E2 21r9Dr00            853 	ld	hl, #_ups
   01E5 77                  854 	ld	(hl), a
   01E6 E1                  855 	pop	hl
   01E7                     856 00105$:
                            857 ;StateGame.c:128: if (ups == -1){ //cioè vengo dal gameOver
   01E7 21r9Dr00            858 	ld	hl, #_ups
   01EA 7E                  859 	ld	a, (hl)
   01EB 3C                  860 	inc	a
   01EC 20 0A               861 	jr	NZ,00107$
                            862 ;StateGame.c:129: ups = 3;
   01EE 21r9Dr00            863 	ld	hl, #_ups
   01F1 36 03               864 	ld	(hl), #0x03
                            865 ;StateGame.c:130: coins = 99u;
   01F3 21r9Cr00            866 	ld	hl, #_coins
   01F6 36 63               867 	ld	(hl), #0x63
   01F8                     868 00107$:
                            869 ;StateGame.c:132: archer_data->ups =ups;
   01F8 21r9Dr00            870 	ld	hl, #_ups
   01FB 7E                  871 	ld	a, (hl)
   01FC 02                  872 	ld	(bc), a
                            873 ;StateGame.c:133: archer_data->hp = hp;
   01FD F8 04               874 	ldhl	sp,#(5 - 1)
   01FF 4E                  875 	ld	c, (hl)
   0200 23                  876 	inc	hl
   0201 46                  877 	ld	b, (hl)
   0202 03                  878 	inc	bc
   0203 03                  879 	inc	bc
   0204 21r9Er00            880 	ld	hl, #_hp
   0207 7E                  881 	ld	a, (hl)
   0208 02                  882 	ld	(bc), a
                            883 ;StateGame.c:134: archer_data->coins = coins;
   0209 F8 04               884 	ldhl	sp,#(5 - 1)
   020B 4E                  885 	ld	c, (hl)
   020C 23                  886 	inc	hl
   020D 46                  887 	ld	b, (hl)
   020E 03                  888 	inc	bc
   020F 21r9Cr00            889 	ld	hl, #_coins
   0212 7E                  890 	ld	a, (hl)
   0213 02                  891 	ld	(bc), a
                            892 ;StateGame.c:136: ShowWindow();
   0214 CDrC8r02            893 	call	_ShowWindow
                            894 ;StateGame.c:138: if(archer_data->tool == level_tool){
   0217 F8 04               895 	ldhl	sp,#(5 - 1)
   0219 5E                  896 	ld	e, (hl)
   021A 23                  897 	inc	hl
   021B 56                  898 	ld	d, (hl)
   021C 21 04 00            899 	ld	hl, #0x0004
   021F 19                  900 	add	hl, de
   0220 4D                  901 	ld	c, l
   0221 44                  902 	ld	b, h
   0222 0A                  903 	ld	a, (bc)
   0223 5F                  904 	ld	e, a
   0224 21r9Fr00            905 	ld	hl, #_level_tool
   0227 7E                  906 	ld	a, (hl)
   0228 93                  907 	sub	a, e
   0229 20 05               908 	jr	NZ,00109$
                            909 ;StateGame.c:139: WriteTOOL();
   022B C5                  910 	push	bc
   022C CDr35r09            911 	call	_WriteTOOL
   022F C1                  912 	pop	bc
   0230                     913 00109$:
                            914 ;StateGame.c:142: switch(current_level){
   0230 21rA3r00            915 	ld	hl, #_current_level
   0233 7E                  916 	ld	a, (hl)
   0234 B7                  917 	or	a, a
   0235 C2r99r02            918 	jp	NZ,00117$
                            919 ;StateGame.c:144: switch(current_map){
   0238 21rA4r00            920 	ld	hl, #_current_map
   023B 7E                  921 	ld	a, (hl)
   023C B7                  922 	or	a, a
   023D 28 0B               923 	jr	Z,00111$
   023F 21rA4r00            924 	ld	hl, #_current_map
   0242 7E                  925 	ld	a, (hl)
   0243 3D                  926 	dec	a
   0244 CAr8Ar02            927 	jp	Z,00114$
   0247 C3r8Fr02            928 	jp	00115$
                            929 ;StateGame.c:145: case 0:
   024A                     930 00111$:
                            931 ;StateGame.c:146: level_tool = 6;
   024A 21r9Fr00            932 	ld	hl, #_level_tool
   024D 36 06               933 	ld	(hl), #0x06
                            934 ;StateGame.c:148: if(archer_data->tool == 0){
   024F 0A                  935 	ld	a, (bc)
   0250 B7                  936 	or	a, a
   0251 C2rA6r02            937 	jp	NZ, 00118$
                            938 ;StateGame.c:149: populate_00();
   0254 CDrACr04            939 	call	_populate_00
                            940 ;StateGame.c:150: struct Sprite* key_sprite = SpriteManagerAdd(SpriteKey, 46*8, 2*8);
   0257 21 10 00            941 	ld	hl, #0x0010
   025A E5                  942 	push	hl
   025B 21 70 01            943 	ld	hl, #0x0170
   025E E5                  944 	push	hl
   025F 3E 04               945 	ld	a, #0x04
   0261 F5                  946 	push	af
   0262 33                  947 	inc	sp
   0263 CDr00r00            948 	call	_SpriteManagerAdd
   0266 E8 05               949 	add	sp, #5
   0268 4B                  950 	ld	c, e
   0269 42                  951 	ld	b, d
                            952 ;StateGame.c:151: struct ItemInfo* datakey = (struct ItemInfo*)key_sprite->custom_data;
   026A 21 19 00            953 	ld	hl, #0x0019
   026D 09                  954 	add	hl, bc
   026E 4D                  955 	ld	c, l
   026F 7C                  956 	ld	a, h
   0270 47                  957 	ld	b, a
                            958 ;StateGame.c:152: datakey->type = 1;
   0271 21 01 00            959 	ld	hl, #0x0001
   0274 09                  960 	add	hl, bc
   0275 7D                  961 	ld	a, l
   0276 54                  962 	ld	d, h
   0277 F8 06               963 	ldhl	sp,	#6
   0279 22                  964 	ld	(hl+), a
   027A 72                  965 	ld	(hl), d
   027B 2B                  966 	dec	hl
   027C 2A                  967 	ld	a, (hl+)
   027D 66                  968 	ld	h, (hl)
   027E 6F                  969 	ld	l, a
   027F 36 01               970 	ld	(hl), #0x01
                            971 ;StateGame.c:153: datakey->setup = 1u;
   0281 03                  972 	inc	bc
   0282 03                  973 	inc	bc
   0283 03                  974 	inc	bc
   0284 03                  975 	inc	bc
   0285 3E 01               976 	ld	a, #0x01
   0287 02                  977 	ld	(bc), a
                            978 ;StateGame.c:155: break;
   0288 18 1C               979 	jr	00118$
                            980 ;StateGame.c:156: case 1:
   028A                     981 00114$:
                            982 ;StateGame.c:157: populate_01();
   028A CDr1Er03            983 	call	_populate_01
                            984 ;StateGame.c:158: break;
   028D 18 17               985 	jr	00118$
                            986 ;StateGame.c:159: default:
   028F                     987 00115$:
                            988 ;StateGame.c:160: current_map = 0;
   028F 21rA4r00            989 	ld	hl, #_current_map
   0292 36 00               990 	ld	(hl), #0x00
                            991 ;StateGame.c:161: populate_00();
   0294 CDrACr04            992 	call	_populate_00
                            993 ;StateGame.c:164: break;
   0297 18 0D               994 	jr	00118$
                            995 ;StateGame.c:165: default:
   0299                     996 00117$:
                            997 ;StateGame.c:166: current_level = 0;
   0299 21rA3r00            998 	ld	hl, #_current_level
   029C 36 00               999 	ld	(hl), #0x00
                           1000 ;StateGame.c:167: current_map = 0;
   029E 21rA4r00           1001 	ld	hl, #_current_map
   02A1 36 00              1002 	ld	(hl), #0x00
                           1003 ;StateGame.c:168: populate_00();
   02A3 CDrACr04           1004 	call	_populate_00
                           1005 ;StateGame.c:170: }
   02A6                    1006 00118$:
                           1007 ;StateGame.c:173: NR52_REG = 0x80; //Enables sound, you should always setup this first
   02A6 3E 80              1008 	ld	a, #0x80
   02A8 E0r00              1009 	ldh	(_NR52_REG+0),a
                           1010 ;StateGame.c:174: NR51_REG = 0xFF; //Enables all channels (left and right)
   02AA 3E FF              1011 	ld	a, #0xff
   02AC E0r00              1012 	ldh	(_NR51_REG+0),a
                           1013 ;StateGame.c:176: }
   02AE E8 08              1014 	add	sp, #8
   02B0 C9                 1015 	ret
   02B1                    1016 _level_names:
   02B1rB5r02              1017 	.dw __str_0
   02B3rBDr02              1018 	.dw __str_1
   02B5                    1019 __str_0:
   02B5 54 48 45 20 5A 4F  1020 	.ascii "THE ZOO"
        4F
   02BC 00                 1021 	.db 0x00
   02BD                    1022 __str_1:
   02BD 54 48 45 20 53 45  1023 	.ascii "THE SEWERS"
        57 45 52 53
   02C7 00                 1024 	.db 0x00
                           1025 ;StateGame.c:178: void ShowWindow(){
                           1026 ;	---------------------------------
                           1027 ; Function ShowWindow
                           1028 ; ---------------------------------
   02C8                    1029 _ShowWindow::
                           1030 ;StateGame.c:179: HIDE_WIN;
   02C8 F0r00              1031 	ldh	a, (_LCDC_REG+0)
   02CA E6 DF              1032 	and	a, #0xdf
   02CC E0r00              1033 	ldh	(_LCDC_REG+0),a
                           1034 ;StateGame.c:181: WX_REG = 7;
   02CE 3E 07              1035 	ld	a, #0x07
   02D0 E0r00              1036 	ldh	(_WX_REG+0),a
                           1037 ;StateGame.c:182: WY_REG = 144 - 32;
   02D2 3E 70              1038 	ld	a, #0x70
   02D4 E0r00              1039 	ldh	(_WY_REG+0),a
                           1040 ;StateGame.c:183: InitWindow(0, 0, &window);
   02D6 21r00r00           1041 	ld	hl, #_window
   02D9 E5                 1042 	push	hl
   02DA AF                 1043 	xor	a, a
   02DB F5                 1044 	push	af
   02DC 33                 1045 	inc	sp
   02DD AF                 1046 	xor	a, a
   02DE F5                 1047 	push	af
   02DF 33                 1048 	inc	sp
   02E0 CDr00r00           1049 	call	_InitWindow
   02E3 E8 04              1050 	add	sp, #4
                           1051 ;StateGame.c:184: SHOW_WIN;
   02E5 F0r00              1052 	ldh	a, (_LCDC_REG+0)
   02E7 F6 20              1053 	or	a, #0x20
   02E9 E0r00              1054 	ldh	(_LCDC_REG+0),a
                           1055 ;StateGame.c:186: WriteAMULET();
   02EB CDrE2r07           1056 	call	_WriteAMULET
                           1057 ;StateGame.c:187: WriteCOINS();
   02EE CDr7Fr08           1058 	call	_WriteCOINS
                           1059 ;StateGame.c:188: WriteHP();
   02F1 CDrB1r08           1060 	call	_WriteHP
                           1061 ;StateGame.c:189: WriteUPS();
   02F4 CDr72r09           1062 	call	_WriteUPS
                           1063 ;StateGame.c:190: WriteMap();
                           1064 ;StateGame.c:192: }
   02F7 C3r5Br08           1065 	jp	_WriteMap
                           1066 ;StateGame.c:194: void ShowDiag(){
                           1067 ;	---------------------------------
                           1068 ; Function ShowDiag
                           1069 ; ---------------------------------
   02FA                    1070 _ShowDiag::
                           1071 ;StateGame.c:195: HIDE_WIN;
   02FA F0r00              1072 	ldh	a, (_LCDC_REG+0)
   02FC E6 DF              1073 	and	a, #0xdf
   02FE E0r00              1074 	ldh	(_LCDC_REG+0),a
                           1075 ;StateGame.c:197: WX_REG = 7;
   0300 3E 07              1076 	ld	a, #0x07
   0302 E0r00              1077 	ldh	(_WX_REG+0),a
                           1078 ;StateGame.c:198: WY_REG = 144 - 32;
   0304 3E 70              1079 	ld	a, #0x70
   0306 E0r00              1080 	ldh	(_WY_REG+0),a
                           1081 ;StateGame.c:199: InitWindow(0, 0, &diag);
   0308 21r00r00           1082 	ld	hl, #_diag
   030B E5                 1083 	push	hl
   030C AF                 1084 	xor	a, a
   030D F5                 1085 	push	af
   030E 33                 1086 	inc	sp
   030F AF                 1087 	xor	a, a
   0310 F5                 1088 	push	af
   0311 33                 1089 	inc	sp
   0312 CDr00r00           1090 	call	_InitWindow
   0315 E8 04              1091 	add	sp, #4
                           1092 ;StateGame.c:200: SHOW_WIN;
   0317 F0r00              1093 	ldh	a, (_LCDC_REG+0)
   0319 F6 20              1094 	or	a, #0x20
   031B E0r00              1095 	ldh	(_LCDC_REG+0),a
                           1096 ;StateGame.c:201: }
   031D C9                 1097 	ret
                           1098 ;StateGame.c:203: void populate_01(){
                           1099 ;	---------------------------------
                           1100 ; Function populate_01
                           1101 ; ---------------------------------
   031E                    1102 _populate_01::
   031E E8 EB              1103 	add	sp, #-21
                           1104 ;StateGame.c:206: UINT8 platform_positions_x[] = {9}; //10
   0320 F8 00              1105 	ldhl	sp,	#0
   0322 7D                 1106 	ld	a, l
   0323 54                 1107 	ld	d, h
   0324 F8 0E              1108 	ldhl	sp,	#14
   0326 22                 1109 	ld	(hl+), a
   0327 72                 1110 	ld	(hl), d
   0328 2B                 1111 	dec	hl
   0329 2A                 1112 	ld	a, (hl+)
   032A 66                 1113 	ld	h, (hl)
   032B 6F                 1114 	ld	l, a
   032C 36 09              1115 	ld	(hl), #0x09
                           1116 ;StateGame.c:207: UINT8 platform_positions_y[] = {21}; //30
   032E F8 01              1117 	ldhl	sp,	#1
   0330 7D                 1118 	ld	a, l
   0331 54                 1119 	ld	d, h
   0332 F8 10              1120 	ldhl	sp,	#16
   0334 22                 1121 	ld	(hl+), a
   0335 72                 1122 	ld	(hl), d
   0336 2B                 1123 	dec	hl
   0337 2A                 1124 	ld	a, (hl+)
   0338 66                 1125 	ld	h, (hl)
   0339 6F                 1126 	ld	l, a
   033A 36 15              1127 	ld	(hl), #0x15
                           1128 ;StateGame.c:209: for(plc=0; plc < platform_count; plc++){
   033C AF                 1129 	xor	a, a
   033D F8 14              1130 	ldhl	sp,	#20
   033F 77                 1131 	ld	(hl), a
   0340                    1132 00108$:
   0340 F8 14              1133 	ldhl	sp,	#20
   0342 7E                 1134 	ld	a, (hl)
   0343 D6 01              1135 	sub	a, #0x01
   0345 D2rB0r03           1136 	jp	NC, 00101$
                           1137 ;StateGame.c:210: struct Sprite* platform_sprite = SpriteManagerAdd(SpritePlatform, platform_positions_x[plc]*8, platform_positions_y[plc]*8);
   0348 F8 10              1138 	ldhl	sp,#(17 - 1)
   034A 5E                 1139 	ld	e, (hl)
   034B 23                 1140 	inc	hl
   034C 56                 1141 	ld	d, (hl)
   034D F8 14              1142 	ldhl	sp,	#20
   034F 6E                 1143 	ld	l, (hl)
   0350 26 00              1144 	ld	h, #0x00
   0352 19                 1145 	add	hl, de
   0353 4D                 1146 	ld	c, l
   0354 44                 1147 	ld	b, h
   0355 0A                 1148 	ld	a, (bc)
   0356 4F                 1149 	ld	c, a
   0357 06 00              1150 	ld	b, #0x00
   0359 CB 21              1151 	sla	c
   035B CB 10              1152 	rl	b
   035D CB 21              1153 	sla	c
   035F CB 10              1154 	rl	b
   0361 CB 21              1155 	sla	c
   0363 CB 10              1156 	rl	b
   0365 F8 0E              1157 	ldhl	sp,#(15 - 1)
   0367 5E                 1158 	ld	e, (hl)
   0368 23                 1159 	inc	hl
   0369 56                 1160 	ld	d, (hl)
   036A F8 14              1161 	ldhl	sp,	#20
   036C 6E                 1162 	ld	l, (hl)
   036D 26 00              1163 	ld	h, #0x00
   036F 19                 1164 	add	hl, de
   0370 7D                 1165 	ld	a, l
   0371 54                 1166 	ld	d, h
   0372 F8 12              1167 	ldhl	sp,	#18
   0374 22                 1168 	ld	(hl+), a
   0375 72                 1169 	ld	(hl), d
   0376 2B                 1170 	dec	hl
   0377 5E                 1171 	ld	e, (hl)
   0378 23                 1172 	inc	hl
   0379 56                 1173 	ld	d, (hl)
   037A 1A                 1174 	ld	a,(de)
   037B 5F                 1175 	ld	e, a
   037C 16 00              1176 	ld	d, #0x00
   037E CB 23              1177 	sla	e
   0380 CB 12              1178 	rl	d
   0382 CB 23              1179 	sla	e
   0384 CB 12              1180 	rl	d
   0386 CB 23              1181 	sla	e
   0388 CB 12              1182 	rl	d
   038A C5                 1183 	push	bc
   038B D5                 1184 	push	de
   038C 3E 02              1185 	ld	a, #0x02
   038E F5                 1186 	push	af
   038F 33                 1187 	inc	sp
   0390 CDr00r00           1188 	call	_SpriteManagerAdd
   0393 E8 05              1189 	add	sp, #5
   0395 4B                 1190 	ld	c, e
   0396 42                 1191 	ld	b, d
                           1192 ;StateGame.c:211: struct PlatformInfo* dataplatform = (struct PlatformInfo*)platform_sprite->custom_data;
   0397 21 19 00           1193 	ld	hl, #0x0019
   039A 09                 1194 	add	hl, bc
   039B 4D                 1195 	ld	c, l
   039C 7C                 1196 	ld	a, h
   039D 47                 1197 	ld	b, a
                           1198 ;StateGame.c:212: dataplatform->initx = platform_positions_x[plc]*8;	
   039E 03                 1199 	inc	bc
   039F 03                 1200 	inc	bc
   03A0 03                 1201 	inc	bc
   03A1 F8 12              1202 	ldhl	sp,#(19 - 1)
   03A3 5E                 1203 	ld	e, (hl)
   03A4 23                 1204 	inc	hl
   03A5 56                 1205 	ld	d, (hl)
   03A6 1A                 1206 	ld	a,(de)
   03A7 87                 1207 	add	a, a
   03A8 87                 1208 	add	a, a
   03A9 87                 1209 	add	a, a
   03AA 02                 1210 	ld	(bc), a
                           1211 ;StateGame.c:209: for(plc=0; plc < platform_count; plc++){
   03AB 23                 1212 	inc	hl
   03AC 34                 1213 	inc	(hl)
   03AD C3r40r03           1214 	jp	00108$
   03B0                    1215 00101$:
                           1216 ;StateGame.c:217: UINT8 e_positions_x[] = {32, 15, 17};
   03B0 F8 02              1217 	ldhl	sp,	#2
   03B2 7D                 1218 	ld	a, l
   03B3 54                 1219 	ld	d, h
   03B4 F8 0B              1220 	ldhl	sp,	#11
   03B6 22                 1221 	ld	(hl+), a
   03B7 72                 1222 	ld	(hl), d
   03B8 2B                 1223 	dec	hl
   03B9 2A                 1224 	ld	a, (hl+)
   03BA 66                 1225 	ld	h, (hl)
   03BB 6F                 1226 	ld	l, a
   03BC 36 20              1227 	ld	(hl), #0x20
   03BE F8 0B              1228 	ldhl	sp,#(12 - 1)
   03C0 4E                 1229 	ld	c, (hl)
   03C1 23                 1230 	inc	hl
   03C2 46                 1231 	ld	b, (hl)
   03C3 03                 1232 	inc	bc
   03C4 3E 0F              1233 	ld	a, #0x0f
   03C6 02                 1234 	ld	(bc), a
   03C7 2B                 1235 	dec	hl
   03C8 4E                 1236 	ld	c, (hl)
   03C9 23                 1237 	inc	hl
   03CA 46                 1238 	ld	b, (hl)
   03CB 03                 1239 	inc	bc
   03CC 03                 1240 	inc	bc
   03CD 3E 11              1241 	ld	a, #0x11
   03CF 02                 1242 	ld	(bc), a
                           1243 ;StateGame.c:218: UINT8 e_positions_y[] = {9, 4, 39};
   03D0 F8 05              1244 	ldhl	sp,	#5
   03D2 7D                 1245 	ld	a, l
   03D3 54                 1246 	ld	d, h
   03D4 F8 0D              1247 	ldhl	sp,	#13
   03D6 22                 1248 	ld	(hl+), a
   03D7 72                 1249 	ld	(hl), d
   03D8 2B                 1250 	dec	hl
   03D9 2A                 1251 	ld	a, (hl+)
   03DA 66                 1252 	ld	h, (hl)
   03DB 6F                 1253 	ld	l, a
   03DC 36 09              1254 	ld	(hl), #0x09
   03DE F8 0D              1255 	ldhl	sp,#(14 - 1)
   03E0 4E                 1256 	ld	c, (hl)
   03E1 23                 1257 	inc	hl
   03E2 46                 1258 	ld	b, (hl)
   03E3 03                 1259 	inc	bc
   03E4 3E 04              1260 	ld	a, #0x04
   03E6 02                 1261 	ld	(bc), a
   03E7 2B                 1262 	dec	hl
   03E8 4E                 1263 	ld	c, (hl)
   03E9 23                 1264 	inc	hl
   03EA 46                 1265 	ld	b, (hl)
   03EB 03                 1266 	inc	bc
   03EC 03                 1267 	inc	bc
   03ED 3E 27              1268 	ld	a, #0x27
   03EF 02                 1269 	ld	(bc), a
                           1270 ;StateGame.c:219: INT8 e_types[] = {0, 1, 2}; //0=snake, 1=scorpion, 2=porcupine
   03F0 F8 08              1271 	ldhl	sp,	#8
   03F2 7D                 1272 	ld	a, l
   03F3 54                 1273 	ld	d, h
   03F4 F8 0F              1274 	ldhl	sp,	#15
   03F6 22                 1275 	ld	(hl+), a
   03F7 72                 1276 	ld	(hl), d
   03F8 2B                 1277 	dec	hl
   03F9 2A                 1278 	ld	a, (hl+)
   03FA 66                 1279 	ld	h, (hl)
   03FB 6F                 1280 	ld	l, a
   03FC 36 00              1281 	ld	(hl), #0x00
   03FE F8 0F              1282 	ldhl	sp,#(16 - 1)
   0400 4E                 1283 	ld	c, (hl)
   0401 23                 1284 	inc	hl
   0402 46                 1285 	ld	b, (hl)
   0403 03                 1286 	inc	bc
   0404 3E 01              1287 	ld	a, #0x01
   0406 02                 1288 	ld	(bc), a
   0407 2B                 1289 	dec	hl
   0408 4E                 1290 	ld	c, (hl)
   0409 23                 1291 	inc	hl
   040A 46                 1292 	ld	b, (hl)
   040B 03                 1293 	inc	bc
   040C 03                 1294 	inc	bc
   040D 3E 02              1295 	ld	a, #0x02
   040F 02                 1296 	ld	(bc), a
                           1297 ;StateGame.c:220: for(plc=0; plc < e_count; plc++){
   0410 AF                 1298 	xor	a, a
   0411 F8 14              1299 	ldhl	sp,	#20
   0413 77                 1300 	ld	(hl), a
   0414                    1301 00111$:
   0414 F8 14              1302 	ldhl	sp,	#20
   0416 7E                 1303 	ld	a, (hl)
   0417 D6 03              1304 	sub	a, #0x03
   0419 D2rA9r04           1305 	jp	NC, 00113$
                           1306 ;StateGame.c:221: switch(e_types[plc]){
   041C F8 0F              1307 	ldhl	sp,#(16 - 1)
   041E 5E                 1308 	ld	e, (hl)
   041F 23                 1309 	inc	hl
   0420 56                 1310 	ld	d, (hl)
   0421 F8 14              1311 	ldhl	sp,	#20
   0423 6E                 1312 	ld	l, (hl)
   0424 26 00              1313 	ld	h, #0x00
   0426 19                 1314 	add	hl, de
   0427 4D                 1315 	ld	c, l
   0428 44                 1316 	ld	b, h
   0429 0A                 1317 	ld	a, (bc)
   042A F8 11              1318 	ldhl	sp,	#17
   042C 77                 1319 	ld	(hl), a
                           1320 ;StateGame.c:222: case 1: SpriteManagerAdd(SpriteScorpion, e_positions_x[plc]*8, e_positions_y[plc]*8); break;
   042D F8 0D              1321 	ldhl	sp,#(14 - 1)
   042F 5E                 1322 	ld	e, (hl)
   0430 23                 1323 	inc	hl
   0431 56                 1324 	ld	d, (hl)
   0432 F8 14              1325 	ldhl	sp,	#20
   0434 6E                 1326 	ld	l, (hl)
   0435 26 00              1327 	ld	h, #0x00
   0437 19                 1328 	add	hl, de
   0438 4D                 1329 	ld	c, l
   0439 44                 1330 	ld	b, h
   043A F8 0B              1331 	ldhl	sp,#(12 - 1)
   043C 5E                 1332 	ld	e, (hl)
   043D 23                 1333 	inc	hl
   043E 56                 1334 	ld	d, (hl)
   043F F8 14              1335 	ldhl	sp,	#20
   0441 6E                 1336 	ld	l, (hl)
   0442 26 00              1337 	ld	h, #0x00
   0444 19                 1338 	add	hl, de
   0445 7D                 1339 	ld	a, l
   0446 54                 1340 	ld	d, h
   0447 F8 12              1341 	ldhl	sp,	#18
   0449 22                 1342 	ld	(hl+), a
   044A 72                 1343 	ld	(hl), d
   044B 0A                 1344 	ld	a, (bc)
   044C 4F                 1345 	ld	c, a
   044D 2B                 1346 	dec	hl
   044E 5E                 1347 	ld	e, (hl)
   044F 23                 1348 	inc	hl
   0450 56                 1349 	ld	d, (hl)
   0451 1A                 1350 	ld	a,(de)
   0452 06 00              1351 	ld	b, #0x00
   0454 5F                 1352 	ld	e, a
   0455 16 00              1353 	ld	d, #0x00
   0457 CB 21              1354 	sla	c
   0459 CB 10              1355 	rl	b
   045B CB 21              1356 	sla	c
   045D CB 10              1357 	rl	b
   045F CB 21              1358 	sla	c
   0461 CB 10              1359 	rl	b
   0463 CB 23              1360 	sla	e
   0465 CB 12              1361 	rl	d
   0467 CB 23              1362 	sla	e
   0469 CB 12              1363 	rl	d
   046B CB 23              1364 	sla	e
   046D CB 12              1365 	rl	d
                           1366 ;StateGame.c:221: switch(e_types[plc]){
   046F 2B                 1367 	dec	hl
   0470 2B                 1368 	dec	hl
   0471 7E                 1369 	ld	a, (hl)
   0472 3D                 1370 	dec	a
   0473 28 09              1371 	jr	Z,00102$
   0475 F8 11              1372 	ldhl	sp,	#17
   0477 7E                 1373 	ld	a, (hl)
   0478 D6 02              1374 	sub	a, #0x02
   047A 28 0F              1375 	jr	Z,00103$
   047C 18 1A              1376 	jr	00104$
                           1377 ;StateGame.c:222: case 1: SpriteManagerAdd(SpriteScorpion, e_positions_x[plc]*8, e_positions_y[plc]*8); break;
   047E                    1378 00102$:
   047E C5                 1379 	push	bc
   047F D5                 1380 	push	de
   0480 3E 07              1381 	ld	a, #0x07
   0482 F5                 1382 	push	af
   0483 33                 1383 	inc	sp
   0484 CDr00r00           1384 	call	_SpriteManagerAdd
   0487 E8 05              1385 	add	sp, #5
   0489 18 18              1386 	jr	00112$
                           1387 ;StateGame.c:223: case 2: SpriteManagerAdd(SpritePorcupine, e_positions_x[plc]*8, e_positions_y[plc]*8); break;
   048B                    1388 00103$:
   048B C5                 1389 	push	bc
   048C D5                 1390 	push	de
   048D 3E 08              1391 	ld	a, #0x08
   048F F5                 1392 	push	af
   0490 33                 1393 	inc	sp
   0491 CDr00r00           1394 	call	_SpriteManagerAdd
   0494 E8 05              1395 	add	sp, #5
   0496 18 0B              1396 	jr	00112$
                           1397 ;StateGame.c:224: default: SpriteManagerAdd(SpriteEnemy, e_positions_x[plc]*8, e_positions_y[plc]*8);
   0498                    1398 00104$:
   0498 C5                 1399 	push	bc
   0499 D5                 1400 	push	de
   049A 3E 06              1401 	ld	a, #0x06
   049C F5                 1402 	push	af
   049D 33                 1403 	inc	sp
   049E CDr00r00           1404 	call	_SpriteManagerAdd
   04A1 E8 05              1405 	add	sp, #5
                           1406 ;StateGame.c:225: }
   04A3                    1407 00112$:
                           1408 ;StateGame.c:220: for(plc=0; plc < e_count; plc++){
   04A3 F8 14              1409 	ldhl	sp,	#20
   04A5 34                 1410 	inc	(hl)
   04A6 C3r14r04           1411 	jp	00111$
   04A9                    1412 00113$:
                           1413 ;StateGame.c:227: }
   04A9 E8 15              1414 	add	sp, #21
   04AB C9                 1415 	ret
                           1416 ;StateGame.c:229: void populate_00(){
                           1417 ;	---------------------------------
                           1418 ; Function populate_00
                           1419 ; ---------------------------------
   04AC                    1420 _populate_00::
   04AC E8 E3              1421 	add	sp, #-29
                           1422 ;StateGame.c:232: INT8 scrigni_positions_x[] = {9, 12, 6, 17};
   04AE F8 00              1423 	ldhl	sp,	#0
   04B0 7D                 1424 	ld	a, l
   04B1 54                 1425 	ld	d, h
   04B2 F8 12              1426 	ldhl	sp,	#18
   04B4 22                 1427 	ld	(hl+), a
   04B5 72                 1428 	ld	(hl), d
   04B6 2B                 1429 	dec	hl
   04B7 2A                 1430 	ld	a, (hl+)
   04B8 66                 1431 	ld	h, (hl)
   04B9 6F                 1432 	ld	l, a
   04BA 36 09              1433 	ld	(hl), #0x09
   04BC F8 12              1434 	ldhl	sp,#(19 - 1)
   04BE 4E                 1435 	ld	c, (hl)
   04BF 23                 1436 	inc	hl
   04C0 46                 1437 	ld	b, (hl)
   04C1 03                 1438 	inc	bc
   04C2 3E 0C              1439 	ld	a, #0x0c
   04C4 02                 1440 	ld	(bc), a
   04C5 2B                 1441 	dec	hl
   04C6 4E                 1442 	ld	c, (hl)
   04C7 23                 1443 	inc	hl
   04C8 46                 1444 	ld	b, (hl)
   04C9 03                 1445 	inc	bc
   04CA 03                 1446 	inc	bc
   04CB 3E 06              1447 	ld	a, #0x06
   04CD 02                 1448 	ld	(bc), a
   04CE 2B                 1449 	dec	hl
   04CF 4E                 1450 	ld	c, (hl)
   04D0 23                 1451 	inc	hl
   04D1 46                 1452 	ld	b, (hl)
   04D2 03                 1453 	inc	bc
   04D3 03                 1454 	inc	bc
   04D4 03                 1455 	inc	bc
   04D5 3E 11              1456 	ld	a, #0x11
   04D7 02                 1457 	ld	(bc), a
                           1458 ;StateGame.c:233: INT8 scrigni_positions_y[] = {14, 23, 4, 36};
   04D8 F8 04              1459 	ldhl	sp,	#4
   04DA 7D                 1460 	ld	a, l
   04DB 54                 1461 	ld	d, h
   04DC F8 14              1462 	ldhl	sp,	#20
   04DE 22                 1463 	ld	(hl+), a
   04DF 72                 1464 	ld	(hl), d
   04E0 2B                 1465 	dec	hl
   04E1 2A                 1466 	ld	a, (hl+)
   04E2 66                 1467 	ld	h, (hl)
   04E3 6F                 1468 	ld	l, a
   04E4 36 0E              1469 	ld	(hl), #0x0e
   04E6 F8 14              1470 	ldhl	sp,#(21 - 1)
   04E8 4E                 1471 	ld	c, (hl)
   04E9 23                 1472 	inc	hl
   04EA 46                 1473 	ld	b, (hl)
   04EB 03                 1474 	inc	bc
   04EC 3E 17              1475 	ld	a, #0x17
   04EE 02                 1476 	ld	(bc), a
   04EF 2B                 1477 	dec	hl
   04F0 4E                 1478 	ld	c, (hl)
   04F1 23                 1479 	inc	hl
   04F2 46                 1480 	ld	b, (hl)
   04F3 03                 1481 	inc	bc
   04F4 03                 1482 	inc	bc
   04F5 3E 04              1483 	ld	a, #0x04
   04F7 02                 1484 	ld	(bc), a
   04F8 2B                 1485 	dec	hl
   04F9 4E                 1486 	ld	c, (hl)
   04FA 23                 1487 	inc	hl
   04FB 46                 1488 	ld	b, (hl)
   04FC 03                 1489 	inc	bc
   04FD 03                 1490 	inc	bc
   04FE 03                 1491 	inc	bc
   04FF 3E 24              1492 	ld	a, #0x24
   0501 02                 1493 	ld	(bc), a
                           1494 ;StateGame.c:234: INT8 st [] = {1, 1, 1, 3};
   0502 F8 08              1495 	ldhl	sp,	#8
   0504 7D                 1496 	ld	a, l
   0505 54                 1497 	ld	d, h
   0506 F8 16              1498 	ldhl	sp,	#22
   0508 22                 1499 	ld	(hl+), a
   0509 72                 1500 	ld	(hl), d
   050A 2B                 1501 	dec	hl
   050B 2A                 1502 	ld	a, (hl+)
   050C 66                 1503 	ld	h, (hl)
   050D 6F                 1504 	ld	l, a
   050E 36 01              1505 	ld	(hl), #0x01
   0510 F8 16              1506 	ldhl	sp,#(23 - 1)
   0512 4E                 1507 	ld	c, (hl)
   0513 23                 1508 	inc	hl
   0514 46                 1509 	ld	b, (hl)
   0515 03                 1510 	inc	bc
   0516 3E 01              1511 	ld	a, #0x01
   0518 02                 1512 	ld	(bc), a
   0519 2B                 1513 	dec	hl
   051A 4E                 1514 	ld	c, (hl)
   051B 23                 1515 	inc	hl
   051C 46                 1516 	ld	b, (hl)
   051D 03                 1517 	inc	bc
   051E 03                 1518 	inc	bc
   051F 3E 01              1519 	ld	a, #0x01
   0521 02                 1520 	ld	(bc), a
   0522 2B                 1521 	dec	hl
   0523 4E                 1522 	ld	c, (hl)
   0524 23                 1523 	inc	hl
   0525 46                 1524 	ld	b, (hl)
   0526 03                 1525 	inc	bc
   0527 03                 1526 	inc	bc
   0528 03                 1527 	inc	bc
   0529 3E 03              1528 	ld	a, #0x03
   052B 02                 1529 	ld	(bc), a
                           1530 ;StateGame.c:237: for(c=0; c < count; c++){
   052C AF                 1531 	xor	a, a
   052D F8 1C              1532 	ldhl	sp,	#28
   052F 77                 1533 	ld	(hl), a
   0530                    1534 00104$:
   0530 F8 1C              1535 	ldhl	sp,	#28
   0532 7E                 1536 	ld	a, (hl)
   0533 EE 80              1537 	xor	a, #0x80
   0535 D6 83              1538 	sub	a, #0x83
   0537 D2rDCr05           1539 	jp	NC, 00101$
                           1540 ;StateGame.c:238: struct Sprite* scrigno_sprite = SpriteManagerAdd(SpriteItem, scrigni_positions_x[c]*8, scrigni_positions_y[c]*8);
   053A 7E                 1541 	ld	a, (hl)
   053B F8 18              1542 	ldhl	sp,	#24
   053D 77                 1543 	ld	(hl), a
   053E 17                 1544 	rla
   053F 9F                 1545 	sbc	a, a
   0540 23                 1546 	inc	hl
   0541 32                 1547 	ld	(hl-), a
   0542 5E                 1548 	ld	e, (hl)
   0543 23                 1549 	inc	hl
   0544 56                 1550 	ld	d, (hl)
   0545 F8 14              1551 	ldhl	sp,	#20
   0547 2A                 1552 	ld	a, (hl+)
   0548 66                 1553 	ld	h, (hl)
   0549 6F                 1554 	ld	l, a
   054A 19                 1555 	add	hl, de
   054B 4D                 1556 	ld	c, l
   054C 44                 1557 	ld	b, h
   054D 0A                 1558 	ld	a, (bc)
   054E 4F                 1559 	ld	c, a
   054F 17                 1560 	rla
   0550 9F                 1561 	sbc	a, a
   0551 47                 1562 	ld	b, a
   0552 CB 21              1563 	sla	c
   0554 CB 10              1564 	rl	b
   0556 CB 21              1565 	sla	c
   0558 CB 10              1566 	rl	b
   055A CB 21              1567 	sla	c
   055C CB 10              1568 	rl	b
   055E F8 1A              1569 	ldhl	sp,	#26
   0560 71                 1570 	ld	(hl), c
   0561 23                 1571 	inc	hl
   0562 70                 1572 	ld	(hl), b
   0563 2B                 1573 	dec	hl
   0564 2B                 1574 	dec	hl
   0565 2B                 1575 	dec	hl
   0566 5E                 1576 	ld	e, (hl)
   0567 23                 1577 	inc	hl
   0568 56                 1578 	ld	d, (hl)
   0569 F8 12              1579 	ldhl	sp,	#18
   056B 2A                 1580 	ld	a, (hl+)
   056C 66                 1581 	ld	h, (hl)
   056D 6F                 1582 	ld	l, a
   056E 19                 1583 	add	hl, de
   056F 4D                 1584 	ld	c, l
   0570 44                 1585 	ld	b, h
   0571 0A                 1586 	ld	a, (bc)
   0572 4F                 1587 	ld	c, a
   0573 17                 1588 	rla
   0574 9F                 1589 	sbc	a, a
   0575 47                 1590 	ld	b, a
   0576 CB 21              1591 	sla	c
   0578 CB 10              1592 	rl	b
   057A CB 21              1593 	sla	c
   057C CB 10              1594 	rl	b
   057E CB 21              1595 	sla	c
   0580 CB 10              1596 	rl	b
   0582 F8 1A              1597 	ldhl	sp,	#26
   0584 2A                 1598 	ld	a, (hl+)
   0585 66                 1599 	ld	h, (hl)
   0586 6F                 1600 	ld	l, a
   0587 E5                 1601 	push	hl
   0588 C5                 1602 	push	bc
   0589 3E 03              1603 	ld	a, #0x03
   058B F5                 1604 	push	af
   058C 33                 1605 	inc	sp
   058D CDr00r00           1606 	call	_SpriteManagerAdd
   0590 E8 05              1607 	add	sp, #5
   0592 4B                 1608 	ld	c, e
   0593 42                 1609 	ld	b, d
                           1610 ;StateGame.c:239: struct ItemInfo* datascrigno = (struct ItemInfo*)scrigno_sprite->custom_data;
   0594 21 19 00           1611 	ld	hl, #0x0019
   0597 09                 1612 	add	hl, bc
   0598 4D                 1613 	ld	c, l
   0599 7C                 1614 	ld	a, h
   059A 47                 1615 	ld	b, a
                           1616 ;StateGame.c:240: datascrigno->type = 10;
   059B 21 01 00           1617 	ld	hl, #0x0001
   059E 09                 1618 	add	hl, bc
   059F 7D                 1619 	ld	a, l
   05A0 54                 1620 	ld	d, h
   05A1 F8 1A              1621 	ldhl	sp,	#26
   05A3 22                 1622 	ld	(hl+), a
   05A4 72                 1623 	ld	(hl), d
   05A5 2B                 1624 	dec	hl
   05A6 2A                 1625 	ld	a, (hl+)
   05A7 66                 1626 	ld	h, (hl)
   05A8 6F                 1627 	ld	l, a
   05A9 36 0A              1628 	ld	(hl), #0x0a
                           1629 ;StateGame.c:241: datascrigno->setup = 1u;
   05AB 21 04 00           1630 	ld	hl, #0x0004
   05AE 09                 1631 	add	hl, bc
   05AF 7D                 1632 	ld	a, l
   05B0 54                 1633 	ld	d, h
   05B1 F8 1A              1634 	ldhl	sp,	#26
   05B3 22                 1635 	ld	(hl+), a
   05B4 72                 1636 	ld	(hl), d
   05B5 2B                 1637 	dec	hl
   05B6 2A                 1638 	ld	a, (hl+)
   05B7 66                 1639 	ld	h, (hl)
   05B8 6F                 1640 	ld	l, a
   05B9 36 01              1641 	ld	(hl), #0x01
                           1642 ;StateGame.c:242: datascrigno->content_type = st[c]; 
   05BB 03                 1643 	inc	bc
   05BC 03                 1644 	inc	bc
   05BD 03                 1645 	inc	bc
   05BE 03                 1646 	inc	bc
   05BF 03                 1647 	inc	bc
   05C0 F8 18              1648 	ldhl	sp,#(25 - 1)
   05C2 5E                 1649 	ld	e, (hl)
   05C3 23                 1650 	inc	hl
   05C4 56                 1651 	ld	d, (hl)
   05C5 F8 16              1652 	ldhl	sp,	#22
   05C7 2A                 1653 	ld	a, (hl+)
   05C8 66                 1654 	ld	h, (hl)
   05C9 6F                 1655 	ld	l, a
   05CA 19                 1656 	add	hl, de
   05CB 7D                 1657 	ld	a, l
   05CC 54                 1658 	ld	d, h
   05CD F8 1A              1659 	ldhl	sp,	#26
   05CF 22                 1660 	ld	(hl+), a
   05D0 72                 1661 	ld	(hl), d
   05D1 2B                 1662 	dec	hl
   05D2 5E                 1663 	ld	e, (hl)
   05D3 23                 1664 	inc	hl
   05D4 56                 1665 	ld	d, (hl)
   05D5 1A                 1666 	ld	a,(de)
   05D6 02                 1667 	ld	(bc), a
                           1668 ;StateGame.c:237: for(c=0; c < count; c++){
   05D7 23                 1669 	inc	hl
   05D8 34                 1670 	inc	(hl)
   05D9 C3r30r05           1671 	jp	00104$
   05DC                    1672 00101$:
                           1673 ;StateGame.c:248: INT8 invitems_positions_x[] = {31}; //13
   05DC F8 0C              1674 	ldhl	sp,	#12
   05DE 7D                 1675 	ld	a, l
   05DF 54                 1676 	ld	d, h
   05E0 F8 10              1677 	ldhl	sp,	#16
   05E2 22                 1678 	ld	(hl+), a
   05E3 72                 1679 	ld	(hl), d
   05E4 2B                 1680 	dec	hl
   05E5 2A                 1681 	ld	a, (hl+)
   05E6 66                 1682 	ld	h, (hl)
   05E7 6F                 1683 	ld	l, a
   05E8 36 1F              1684 	ld	(hl), #0x1f
                           1685 ;StateGame.c:249: INT8 invitems_positions_y[] = {27};//11
   05EA F8 0D              1686 	ldhl	sp,	#13
   05EC 7D                 1687 	ld	a, l
   05ED 54                 1688 	ld	d, h
   05EE F8 12              1689 	ldhl	sp,	#18
   05F0 22                 1690 	ld	(hl+), a
   05F1 72                 1691 	ld	(hl), d
   05F2 2B                 1692 	dec	hl
   05F3 2A                 1693 	ld	a, (hl+)
   05F4 66                 1694 	ld	h, (hl)
   05F5 6F                 1695 	ld	l, a
   05F6 36 1B              1696 	ld	(hl), #0x1b
                           1697 ;StateGame.c:250: INT8 iit [] = {3, 1};
   05F8 F8 0E              1698 	ldhl	sp,	#14
   05FA 7D                 1699 	ld	a, l
   05FB 54                 1700 	ld	d, h
   05FC F8 14              1701 	ldhl	sp,	#20
   05FE 22                 1702 	ld	(hl+), a
   05FF 72                 1703 	ld	(hl), d
   0600 2B                 1704 	dec	hl
   0601 2A                 1705 	ld	a, (hl+)
   0602 66                 1706 	ld	h, (hl)
   0603 6F                 1707 	ld	l, a
   0604 36 03              1708 	ld	(hl), #0x03
   0606 F8 14              1709 	ldhl	sp,#(21 - 1)
   0608 4E                 1710 	ld	c, (hl)
   0609 23                 1711 	inc	hl
   060A 46                 1712 	ld	b, (hl)
   060B 03                 1713 	inc	bc
   060C 3E 01              1714 	ld	a, #0x01
   060E 02                 1715 	ld	(bc), a
                           1716 ;StateGame.c:251: for(invc=0; invc < invcount; invc++){
   060F AF                 1717 	xor	a, a
   0610 F8 1C              1718 	ldhl	sp,	#28
   0612 77                 1719 	ld	(hl), a
   0613                    1720 00107$:
   0613 F8 1C              1721 	ldhl	sp,	#28
   0615 7E                 1722 	ld	a, (hl)
   0616 EE 80              1723 	xor	a, #0x80
   0618 D6 81              1724 	sub	a, #0x81
   061A D2rB3r06           1725 	jp	NC, 00109$
                           1726 ;StateGame.c:252: struct Sprite* item_sprite = SpriteManagerAdd(SpriteItem, invitems_positions_x[invc]*8, invitems_positions_y[invc]*8);
   061D 7E                 1727 	ld	a, (hl)
   061E F8 16              1728 	ldhl	sp,	#22
   0620 77                 1729 	ld	(hl), a
   0621 17                 1730 	rla
   0622 9F                 1731 	sbc	a, a
   0623 23                 1732 	inc	hl
   0624 32                 1733 	ld	(hl-), a
   0625 5E                 1734 	ld	e, (hl)
   0626 23                 1735 	inc	hl
   0627 56                 1736 	ld	d, (hl)
   0628 F8 12              1737 	ldhl	sp,	#18
   062A 2A                 1738 	ld	a, (hl+)
   062B 66                 1739 	ld	h, (hl)
   062C 6F                 1740 	ld	l, a
   062D 19                 1741 	add	hl, de
   062E 4D                 1742 	ld	c, l
   062F 44                 1743 	ld	b, h
   0630 0A                 1744 	ld	a, (bc)
   0631 4F                 1745 	ld	c, a
   0632 17                 1746 	rla
   0633 9F                 1747 	sbc	a, a
   0634 47                 1748 	ld	b, a
   0635 CB 21              1749 	sla	c
   0637 CB 10              1750 	rl	b
   0639 CB 21              1751 	sla	c
   063B CB 10              1752 	rl	b
   063D CB 21              1753 	sla	c
   063F CB 10              1754 	rl	b
   0641 F8 1A              1755 	ldhl	sp,	#26
   0643 71                 1756 	ld	(hl), c
   0644 23                 1757 	inc	hl
   0645 70                 1758 	ld	(hl), b
   0646 F8 16              1759 	ldhl	sp,#(23 - 1)
   0648 5E                 1760 	ld	e, (hl)
   0649 23                 1761 	inc	hl
   064A 56                 1762 	ld	d, (hl)
   064B F8 10              1763 	ldhl	sp,	#16
   064D 2A                 1764 	ld	a, (hl+)
   064E 66                 1765 	ld	h, (hl)
   064F 6F                 1766 	ld	l, a
   0650 19                 1767 	add	hl, de
   0651 4D                 1768 	ld	c, l
   0652 44                 1769 	ld	b, h
   0653 0A                 1770 	ld	a, (bc)
   0654 4F                 1771 	ld	c, a
   0655 17                 1772 	rla
   0656 9F                 1773 	sbc	a, a
   0657 47                 1774 	ld	b, a
   0658 CB 21              1775 	sla	c
   065A CB 10              1776 	rl	b
   065C CB 21              1777 	sla	c
   065E CB 10              1778 	rl	b
   0660 CB 21              1779 	sla	c
   0662 CB 10              1780 	rl	b
   0664 F8 1A              1781 	ldhl	sp,	#26
   0666 2A                 1782 	ld	a, (hl+)
   0667 66                 1783 	ld	h, (hl)
   0668 6F                 1784 	ld	l, a
   0669 E5                 1785 	push	hl
   066A C5                 1786 	push	bc
   066B 3E 03              1787 	ld	a, #0x03
   066D F5                 1788 	push	af
   066E 33                 1789 	inc	sp
   066F CDr00r00           1790 	call	_SpriteManagerAdd
   0672 E8 05              1791 	add	sp, #5
   0674 4B                 1792 	ld	c, e
   0675 42                 1793 	ld	b, d
                           1794 ;StateGame.c:253: struct ItemInfo* dataitem = (struct ItemInfo*)item_sprite->custom_data;
   0676 21 19 00           1795 	ld	hl, #0x0019
   0679 09                 1796 	add	hl, bc
   067A 4D                 1797 	ld	c, l
   067B 7C                 1798 	ld	a, h
   067C 47                 1799 	ld	b, a
                           1800 ;StateGame.c:254: dataitem->type = iit[invc];
   067D 21 01 00           1801 	ld	hl, #0x0001
   0680 09                 1802 	add	hl, bc
   0681 7D                 1803 	ld	a, l
   0682 54                 1804 	ld	d, h
   0683 F8 18              1805 	ldhl	sp,	#24
   0685 22                 1806 	ld	(hl+), a
   0686 72                 1807 	ld	(hl), d
   0687 2B                 1808 	dec	hl
   0688 2B                 1809 	dec	hl
   0689 2B                 1810 	dec	hl
   068A 5E                 1811 	ld	e, (hl)
   068B 23                 1812 	inc	hl
   068C 56                 1813 	ld	d, (hl)
   068D F8 14              1814 	ldhl	sp,	#20
   068F 2A                 1815 	ld	a, (hl+)
   0690 66                 1816 	ld	h, (hl)
   0691 6F                 1817 	ld	l, a
   0692 19                 1818 	add	hl, de
   0693 7D                 1819 	ld	a, l
   0694 54                 1820 	ld	d, h
   0695 F8 1A              1821 	ldhl	sp,	#26
   0697 22                 1822 	ld	(hl+), a
   0698 72                 1823 	ld	(hl), d
   0699 2B                 1824 	dec	hl
   069A 5E                 1825 	ld	e, (hl)
   069B 23                 1826 	inc	hl
   069C 56                 1827 	ld	d, (hl)
   069D 1A                 1828 	ld	a,(de)
   069E F8 18              1829 	ldhl	sp,	#24
   06A0 F5                 1830 	push	af
   06A1 2A                 1831 	ld	a, (hl+)
   06A2 66                 1832 	ld	h, (hl)
   06A3 6F                 1833 	ld	l, a
   06A4 F1                 1834 	pop	af
   06A5 77                 1835 	ld	(hl), a
                           1836 ;StateGame.c:255: dataitem->setup = 1u;
   06A6 03                 1837 	inc	bc
   06A7 03                 1838 	inc	bc
   06A8 03                 1839 	inc	bc
   06A9 03                 1840 	inc	bc
   06AA 3E 01              1841 	ld	a, #0x01
   06AC 02                 1842 	ld	(bc), a
                           1843 ;StateGame.c:251: for(invc=0; invc < invcount; invc++){
   06AD F8 1C              1844 	ldhl	sp,	#28
   06AF 34                 1845 	inc	(hl)
   06B0 C3r13r06           1846 	jp	00107$
   06B3                    1847 00109$:
                           1848 ;StateGame.c:259: }
   06B3 E8 1D              1849 	add	sp, #29
   06B5 C9                 1850 	ret
                           1851 ;StateGame.c:261: void Update_StateGame() {
                           1852 ;	---------------------------------
                           1853 ; Function Update_StateGame
                           1854 ; ---------------------------------
   06B6                    1855 _Update_StateGame::
   06B6 E8 FE              1856 	add	sp, #-2
                           1857 ;StateGame.c:263: struct ArcherInfo* archer_data = (struct ArcherInfo*)scroll_target->custom_data;
   06B8 21r00r00           1858 	ld	hl, #_scroll_target
   06BB 46                 1859 	ld	b, (hl)
   06BC 23                 1860 	inc	hl
   06BD 4E                 1861 	ld	c, (hl)
   06BE 78                 1862 	ld	a, b
   06BF C6 19              1863 	add	a, #0x19
   06C1 47                 1864 	ld	b, a
   06C2 30 01              1865 	jr	NC,00208$
   06C4 0C                 1866 	inc	c
   06C5                    1867 00208$:
   06C5 F8 00              1868 	ldhl	sp,	#0
   06C7 70                 1869 	ld	(hl), b
   06C8 23                 1870 	inc	hl
   06C9 71                 1871 	ld	(hl), c
                           1872 ;StateGame.c:265: if(load_next) {
   06CA 21rA0r00           1873 	ld	hl, #_load_next
   06CD 7E                 1874 	ld	a, (hl)
   06CE B7                 1875 	or	a, a
   06CF 28 23              1876 	jr	Z,00105$
                           1877 ;StateGame.c:266: switch(load_next){
   06D1 7E                 1878 	ld	a, (hl)
   06D2 3C                 1879 	inc	a
   06D3 28 07              1880 	jr	Z,00102$
   06D5 21rA0r00           1881 	ld	hl, #_load_next
   06D8 7E                 1882 	ld	a, (hl)
   06D9 3D                 1883 	dec	a
   06DA 20 0C              1884 	jr	NZ,00103$
                           1885 ;StateGame.c:268: case -1:
   06DC                    1886 00102$:
                           1887 ;StateGame.c:269: current_map += load_next;
   06DC 21rA4r00           1888 	ld	hl, #_current_map
   06DF 7E                 1889 	ld	a, (hl)
   06E0 21rA0r00           1890 	ld	hl, #_load_next
   06E3 86                 1891 	add	a, (hl)
   06E4 21rA4r00           1892 	ld	hl, #_current_map
   06E7 77                 1893 	ld	(hl), a
                           1894 ;StateGame.c:271: }
   06E8                    1895 00103$:
                           1896 ;StateGame.c:272: load_next = 0;
   06E8 21rA0r00           1897 	ld	hl, #_load_next
   06EB 36 00              1898 	ld	(hl), #0x00
                           1899 ;StateGame.c:273: SetState(StateGame);
   06ED AF                 1900 	xor	a, a
   06EE F5                 1901 	push	af
   06EF 33                 1902 	inc	sp
   06F0 CDr00r00           1903 	call	_SetState
   06F3 33                 1904 	inc	sp
   06F4                    1905 00105$:
                           1906 ;StateGame.c:276: if(load_next_s){
   06F4 21rA1r00           1907 	ld	hl, #_load_next_s
   06F7 7E                 1908 	ld	a, (hl)
   06F8 B7                 1909 	or	a, a
   06F9 28 0A              1910 	jr	Z,00107$
                           1911 ;StateGame.c:277: load_next_s = 0;
   06FB 36 00              1912 	ld	(hl), #0x00
                           1913 ;StateGame.c:278: SetState(StateSecret);
   06FD 3E 01              1914 	ld	a, #0x01
   06FF F5                 1915 	push	af
   0700 33                 1916 	inc	sp
   0701 CDr00r00           1917 	call	_SetState
   0704 33                 1918 	inc	sp
   0705                    1919 00107$:
                           1920 ;StateGame.c:281: if(load_next_b){
   0705 21rA2r00           1921 	ld	hl, #_load_next_b
   0708 7E                 1922 	ld	a, (hl)
   0709 B7                 1923 	or	a, a
   070A 28 2B              1924 	jr	Z,00112$
                           1925 ;StateGame.c:282: switch(load_next_b){
   070C 7E                 1926 	ld	a, (hl)
   070D 3D                 1927 	dec	a
   070E 28 0A              1928 	jr	Z,00108$
   0710 21rA2r00           1929 	ld	hl, #_load_next_b
   0713 7E                 1930 	ld	a, (hl)
   0714 D6 02              1931 	sub	a, #0x02
   0716 28 11              1932 	jr	Z,00109$
   0718 18 1D              1933 	jr	00112$
                           1934 ;StateGame.c:283: case 1: //vado allo StateBoss
   071A                    1935 00108$:
                           1936 ;StateGame.c:284: load_next_b = 0;
   071A 21rA2r00           1937 	ld	hl, #_load_next_b
   071D 36 00              1938 	ld	(hl), #0x00
                           1939 ;StateGame.c:285: SetState(StateBoss);
   071F 3E 02              1940 	ld	a, #0x02
   0721 F5                 1941 	push	af
   0722 33                 1942 	inc	sp
   0723 CDr00r00           1943 	call	_SetState
   0726 33                 1944 	inc	sp
                           1945 ;StateGame.c:286: break;
   0727 18 0E              1946 	jr	00112$
                           1947 ;StateGame.c:287: case 2: // provengo dal boss TODO
   0729                    1948 00109$:
                           1949 ;StateGame.c:288: load_next_b = 0;
   0729 21rA2r00           1950 	ld	hl, #_load_next_b
   072C 36 00              1951 	ld	(hl), #0x00
                           1952 ;StateGame.c:289: current_level++;
   072E 21rA3r00           1953 	ld	hl, #_current_level
   0731 34                 1954 	inc	(hl)
                           1955 ;StateGame.c:290: current_map = 0;
   0732 21rA4r00           1956 	ld	hl, #_current_map
   0735 36 00              1957 	ld	(hl), #0x00
                           1958 ;StateGame.c:292: }
   0737                    1959 00112$:
                           1960 ;StateGame.c:295: if(archer_state == STATE_DIAG){
   0737 21rAFr00           1961 	ld	hl, #_archer_state
   073A 7E                 1962 	ld	a, (hl)
   073B D6 05              1963 	sub	a, #0x05
   073D 20 36              1964 	jr	NZ,00118$
                           1965 ;StateGame.c:296: if(show_diag > 0){
   073F 21rB0r00           1966 	ld	hl, #_show_diag
   0742 7E                 1967 	ld	a, (hl)
   0743 5F                 1968 	ld	e, a
   0744 3E 00              1969 	ld	a, #0x00
   0746 57                 1970 	ld	d, a
   0747 AF                 1971 	xor	a, a
   0748 96                 1972 	sub	a, (hl)
   0749 CB 7B              1973 	bit	7, e
   074B 28 07              1974 	jr	Z,00216$
   074D CB 7A              1975 	bit	7, d
   074F 20 08              1976 	jr	NZ,00217$
   0751 BF                 1977 	cp	a, a
   0752 18 05              1978 	jr	00217$
   0754                    1979 00216$:
   0754 CB 7A              1980 	bit	7, d
   0756 28 01              1981 	jr	Z,00217$
   0758 37                 1982 	scf
   0759                    1983 00217$:
   0759 30 08              1984 	jr	NC,00114$
                           1985 ;StateGame.c:297: show_diag = 0;
   075B 21rB0r00           1986 	ld	hl, #_show_diag
   075E 36 00              1987 	ld	(hl), #0x00
                           1988 ;StateGame.c:298: ShowDiag();
   0760 CDrFAr02           1989 	call	_ShowDiag
   0763                    1990 00114$:
                           1991 ;StateGame.c:300: if(show_diag < 0 ){
   0763 21rB0r00           1992 	ld	hl, #_show_diag
   0766 7E                 1993 	ld	a, (hl)
   0767 CB 7F              1994 	bit	7, a
   0769 28 0A              1995 	jr	Z,00118$
                           1996 ;StateGame.c:301: show_diag = 0;
   076B 36 00              1997 	ld	(hl), #0x00
                           1998 ;StateGame.c:302: archer_state = STATE_NORMAL;
   076D 21rAFr00           1999 	ld	hl, #_archer_state
   0770 36 00              2000 	ld	(hl), #0x00
                           2001 ;StateGame.c:303: ShowWindow();
   0772 CDrC8r02           2002 	call	_ShowWindow
   0775                    2003 00118$:
                           2004 ;StateGame.c:306: if(archer_state != STATE_DIAG){
   0775 21rAFr00           2005 	ld	hl, #_archer_state
   0778 7E                 2006 	ld	a, (hl)
   0779 D6 05              2007 	sub	a, #0x05
   077B CArDFr07           2008 	jp	Z,00131$
                           2009 ;StateGame.c:307: if (amulet != archer_data->amulet){
   077E D1                 2010 	pop	de
   077F D5                 2011 	push	de
   0780 1A                 2012 	ld	a,(de)
   0781 4F                 2013 	ld	c, a
   0782 21r9Br00           2014 	ld	hl, #_amulet
   0785 7E                 2015 	ld	a, (hl)
   0786 91                 2016 	sub	a, c
   0787 28 07              2017 	jr	Z,00120$
                           2018 ;StateGame.c:308: amulet = archer_data->amulet;
   0789 21r9Br00           2019 	ld	hl, #_amulet
   078C 71                 2020 	ld	(hl), c
                           2021 ;StateGame.c:309: WriteAMULET();		
   078D CDrE2r07           2022 	call	_WriteAMULET
   0790                    2023 00120$:
                           2024 ;StateGame.c:311: if (coins != archer_data->coins){
   0790 C1                 2025 	pop	bc
   0791 C5                 2026 	push	bc
   0792 03                 2027 	inc	bc
   0793 0A                 2028 	ld	a, (bc)
   0794 4F                 2029 	ld	c, a
   0795 21r9Cr00           2030 	ld	hl, #_coins
   0798 7E                 2031 	ld	a, (hl)
   0799 91                 2032 	sub	a, c
   079A 28 07              2033 	jr	Z,00122$
                           2034 ;StateGame.c:312: coins = archer_data->coins;
   079C 21r9Cr00           2035 	ld	hl, #_coins
   079F 71                 2036 	ld	(hl), c
                           2037 ;StateGame.c:313: WriteCOINS();
   07A0 CDr7Fr08           2038 	call	_WriteCOINS
   07A3                    2039 00122$:
                           2040 ;StateGame.c:315: if (hp != archer_data->hp){
   07A3 C1                 2041 	pop	bc
   07A4 C5                 2042 	push	bc
   07A5 03                 2043 	inc	bc
   07A6 03                 2044 	inc	bc
   07A7 0A                 2045 	ld	a, (bc)
   07A8 4F                 2046 	ld	c, a
   07A9 21r9Er00           2047 	ld	hl, #_hp
   07AC 7E                 2048 	ld	a, (hl)
   07AD 91                 2049 	sub	a, c
   07AE 28 07              2050 	jr	Z,00124$
                           2051 ;StateGame.c:316: hp = archer_data->hp;
   07B0 21r9Er00           2052 	ld	hl, #_hp
   07B3 71                 2053 	ld	(hl), c
                           2054 ;StateGame.c:317: WriteHP();
   07B4 CDrB1r08           2055 	call	_WriteHP
   07B7                    2056 00124$:
                           2057 ;StateGame.c:319: if (ups != archer_data->ups){
   07B7 C1                 2058 	pop	bc
   07B8 C5                 2059 	push	bc
   07B9 03                 2060 	inc	bc
   07BA 03                 2061 	inc	bc
   07BB 03                 2062 	inc	bc
   07BC 0A                 2063 	ld	a, (bc)
   07BD 4F                 2064 	ld	c, a
   07BE 21r9Dr00           2065 	ld	hl, #_ups
   07C1 7E                 2066 	ld	a, (hl)
   07C2 91                 2067 	sub	a, c
   07C3 28 07              2068 	jr	Z,00126$
                           2069 ;StateGame.c:320: ups = archer_data->ups;
   07C5 21r9Dr00           2070 	ld	hl, #_ups
   07C8 71                 2071 	ld	(hl), c
                           2072 ;StateGame.c:321: WriteUPS();
   07C9 CDr72r09           2073 	call	_WriteUPS
   07CC                    2074 00126$:
                           2075 ;StateGame.c:323: if(archer_data->tool == level_tool){
   07CC D1                 2076 	pop	de
   07CD D5                 2077 	push	de
   07CE 21 04 00           2078 	ld	hl, #0x0004
   07D1 19                 2079 	add	hl, de
   07D2 4D                 2080 	ld	c,l
   07D3 7C                 2081 	ld	a,h
   07D4 4E                 2082 	ld	c, (hl)
   07D5 21r9Fr00           2083 	ld	hl, #_level_tool
   07D8 7E                 2084 	ld	a, (hl)
   07D9 91                 2085 	sub	a, c
   07DA 20 03              2086 	jr	NZ,00131$
                           2087 ;StateGame.c:324: WriteTOOL();
   07DC CDr35r09           2088 	call	_WriteTOOL
   07DF                    2089 00131$:
                           2090 ;StateGame.c:328: }
   07DF E8 02              2091 	add	sp, #2
   07E1 C9                 2092 	ret
                           2093 ;StateGame.c:330: void WriteAMULET(){
                           2094 ;	---------------------------------
                           2095 ; Function WriteAMULET
                           2096 ; ---------------------------------
   07E2                    2097 _WriteAMULET::
                           2098 ;StateGame.c:331: PRINT_POS(13,1);
   07E2 21r00r00           2099 	ld	hl, #_print_x
   07E5 36 0D              2100 	ld	(hl), #0x0d
   07E7 21r00r00           2101 	ld	hl, #_print_y
   07EA 36 01              2102 	ld	(hl), #0x01
                           2103 ;StateGame.c:332: switch (amulet){
   07EC 21r9Br00           2104 	ld	hl, #_amulet
   07EF 7E                 2105 	ld	a, (hl)
   07F0 3D                 2106 	dec	a
   07F1 28 22              2107 	jr	Z,00101$
   07F3 21r9Br00           2108 	ld	hl, #_amulet
   07F6 7E                 2109 	ld	a, (hl)
   07F7 D6 02              2110 	sub	a, #0x02
   07F9 28 24              2111 	jr	Z,00102$
   07FB 21r9Br00           2112 	ld	hl, #_amulet
   07FE 7E                 2113 	ld	a, (hl)
   07FF D6 03              2114 	sub	a, #0x03
   0801 28 26              2115 	jr	Z,00103$
   0803 21r9Br00           2116 	ld	hl, #_amulet
   0806 7E                 2117 	ld	a, (hl)
   0807 D6 04              2118 	sub	a, #0x04
   0809 28 28              2119 	jr	Z,00104$
   080B 21r9Br00           2120 	ld	hl, #_amulet
   080E 7E                 2121 	ld	a, (hl)
   080F D6 05              2122 	sub	a, #0x05
   0811 28 2A              2123 	jr	Z,00105$
   0813 18 32              2124 	jr	00106$
                           2125 ;StateGame.c:333: case 1: Printf("$"); break;
   0815                    2126 00101$:
   0815 21r51r08           2127 	ld	hl, #___str_2
   0818 E5                 2128 	push	hl
   0819 CDr00r00           2129 	call	_Printf
   081C E8 02              2130 	add	sp, #2
   081E C9                 2131 	ret
                           2132 ;StateGame.c:334: case 2: Printf("]"); break;
   081F                    2133 00102$:
   081F 21r53r08           2134 	ld	hl, #___str_3
   0822 E5                 2135 	push	hl
   0823 CDr00r00           2136 	call	_Printf
   0826 E8 02              2137 	add	sp, #2
   0828 C9                 2138 	ret
                           2139 ;StateGame.c:335: case 3: Printf("["); break;
   0829                    2140 00103$:
   0829 21r55r08           2141 	ld	hl, #___str_4
   082C E5                 2142 	push	hl
   082D CDr00r00           2143 	call	_Printf
   0830 E8 02              2144 	add	sp, #2
   0832 C9                 2145 	ret
                           2146 ;StateGame.c:336: case 4: Printf("#"); break;
   0833                    2147 00104$:
   0833 21r57r08           2148 	ld	hl, #___str_5
   0836 E5                 2149 	push	hl
   0837 CDr00r00           2150 	call	_Printf
   083A E8 02              2151 	add	sp, #2
   083C C9                 2152 	ret
                           2153 ;StateGame.c:337: case 5: Printf("@"); break;
   083D                    2154 00105$:
   083D 21r59r08           2155 	ld	hl, #___str_6
   0840 E5                 2156 	push	hl
   0841 CDr00r00           2157 	call	_Printf
   0844 E8 02              2158 	add	sp, #2
   0846 C9                 2159 	ret
                           2160 ;StateGame.c:338: default: Printf("$"); break;
   0847                    2161 00106$:
   0847 21r51r08           2162 	ld	hl, #___str_2
   084A E5                 2163 	push	hl
   084B CDr00r00           2164 	call	_Printf
   084E E8 02              2165 	add	sp, #2
                           2166 ;StateGame.c:339: }	
                           2167 ;StateGame.c:340: }
   0850 C9                 2168 	ret
   0851                    2169 ___str_2:
   0851 24                 2170 	.ascii "$"
   0852 00                 2171 	.db 0x00
   0853                    2172 ___str_3:
   0853 5D                 2173 	.ascii "]"
   0854 00                 2174 	.db 0x00
   0855                    2175 ___str_4:
   0855 5B                 2176 	.ascii "["
   0856 00                 2177 	.db 0x00
   0857                    2178 ___str_5:
   0857 23                 2179 	.ascii "#"
   0858 00                 2180 	.db 0x00
   0859                    2181 ___str_6:
   0859 40                 2182 	.ascii "@"
   085A 00                 2183 	.db 0x00
                           2184 ;StateGame.c:342: void WriteMap(){
                           2185 ;	---------------------------------
                           2186 ; Function WriteMap
                           2187 ; ---------------------------------
   085B                    2188 _WriteMap::
                           2189 ;StateGame.c:343: PRINT_POS(1, 3);
   085B 21r00r00           2190 	ld	hl, #_print_x
   085E 36 01              2191 	ld	(hl), #0x01
   0860 21r00r00           2192 	ld	hl, #_print_y
   0863 36 03              2193 	ld	(hl), #0x03
                           2194 ;StateGame.c:344: Printf(level_names[current_level]);	
   0865 21rA3r00           2195 	ld	hl, #_current_level
   0868 4E                 2196 	ld	c, (hl)
   0869 06 00              2197 	ld	b, #0x00
   086B CB 21              2198 	sla	c
   086D CB 10              2199 	rl	b
   086F 21rB1r02           2200 	ld	hl, #_level_names
   0872 09                 2201 	add	hl, bc
   0873 4D                 2202 	ld	c,l
   0874 44                 2203 	ld	b,h
   0875 4E                 2204 	ld	c, (hl)
   0876 23                 2205 	inc	hl
   0877 46                 2206 	ld	b, (hl)
   0878 C5                 2207 	push	bc
   0879 CDr00r00           2208 	call	_Printf
   087C E8 02              2209 	add	sp, #2
                           2210 ;StateGame.c:345: }
   087E C9                 2211 	ret
                           2212 ;StateGame.c:347: void WriteCOINS(){
                           2213 ;	---------------------------------
                           2214 ; Function WriteCOINS
                           2215 ; ---------------------------------
   087F                    2216 _WriteCOINS::
                           2217 ;StateGame.c:348: PRINT_POS(17, 1);
   087F 21r00r00           2218 	ld	hl, #_print_x
   0882 36 11              2219 	ld	(hl), #0x11
   0884 21r00r00           2220 	ld	hl, #_print_y
   0887 36 01              2221 	ld	(hl), #0x01
                           2222 ;StateGame.c:350: Printf("%d", coins);
   0889 21r9Cr00           2223 	ld	hl, #_coins
   088C 4E                 2224 	ld	c, (hl)
   088D 06 00              2225 	ld	b, #0x00
                           2226 ;StateGame.c:349: if (coins > 9u){
   088F 3E 09              2227 	ld	a, #0x09
   0891 96                 2228 	sub	a, (hl)
   0892 30 0B              2229 	jr	NC,00102$
                           2230 ;StateGame.c:350: Printf("%d", coins);
   0894 C5                 2231 	push	bc
   0895 21rAAr08           2232 	ld	hl, #___str_7
   0898 E5                 2233 	push	hl
   0899 CDr00r00           2234 	call	_Printf
   089C E8 04              2235 	add	sp, #4
   089E C9                 2236 	ret
   089F                    2237 00102$:
                           2238 ;StateGame.c:352: Printf("0%d", coins);
   089F C5                 2239 	push	bc
   08A0 21rADr08           2240 	ld	hl, #___str_8
   08A3 E5                 2241 	push	hl
   08A4 CDr00r00           2242 	call	_Printf
   08A7 E8 04              2243 	add	sp, #4
                           2244 ;StateGame.c:354: }
   08A9 C9                 2245 	ret
   08AA                    2246 ___str_7:
   08AA 25 64              2247 	.ascii "%d"
   08AC 00                 2248 	.db 0x00
   08AD                    2249 ___str_8:
   08AD 30 25 64           2250 	.ascii "0%d"
   08B0 00                 2251 	.db 0x00
                           2252 ;StateGame.c:356: void WriteHP(){	
                           2253 ;	---------------------------------
                           2254 ; Function WriteHP
                           2255 ; ---------------------------------
   08B1                    2256 _WriteHP::
                           2257 ;StateGame.c:357: PRINT_POS(7, 1);
   08B1 21r00r00           2258 	ld	hl, #_print_x
   08B4 36 07              2259 	ld	(hl), #0x07
   08B6 21r00r00           2260 	ld	hl, #_print_y
   08B9 36 01              2261 	ld	(hl), #0x01
                           2262 ;StateGame.c:358: if (hp < 10){
   08BB 21r9Er00           2263 	ld	hl, #_hp
   08BE 7E                 2264 	ld	a, (hl)
   08BF EE 80              2265 	xor	a, #0x80
   08C1 D6 8A              2266 	sub	a, #0x8a
   08C3 30 0F              2267 	jr	NC,00102$
                           2268 ;StateGame.c:359: Printf("00%d", hp);
   08C5 7E                 2269 	ld	a, (hl)
   08C6 4F                 2270 	ld	c, a
   08C7 17                 2271 	rla
   08C8 9F                 2272 	sbc	a, a
   08C9 47                 2273 	ld	b, a
   08CA C5                 2274 	push	bc
   08CB 21r29r09           2275 	ld	hl, #___str_9
   08CE E5                 2276 	push	hl
   08CF CDr00r00           2277 	call	_Printf
   08D2 E8 04              2278 	add	sp, #4
   08D4                    2279 00102$:
                           2280 ;StateGame.c:361: if (hp > 9 & hp < 100){
   08D4 21r9Er00           2281 	ld	hl, #_hp
   08D7 7E                 2282 	ld	a, (hl)
   08D8 5F                 2283 	ld	e, a
   08D9 3E 09              2284 	ld	a, #0x09
   08DB 57                 2285 	ld	d, a
   08DC 3E 09              2286 	ld	a, #0x09
   08DE 96                 2287 	sub	a, (hl)
   08DF CB 7B              2288 	bit	7, e
   08E1 28 07              2289 	jr	Z,00124$
   08E3 CB 7A              2290 	bit	7, d
   08E5 20 08              2291 	jr	NZ,00125$
   08E7 BF                 2292 	cp	a, a
   08E8 18 05              2293 	jr	00125$
   08EA                    2294 00124$:
   08EA CB 7A              2295 	bit	7, d
   08EC 28 01              2296 	jr	Z,00125$
   08EE 37                 2297 	scf
   08EF                    2298 00125$:
   08EF 3E 00              2299 	ld	a, #0x00
   08F1 17                 2300 	rla
   08F2 4F                 2301 	ld	c, a
   08F3 21r9Er00           2302 	ld	hl, #_hp
   08F6 7E                 2303 	ld	a, (hl)
   08F7 EE 80              2304 	xor	a, #0x80
   08F9 D6 E4              2305 	sub	a, #0xe4
   08FB 3E 00              2306 	ld	a, #0x00
   08FD 17                 2307 	rla
   08FE A1                 2308 	and	a,c
   08FF 28 0F              2309 	jr	Z,00104$
                           2310 ;StateGame.c:362: Printf("0%d", hp);
   0901 7E                 2311 	ld	a, (hl)
   0902 4F                 2312 	ld	c, a
   0903 17                 2313 	rla
   0904 9F                 2314 	sbc	a, a
   0905 47                 2315 	ld	b, a
   0906 C5                 2316 	push	bc
   0907 21r2Er09           2317 	ld	hl, #___str_10
   090A E5                 2318 	push	hl
   090B CDr00r00           2319 	call	_Printf
   090E E8 04              2320 	add	sp, #4
   0910                    2321 00104$:
                           2322 ;StateGame.c:364: if (hp >= 100){
   0910 21r9Er00           2323 	ld	hl, #_hp
   0913 7E                 2324 	ld	a, (hl)
   0914 EE 80              2325 	xor	a, #0x80
   0916 D6 E4              2326 	sub	a, #0xe4
   0918 D8                 2327 	ret	C
                           2328 ;StateGame.c:365: Printf("%d", hp);	
   0919 7E                 2329 	ld	a, (hl)
   091A 4F                 2330 	ld	c, a
   091B 17                 2331 	rla
   091C 9F                 2332 	sbc	a, a
   091D 47                 2333 	ld	b, a
   091E C5                 2334 	push	bc
   091F 21r32r09           2335 	ld	hl, #___str_11
   0922 E5                 2336 	push	hl
   0923 CDr00r00           2337 	call	_Printf
   0926 E8 04              2338 	add	sp, #4
                           2339 ;StateGame.c:367: }
   0928 C9                 2340 	ret
   0929                    2341 ___str_9:
   0929 30 30 25 64        2342 	.ascii "00%d"
   092D 00                 2343 	.db 0x00
   092E                    2344 ___str_10:
   092E 30 25 64           2345 	.ascii "0%d"
   0931 00                 2346 	.db 0x00
   0932                    2347 ___str_11:
   0932 25 64              2348 	.ascii "%d"
   0934 00                 2349 	.db 0x00
                           2350 ;StateGame.c:369: void WriteTOOL(){
                           2351 ;	---------------------------------
                           2352 ; Function WriteTOOL
                           2353 ; ---------------------------------
   0935                    2354 _WriteTOOL::
                           2355 ;StateGame.c:370: switch(level_tool){
   0935 21r9Fr00           2356 	ld	hl, #_level_tool
   0938 7E                 2357 	ld	a, (hl)
   0939 D6 06              2358 	sub	a, #0x06
   093B 28 09              2359 	jr	Z,00101$
   093D 21r9Fr00           2360 	ld	hl, #_level_tool
   0940 7E                 2361 	ld	a, (hl)
   0941 D6 07              2362 	sub	a, #0x07
   0943 28 15              2363 	jr	Z,00102$
   0945 C9                 2364 	ret
                           2365 ;StateGame.c:371: case 6:
   0946                    2366 00101$:
                           2367 ;StateGame.c:372: PRINT_POS(11, 1);
   0946 21r00r00           2368 	ld	hl, #_print_x
   0949 36 0B              2369 	ld	(hl), #0x0b
   094B 21r00r00           2370 	ld	hl, #_print_y
   094E 36 01              2371 	ld	(hl), #0x01
                           2372 ;StateGame.c:373: Printf("{");
   0950 21r6Er09           2373 	ld	hl, #___str_12
   0953 E5                 2374 	push	hl
   0954 CDr00r00           2375 	call	_Printf
   0957 E8 02              2376 	add	sp, #2
                           2377 ;StateGame.c:374: break;
   0959 C9                 2378 	ret
                           2379 ;StateGame.c:375: case 7:
   095A                    2380 00102$:
                           2381 ;StateGame.c:376: PRINT_POS(11, 1);
   095A 21r00r00           2382 	ld	hl, #_print_x
   095D 36 0B              2383 	ld	(hl), #0x0b
   095F 21r00r00           2384 	ld	hl, #_print_y
   0962 36 01              2385 	ld	(hl), #0x01
                           2386 ;StateGame.c:377: Printf("<");
   0964 21r70r09           2387 	ld	hl, #___str_13
   0967 E5                 2388 	push	hl
   0968 CDr00r00           2389 	call	_Printf
   096B E8 02              2390 	add	sp, #2
                           2391 ;StateGame.c:379: }
                           2392 ;StateGame.c:380: }
   096D C9                 2393 	ret
   096E                    2394 ___str_12:
   096E 7B                 2395 	.ascii "{"
   096F 00                 2396 	.db 0x00
   0970                    2397 ___str_13:
   0970 3C                 2398 	.ascii "<"
   0971 00                 2399 	.db 0x00
                           2400 ;StateGame.c:382: void WriteUPS(){
                           2401 ;	---------------------------------
                           2402 ; Function WriteUPS
                           2403 ; ---------------------------------
   0972                    2404 _WriteUPS::
                           2405 ;StateGame.c:383: PRINT_POS(2, 1); //up
   0972 21r00r00           2406 	ld	hl, #_print_x
   0975 36 02              2407 	ld	(hl), #0x02
   0977 21r00r00           2408 	ld	hl, #_print_y
   097A 36 01              2409 	ld	(hl), #0x01
                           2410 ;StateGame.c:384: if (ups > 9){Printf("%d", ups);}
   097C 21r9Dr00           2411 	ld	hl, #_ups
   097F 7E                 2412 	ld	a, (hl)
   0980 4F                 2413 	ld	c, a
   0981 17                 2414 	rla
   0982 9F                 2415 	sbc	a, a
   0983 47                 2416 	ld	b, a
   0984 7E                 2417 	ld	a, (hl)
   0985 5F                 2418 	ld	e, a
   0986 3E 09              2419 	ld	a, #0x09
   0988 57                 2420 	ld	d, a
   0989 3E 09              2421 	ld	a, #0x09
   098B 96                 2422 	sub	a, (hl)
   098C CB 7B              2423 	bit	7, e
   098E 28 07              2424 	jr	Z,00111$
   0990 CB 7A              2425 	bit	7, d
   0992 20 08              2426 	jr	NZ,00112$
   0994 BF                 2427 	cp	a, a
   0995 18 05              2428 	jr	00112$
   0997                    2429 00111$:
   0997 CB 7A              2430 	bit	7, d
   0999 28 01              2431 	jr	Z,00112$
   099B 37                 2432 	scf
   099C                    2433 00112$:
   099C 30 0B              2434 	jr	NC,00102$
   099E C5                 2435 	push	bc
   099F 21rB4r09           2436 	ld	hl, #___str_14
   09A2 E5                 2437 	push	hl
   09A3 CDr00r00           2438 	call	_Printf
   09A6 E8 04              2439 	add	sp, #4
   09A8 C9                 2440 	ret
   09A9                    2441 00102$:
                           2442 ;StateGame.c:385: else{Printf("0%d", ups);}
   09A9 C5                 2443 	push	bc
   09AA 21rB7r09           2444 	ld	hl, #___str_15
   09AD E5                 2445 	push	hl
   09AE CDr00r00           2446 	call	_Printf
   09B1 E8 04              2447 	add	sp, #4
                           2448 ;StateGame.c:386: }
   09B3 C9                 2449 	ret
   09B4                    2450 ___str_14:
   09B4 25 64              2451 	.ascii "%d"
   09B6 00                 2452 	.db 0x00
   09B7                    2453 ___str_15:
   09B7 30 25 64           2454 	.ascii "0%d"
   09BA 00                 2455 	.db 0x00
                           2456 	.area _CODE_2
                           2457 	.area _CABS (ABS)
