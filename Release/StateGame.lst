                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ANSI-C Compiler
                              3 ; Version 4.0.0 #11528 (MINGW32)
                              4 ;--------------------------------------------------------
                              5 	.module StateGame
                              6 	.optsdcc -mgbz80
                              7 	
                              8 ;--------------------------------------------------------
                              9 ; Public variables in this module
                             10 ;--------------------------------------------------------
                             11 	.globl _Update_StateGame
                             12 	.globl _Start_StateGame
                             13 	.globl _Printf
                             14 	.globl _SpriteManagerAdd
                             15 	.globl _SpriteManagerLoad
                             16 	.globl _ScrollFindTile
                             17 	.globl _GetMapSize
                             18 	.globl _InitWindow
                             19 	.globl _InitScroll
                             20 	.globl _ScrollSetTiles
                             21 	.globl _SetState
                             22 	.globl _empty
                             23 	.globl _bank_StateGame
                             24 	.globl _drop_player_y
                             25 	.globl _drop_player_x
                             26 	.globl _levels
                             27 	.globl _level_1
                             28 	.globl _current_map
                             29 	.globl _current_level
                             30 	.globl _load_next_s
                             31 	.globl _load_next
                             32 	.globl _level_tool
                             33 	.globl _hp
                             34 	.globl _ups
                             35 	.globl _coins
                             36 	.globl _amulet
                             37 	.globl _collision_tiles
                             38 	.globl _sprites_palette
                             39 	.globl _bg_palette
                             40 	.globl _attack_wait
                             41 	.globl _damage_cooldown
                             42 	.globl _level_names
                             43 	.globl _populate_01
                             44 	.globl _populate_00
                             45 	.globl _WriteAMULET
                             46 	.globl _WriteMap
                             47 	.globl _WriteCOINS
                             48 	.globl _WriteHP
                             49 	.globl _WriteTOOL
                             50 	.globl _WriteUPS
                             51 ;--------------------------------------------------------
                             52 ; special function registers
                             53 ;--------------------------------------------------------
                             54 ;--------------------------------------------------------
                             55 ; ram data
                             56 ;--------------------------------------------------------
                             57 	.area _DATA
   0000                      58 _damage_cooldown::
   0000                      59 	.ds 1
   0001                      60 _attack_wait::
   0001                      61 	.ds 1
   0002                      62 _bg_palette::
   0002                      63 	.ds 64
   0042                      64 _sprites_palette::
   0042                      65 	.ds 64
   0082                      66 _collision_tiles::
   0082                      67 	.ds 24
   009A                      68 _amulet::
   009A                      69 	.ds 1
   009B                      70 _coins::
   009B                      71 	.ds 1
   009C                      72 _ups::
   009C                      73 	.ds 1
   009D                      74 _hp::
   009D                      75 	.ds 1
   009E                      76 _level_tool::
   009E                      77 	.ds 1
   009F                      78 _load_next::
   009F                      79 	.ds 1
   00A0                      80 _load_next_s::
   00A0                      81 	.ds 1
   00A1                      82 _current_level::
   00A1                      83 	.ds 1
   00A2                      84 _current_map::
   00A2                      85 	.ds 1
   00A3                      86 _level_1::
   00A3                      87 	.ds 4
   00A7                      88 _levels::
   00A7                      89 	.ds 2
   00A9                      90 _drop_player_x::
   00A9                      91 	.ds 2
   00AB                      92 _drop_player_y::
   00AB                      93 	.ds 2
                             94 ;--------------------------------------------------------
                             95 ; CODE rom data
                             96 ;--------------------------------------------------------
                             97 	.area _CODE
   0000                      98 _bank_StateGame:
   0000 02                   99 	.db #0x02	; 2
                            100 ;--------------------------------------------------------
                            101 ; absolute external ram data
                            102 ;--------------------------------------------------------
                            103 	.area _DABS (ABS)
                            104 ;--------------------------------------------------------
                            105 ; global & static initialisations
                            106 ;--------------------------------------------------------
                            107 	.area _HOME
                            108 	.area _GSINIT
                            109 	.area _GSFINAL
                            110 	.area _GSINIT
                            111 ;custom_datas.h:44: UINT8 damage_cooldown = 30u;
   0000 21r00r00            112 	ld	hl, #_damage_cooldown
   0003 36 1E               113 	ld	(hl), #0x1e
                            114 ;custom_datas.h:45: UINT8 attack_wait = 32u;
   0005 21r01r00            115 	ld	hl, #_attack_wait
   0008 36 20               116 	ld	(hl), #0x20
                            117 ;StateGame.c:27: UINT16 bg_palette[] = {PALETTE_FROM_HEADER(tiles)};
   000A 21r02r00            118 	ld	hl, #_bg_palette
   000D 36 BC               119 	ld	(hl), #0xbc
   000F 23                  120 	inc	hl
   0010 36 17               121 	ld	(hl), #0x17
   0012 21r04r00            122 	ld	hl, #(_bg_palette + 0x0002)
   0015 36 E7               123 	ld	(hl), #0xe7
   0017 23                  124 	inc	hl
   0018 36 22               125 	ld	(hl), #0x22
   001A 21r06r00            126 	ld	hl, #(_bg_palette + 0x0004)
   001D 36 C4               127 	ld	(hl), #0xc4
   001F 23                  128 	inc	hl
   0020 36 19               129 	ld	(hl), #0x19
   0022 21r08r00            130 	ld	hl, #(_bg_palette + 0x0006)
   0025 36 E0               131 	ld	(hl), #0xe0
   0027 23                  132 	inc	hl
   0028 36 14               133 	ld	(hl), #0x14
   002A 21r0Ar00            134 	ld	hl, #(_bg_palette + 0x0008)
   002D 36 BC               135 	ld	(hl), #0xbc
   002F 23                  136 	inc	hl
   0030 36 17               137 	ld	(hl), #0x17
   0032 21r0Cr00            138 	ld	hl, #(_bg_palette + 0x000a)
   0035 36 18               139 	ld	(hl), #0x18
   0037 23                  140 	inc	hl
   0038 36 00               141 	ld	(hl), #0x00
   003A 21r0Er00            142 	ld	hl, #(_bg_palette + 0x000c)
   003D 36 10               143 	ld	(hl), #0x10
   003F 23                  144 	inc	hl
   0040 36 00               145 	ld	(hl), #0x00
   0042 21r10r00            146 	ld	hl, #(_bg_palette + 0x000e)
   0045 36 E0               147 	ld	(hl), #0xe0
   0047 23                  148 	inc	hl
   0048 36 14               149 	ld	(hl), #0x14
   004A 21r12r00            150 	ld	hl, #(_bg_palette + 0x0010)
   004D 36 BC               151 	ld	(hl), #0xbc
   004F 23                  152 	inc	hl
   0050 36 17               153 	ld	(hl), #0x17
   0052 21r14r00            154 	ld	hl, #(_bg_palette + 0x0012)
   0055 36 D6               155 	ld	(hl), #0xd6
   0057 23                  156 	inc	hl
   0058 36 5A               157 	ld	(hl), #0x5a
   005A 21r16r00            158 	ld	hl, #(_bg_palette + 0x0014)
   005D 36 F7               159 	ld	(hl), #0xf7
   005F 23                  160 	inc	hl
   0060 36 00               161 	ld	(hl), #0x00
   0062 21r18r00            162 	ld	hl, #(_bg_palette + 0x0016)
   0065 AF                  163 	xor	a, a
   0066 22                  164 	ld	(hl+), a
   0067 77                  165 	ld	(hl), a
   0068 21r1Ar00            166 	ld	hl, #(_bg_palette + 0x0018)
   006B 36 BC               167 	ld	(hl), #0xbc
   006D 23                  168 	inc	hl
   006E 36 17               169 	ld	(hl), #0x17
   0070 21r1Cr00            170 	ld	hl, #(_bg_palette + 0x001a)
   0073 36 E7               171 	ld	(hl), #0xe7
   0075 23                  172 	inc	hl
   0076 36 22               173 	ld	(hl), #0x22
   0078 21r1Er00            174 	ld	hl, #(_bg_palette + 0x001c)
   007B 36 C4               175 	ld	(hl), #0xc4
   007D 23                  176 	inc	hl
   007E 36 19               177 	ld	(hl), #0x19
   0080 21r20r00            178 	ld	hl, #(_bg_palette + 0x001e)
   0083 36 E0               179 	ld	(hl), #0xe0
   0085 23                  180 	inc	hl
   0086 36 14               181 	ld	(hl), #0x14
   0088 21r22r00            182 	ld	hl, #(_bg_palette + 0x0020)
   008B 36 BC               183 	ld	(hl), #0xbc
   008D 23                  184 	inc	hl
   008E 36 17               185 	ld	(hl), #0x17
   0090 21r24r00            186 	ld	hl, #(_bg_palette + 0x0022)
   0093 36 E7               187 	ld	(hl), #0xe7
   0095 23                  188 	inc	hl
   0096 36 22               189 	ld	(hl), #0x22
   0098 21r26r00            190 	ld	hl, #(_bg_palette + 0x0024)
   009B 36 C4               191 	ld	(hl), #0xc4
   009D 23                  192 	inc	hl
   009E 36 19               193 	ld	(hl), #0x19
   00A0 21r28r00            194 	ld	hl, #(_bg_palette + 0x0026)
   00A3 36 E0               195 	ld	(hl), #0xe0
   00A5 23                  196 	inc	hl
   00A6 36 14               197 	ld	(hl), #0x14
   00A8 21r2Ar00            198 	ld	hl, #(_bg_palette + 0x0028)
   00AB 36 BC               199 	ld	(hl), #0xbc
   00AD 23                  200 	inc	hl
   00AE 36 17               201 	ld	(hl), #0x17
   00B0 21r2Cr00            202 	ld	hl, #(_bg_palette + 0x002a)
   00B3 36 E7               203 	ld	(hl), #0xe7
   00B5 23                  204 	inc	hl
   00B6 36 22               205 	ld	(hl), #0x22
   00B8 21r2Er00            206 	ld	hl, #(_bg_palette + 0x002c)
   00BB 36 C4               207 	ld	(hl), #0xc4
   00BD 23                  208 	inc	hl
   00BE 36 19               209 	ld	(hl), #0x19
   00C0 21r30r00            210 	ld	hl, #(_bg_palette + 0x002e)
   00C3 36 E0               211 	ld	(hl), #0xe0
   00C5 23                  212 	inc	hl
   00C6 36 14               213 	ld	(hl), #0x14
   00C8 21r32r00            214 	ld	hl, #(_bg_palette + 0x0030)
   00CB 36 BC               215 	ld	(hl), #0xbc
   00CD 23                  216 	inc	hl
   00CE 36 17               217 	ld	(hl), #0x17
   00D0 21r34r00            218 	ld	hl, #(_bg_palette + 0x0032)
   00D3 36 E7               219 	ld	(hl), #0xe7
   00D5 23                  220 	inc	hl
   00D6 36 22               221 	ld	(hl), #0x22
   00D8 21r36r00            222 	ld	hl, #(_bg_palette + 0x0034)
   00DB 36 C4               223 	ld	(hl), #0xc4
   00DD 23                  224 	inc	hl
   00DE 36 19               225 	ld	(hl), #0x19
   00E0 21r38r00            226 	ld	hl, #(_bg_palette + 0x0036)
   00E3 36 E0               227 	ld	(hl), #0xe0
   00E5 23                  228 	inc	hl
   00E6 36 14               229 	ld	(hl), #0x14
   00E8 21r3Ar00            230 	ld	hl, #(_bg_palette + 0x0038)
   00EB 36 BC               231 	ld	(hl), #0xbc
   00ED 23                  232 	inc	hl
   00EE 36 17               233 	ld	(hl), #0x17
   00F0 21r3Cr00            234 	ld	hl, #(_bg_palette + 0x003a)
   00F3 36 E7               235 	ld	(hl), #0xe7
   00F5 23                  236 	inc	hl
   00F6 36 22               237 	ld	(hl), #0x22
   00F8 21r3Er00            238 	ld	hl, #(_bg_palette + 0x003c)
   00FB 36 C4               239 	ld	(hl), #0xc4
   00FD 23                  240 	inc	hl
   00FE 36 19               241 	ld	(hl), #0x19
   0100 21r40r00            242 	ld	hl, #(_bg_palette + 0x003e)
   0103 36 E0               243 	ld	(hl), #0xe0
   0105 23                  244 	inc	hl
   0106 36 14               245 	ld	(hl), #0x14
                            246 ;StateGame.c:29: UINT16 sprites_palette[] = {
   0108 21r42r00            247 	ld	hl, #_sprites_palette
   010B 36 BC               248 	ld	(hl), #0xbc
   010D 23                  249 	inc	hl
   010E 36 17               250 	ld	(hl), #0x17
   0110 21r44r00            251 	ld	hl, #(_sprites_palette + 0x0002)
   0113 36 5E               252 	ld	(hl), #0x5e
   0115 23                  253 	inc	hl
   0116 36 4F               254 	ld	(hl), #0x4f
   0118 21r46r00            255 	ld	hl, #(_sprites_palette + 0x0004)
   011B 36 B3               256 	ld	(hl), #0xb3
   011D 23                  257 	inc	hl
   011E 36 01               258 	ld	(hl), #0x01
   0120 21r48r00            259 	ld	hl, #(_sprites_palette + 0x0006)
   0123 36 03               260 	ld	(hl), #0x03
   0125 23                  261 	inc	hl
   0126 36 7E               262 	ld	(hl), #0x7e
   0128 21r4Ar00            263 	ld	hl, #(_sprites_palette + 0x0008)
   012B 36 BC               264 	ld	(hl), #0xbc
   012D 23                  265 	inc	hl
   012E 36 17               266 	ld	(hl), #0x17
   0130 21r4Cr00            267 	ld	hl, #(_sprites_palette + 0x000a)
   0133 36 5E               268 	ld	(hl), #0x5e
   0135 23                  269 	inc	hl
   0136 36 4F               270 	ld	(hl), #0x4f
   0138 21r4Er00            271 	ld	hl, #(_sprites_palette + 0x000c)
   013B 36 B3               272 	ld	(hl), #0xb3
   013D 23                  273 	inc	hl
   013E 36 01               274 	ld	(hl), #0x01
   0140 21r50r00            275 	ld	hl, #(_sprites_palette + 0x000e)
   0143 36 03               276 	ld	(hl), #0x03
   0145 23                  277 	inc	hl
   0146 36 7E               278 	ld	(hl), #0x7e
   0148 21r52r00            279 	ld	hl, #(_sprites_palette + 0x0010)
   014B 36 BC               280 	ld	(hl), #0xbc
   014D 23                  281 	inc	hl
   014E 36 17               282 	ld	(hl), #0x17
   0150 21r54r00            283 	ld	hl, #(_sprites_palette + 0x0012)
   0153 36 E7               284 	ld	(hl), #0xe7
   0155 23                  285 	inc	hl
   0156 36 22               286 	ld	(hl), #0x22
   0158 21r56r00            287 	ld	hl, #(_sprites_palette + 0x0014)
   015B 36 C4               288 	ld	(hl), #0xc4
   015D 23                  289 	inc	hl
   015E 36 19               290 	ld	(hl), #0x19
   0160 21r58r00            291 	ld	hl, #(_sprites_palette + 0x0016)
   0163 36 E0               292 	ld	(hl), #0xe0
   0165 23                  293 	inc	hl
   0166 36 14               294 	ld	(hl), #0x14
   0168 21r5Ar00            295 	ld	hl, #(_sprites_palette + 0x0018)
   016B 36 BC               296 	ld	(hl), #0xbc
   016D 23                  297 	inc	hl
   016E 36 17               298 	ld	(hl), #0x17
   0170 21r5Cr00            299 	ld	hl, #(_sprites_palette + 0x001a)
   0173 36 E7               300 	ld	(hl), #0xe7
   0175 23                  301 	inc	hl
   0176 36 22               302 	ld	(hl), #0x22
   0178 21r5Er00            303 	ld	hl, #(_sprites_palette + 0x001c)
   017B 36 C4               304 	ld	(hl), #0xc4
   017D 23                  305 	inc	hl
   017E 36 19               306 	ld	(hl), #0x19
   0180 21r60r00            307 	ld	hl, #(_sprites_palette + 0x001e)
   0183 36 E0               308 	ld	(hl), #0xe0
   0185 23                  309 	inc	hl
   0186 36 14               310 	ld	(hl), #0x14
   0188 21r62r00            311 	ld	hl, #(_sprites_palette + 0x0020)
   018B 36 BC               312 	ld	(hl), #0xbc
   018D 23                  313 	inc	hl
   018E 36 17               314 	ld	(hl), #0x17
   0190 21r64r00            315 	ld	hl, #(_sprites_palette + 0x0022)
   0193 36 E7               316 	ld	(hl), #0xe7
   0195 23                  317 	inc	hl
   0196 36 22               318 	ld	(hl), #0x22
   0198 21r66r00            319 	ld	hl, #(_sprites_palette + 0x0024)
   019B 36 C4               320 	ld	(hl), #0xc4
   019D 23                  321 	inc	hl
   019E 36 19               322 	ld	(hl), #0x19
   01A0 21r68r00            323 	ld	hl, #(_sprites_palette + 0x0026)
   01A3 36 E0               324 	ld	(hl), #0xe0
   01A5 23                  325 	inc	hl
   01A6 36 14               326 	ld	(hl), #0x14
   01A8 21r6Ar00            327 	ld	hl, #(_sprites_palette + 0x0028)
   01AB 36 BC               328 	ld	(hl), #0xbc
   01AD 23                  329 	inc	hl
   01AE 36 17               330 	ld	(hl), #0x17
   01B0 21r6Cr00            331 	ld	hl, #(_sprites_palette + 0x002a)
   01B3 36 E7               332 	ld	(hl), #0xe7
   01B5 23                  333 	inc	hl
   01B6 36 22               334 	ld	(hl), #0x22
   01B8 21r6Er00            335 	ld	hl, #(_sprites_palette + 0x002c)
   01BB 36 C4               336 	ld	(hl), #0xc4
   01BD 23                  337 	inc	hl
   01BE 36 19               338 	ld	(hl), #0x19
   01C0 21r70r00            339 	ld	hl, #(_sprites_palette + 0x002e)
   01C3 36 E0               340 	ld	(hl), #0xe0
   01C5 23                  341 	inc	hl
   01C6 36 14               342 	ld	(hl), #0x14
   01C8 21r72r00            343 	ld	hl, #(_sprites_palette + 0x0030)
   01CB 36 BC               344 	ld	(hl), #0xbc
   01CD 23                  345 	inc	hl
   01CE 36 17               346 	ld	(hl), #0x17
   01D0 21r74r00            347 	ld	hl, #(_sprites_palette + 0x0032)
   01D3 36 E7               348 	ld	(hl), #0xe7
   01D5 23                  349 	inc	hl
   01D6 36 22               350 	ld	(hl), #0x22
   01D8 21r76r00            351 	ld	hl, #(_sprites_palette + 0x0034)
   01DB 36 C4               352 	ld	(hl), #0xc4
   01DD 23                  353 	inc	hl
   01DE 36 19               354 	ld	(hl), #0x19
   01E0 21r78r00            355 	ld	hl, #(_sprites_palette + 0x0036)
   01E3 36 E0               356 	ld	(hl), #0xe0
   01E5 23                  357 	inc	hl
   01E6 36 14               358 	ld	(hl), #0x14
   01E8 21r7Ar00            359 	ld	hl, #(_sprites_palette + 0x0038)
   01EB 36 BC               360 	ld	(hl), #0xbc
   01ED 23                  361 	inc	hl
   01EE 36 17               362 	ld	(hl), #0x17
   01F0 21r7Cr00            363 	ld	hl, #(_sprites_palette + 0x003a)
   01F3 36 E7               364 	ld	(hl), #0xe7
   01F5 23                  365 	inc	hl
   01F6 36 22               366 	ld	(hl), #0x22
   01F8 21r7Er00            367 	ld	hl, #(_sprites_palette + 0x003c)
   01FB 36 C4               368 	ld	(hl), #0xc4
   01FD 23                  369 	inc	hl
   01FE 36 19               370 	ld	(hl), #0x19
   0200 21r80r00            371 	ld	hl, #(_sprites_palette + 0x003e)
   0203 36 E0               372 	ld	(hl), #0xe0
   0205 23                  373 	inc	hl
   0206 36 14               374 	ld	(hl), #0x14
                            375 ;StateGame.c:40: UINT8 collision_tiles[] = {1, 2, 3, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 40, 41, 42, 46, 0};//numero delle tile con collisioni e ultimo sempre zero
   0208 21r82r00            376 	ld	hl, #_collision_tiles
   020B 36 01               377 	ld	(hl), #0x01
   020D 21r83r00            378 	ld	hl, #(_collision_tiles + 0x0001)
   0210 36 02               379 	ld	(hl), #0x02
   0212 21r84r00            380 	ld	hl, #(_collision_tiles + 0x0002)
   0215 36 03               381 	ld	(hl), #0x03
   0217 21r85r00            382 	ld	hl, #(_collision_tiles + 0x0003)
   021A 36 07               383 	ld	(hl), #0x07
   021C 21r86r00            384 	ld	hl, #(_collision_tiles + 0x0004)
   021F 36 09               385 	ld	(hl), #0x09
   0221 21r87r00            386 	ld	hl, #(_collision_tiles + 0x0005)
   0224 36 0A               387 	ld	(hl), #0x0a
   0226 21r88r00            388 	ld	hl, #(_collision_tiles + 0x0006)
   0229 36 0B               389 	ld	(hl), #0x0b
   022B 21r89r00            390 	ld	hl, #(_collision_tiles + 0x0007)
   022E 36 0C               391 	ld	(hl), #0x0c
   0230 21r8Ar00            392 	ld	hl, #(_collision_tiles + 0x0008)
   0233 36 0D               393 	ld	(hl), #0x0d
   0235 21r8Br00            394 	ld	hl, #(_collision_tiles + 0x0009)
   0238 36 0E               395 	ld	(hl), #0x0e
   023A 21r8Cr00            396 	ld	hl, #(_collision_tiles + 0x000a)
   023D 36 0F               397 	ld	(hl), #0x0f
   023F 21r8Dr00            398 	ld	hl, #(_collision_tiles + 0x000b)
   0242 36 10               399 	ld	(hl), #0x10
   0244 21r8Er00            400 	ld	hl, #(_collision_tiles + 0x000c)
   0247 36 11               401 	ld	(hl), #0x11
   0249 21r8Fr00            402 	ld	hl, #(_collision_tiles + 0x000d)
   024C 36 12               403 	ld	(hl), #0x12
   024E 21r90r00            404 	ld	hl, #(_collision_tiles + 0x000e)
   0251 36 13               405 	ld	(hl), #0x13
   0253 21r91r00            406 	ld	hl, #(_collision_tiles + 0x000f)
   0256 36 14               407 	ld	(hl), #0x14
   0258 21r92r00            408 	ld	hl, #(_collision_tiles + 0x0010)
   025B 36 15               409 	ld	(hl), #0x15
   025D 21r93r00            410 	ld	hl, #(_collision_tiles + 0x0011)
   0260 36 16               411 	ld	(hl), #0x16
   0262 21r94r00            412 	ld	hl, #(_collision_tiles + 0x0012)
   0265 36 17               413 	ld	(hl), #0x17
   0267 21r95r00            414 	ld	hl, #(_collision_tiles + 0x0013)
   026A 36 28               415 	ld	(hl), #0x28
   026C 21r96r00            416 	ld	hl, #(_collision_tiles + 0x0014)
   026F 36 29               417 	ld	(hl), #0x29
   0271 21r97r00            418 	ld	hl, #(_collision_tiles + 0x0015)
   0274 36 2A               419 	ld	(hl), #0x2a
   0276 21r98r00            420 	ld	hl, #(_collision_tiles + 0x0016)
   0279 36 2E               421 	ld	(hl), #0x2e
   027B 21r99r00            422 	ld	hl, #(_collision_tiles + 0x0017)
   027E 36 00               423 	ld	(hl), #0x00
                            424 ;StateGame.c:42: UINT8 amulet = 2u;
   0280 21r9Ar00            425 	ld	hl, #_amulet
   0283 36 02               426 	ld	(hl), #0x02
                            427 ;StateGame.c:43: UINT8 coins = 99u;
   0285 21r9Br00            428 	ld	hl, #_coins
   0288 36 63               429 	ld	(hl), #0x63
                            430 ;StateGame.c:44: INT8 ups = 3;
   028A 21r9Cr00            431 	ld	hl, #_ups
   028D 36 03               432 	ld	(hl), #0x03
                            433 ;StateGame.c:45: INT8 hp = 100;
   028F 21r9Dr00            434 	ld	hl, #_hp
   0292 36 64               435 	ld	(hl), #0x64
                            436 ;StateGame.c:46: INT8 level_tool = -1;
   0294 21r9Er00            437 	ld	hl, #_level_tool
   0297 36 FF               438 	ld	(hl), #0xff
                            439 ;StateGame.c:58: INT8 load_next = 0;
   0299 21r9Fr00            440 	ld	hl, #_load_next
   029C 36 00               441 	ld	(hl), #0x00
                            442 ;StateGame.c:59: INT8 load_next_s = 0;
   029E 21rA0r00            443 	ld	hl, #_load_next_s
   02A1 36 00               444 	ld	(hl), #0x00
                            445 ;StateGame.c:60: UINT8 current_level = 0;
   02A3 21rA1r00            446 	ld	hl, #_current_level
   02A6 36 00               447 	ld	(hl), #0x00
                            448 ;StateGame.c:61: UINT8 current_map = 0;
   02A8 21rA2r00            449 	ld	hl, #_current_map
   02AB 36 00               450 	ld	(hl), #0x00
                            451 ;StateGame.c:62: const struct MapInfo* level_1[] = {
   02AD 21rA3r00            452 	ld	hl, #_level_1
   02B0 36r00               453 	ld	(hl), #<(_map)
   02B2 23                  454 	inc	hl
   02B3 36s00               455 	ld	(hl), #>(_map)
   02B5 21rA5r00            456 	ld	hl, #(_level_1 + 0x0002)
   02B8 36r00               457 	ld	(hl), #<(_map2)
   02BA 23                  458 	inc	hl
   02BB 36s00               459 	ld	(hl), #>(_map2)
                            460 ;StateGame.c:66: const struct MapInfo** levels[] = {level_1};
   02BD 21rA7r00            461 	ld	hl, #_levels
   02C0 36rA3               462 	ld	(hl), #<(_level_1)
   02C2 23                  463 	inc	hl
   02C3 36s00               464 	ld	(hl), #>(_level_1)
                            465 ;--------------------------------------------------------
                            466 ; Home
                            467 ;--------------------------------------------------------
                            468 	.area _HOME
                            469 ;C:/GB/ZGB/common/include/Banks/SetBankCommon.h:4: void empty(void) __nonbanked {}
                            470 ;	---------------------------------
                            471 ; Function empty
                            472 ; ---------------------------------
   0000                     473 _empty::
   0000 C9                  474 	ret
                            475 	.area _HOME
                            476 ;--------------------------------------------------------
                            477 ; code
                            478 ;--------------------------------------------------------
                            479 	.area _CODE_2
                            480 ;StateGame.c:76: void Start_StateGame() {
                            481 ;	---------------------------------
                            482 ; Function Start_StateGame
                            483 ; ---------------------------------
   0000                     484 _Start_StateGame::
   0000 E8 F8               485 	add	sp, #-8
                            486 ;StateGame.c:81: SPRITES_8x16;
   0002 F0r00               487 	ldh	a, (_LCDC_REG+0)
   0004 F6 04               488 	or	a, #0x04
   0006 E0r00               489 	ldh	(_LCDC_REG+0),a
                            490 ;StateGame.c:83: for(i = 0; i != N_SPRITE_TYPES; ++ i) {
   0008 06 00               491 	ld	b, #0x00
   000A                     492 00118$:
                            493 ;StateGame.c:84: SpriteManagerLoad(i);
   000A C5                  494 	push	bc
   000B C5                  495 	push	bc
   000C 33                  496 	inc	sp
   000D CDr00r00            497 	call	_SpriteManagerLoad
   0010 33                  498 	inc	sp
   0011 C1                  499 	pop	bc
                            500 ;StateGame.c:83: for(i = 0; i != N_SPRITE_TYPES; ++ i) {
   0012 04                  501 	inc	b
   0013 78                  502 	ld	a, b
   0014 D6 07               503 	sub	a, #0x07
   0016 20 F2               504 	jr	NZ,00118$
                            505 ;StateGame.c:86: SHOW_SPRITES;
   0018 F0r00               506 	ldh	a, (_LCDC_REG+0)
   001A F6 02               507 	or	a, #0x02
   001C E0r00               508 	ldh	(_LCDC_REG+0),a
                            509 ;StateGame.c:89: scroll_bottom_movement_limit = 60;//customizzo altezza archer sul display
   001E 21r00r00            510 	ld	hl, #_scroll_bottom_movement_limit
   0021 36 3C               511 	ld	(hl), #0x3c
                            512 ;StateGame.c:91: const struct MapInfo** lvls = levels[current_level];
   0023 21rA1r00            513 	ld	hl, #_current_level
   0026 4E                  514 	ld	c, (hl)
   0027 06 00               515 	ld	b, #0x00
   0029 CB 21               516 	sla	c
   002B CB 10               517 	rl	b
   002D 21rA7r00            518 	ld	hl, #_levels
   0030 09                  519 	add	hl, bc
   0031 4D                  520 	ld	c, l
   0032 44                  521 	ld	b, h
   0033 59                  522 	ld	e, c
   0034 50                  523 	ld	d, b
   0035 1A                  524 	ld	a,(de)
   0036 F8 00               525 	ldhl	sp,	#0
   0038 22                  526 	ld	(hl+), a
   0039 13                  527 	inc	de
   003A 1A                  528 	ld	a, (de)
   003B 77                  529 	ld	(hl), a
                            530 ;StateGame.c:93: GetMapSize(lvls[current_map], &map_w, &map_h);
   003C F8 03               531 	ldhl	sp,	#3
   003E 4D                  532 	ld	c, l
   003F 44                  533 	ld	b, h
   0040 F8 04               534 	ldhl	sp,	#4
   0042 71                  535 	ld	(hl), c
   0043 23                  536 	inc	hl
   0044 70                  537 	ld	(hl), b
   0045 F8 02               538 	ldhl	sp,	#2
   0047 4D                  539 	ld	c, l
   0048 44                  540 	ld	b, h
   0049 F8 06               541 	ldhl	sp,	#6
   004B 71                  542 	ld	(hl), c
   004C 23                  543 	inc	hl
   004D 70                  544 	ld	(hl), b
   004E 21rA2r00            545 	ld	hl, #_current_map
   0051 4E                  546 	ld	c, (hl)
   0052 06 00               547 	ld	b, #0x00
   0054 CB 21               548 	sla	c
   0056 CB 10               549 	rl	b
   0058 E1                  550 	pop	hl
   0059 E5                  551 	push	hl
   005A 09                  552 	add	hl, bc
   005B 4D                  553 	ld	c,l
   005C 44                  554 	ld	b,h
   005D 4E                  555 	ld	c, (hl)
   005E 23                  556 	inc	hl
   005F 46                  557 	ld	b, (hl)
   0060 F8 04               558 	ldhl	sp,	#4
   0062 2A                  559 	ld	a, (hl+)
   0063 66                  560 	ld	h, (hl)
   0064 6F                  561 	ld	l, a
   0065 E5                  562 	push	hl
   0066 F8 08               563 	ldhl	sp,	#8
   0068 2A                  564 	ld	a, (hl+)
   0069 66                  565 	ld	h, (hl)
   006A 6F                  566 	ld	l, a
   006B E5                  567 	push	hl
   006C C5                  568 	push	bc
   006D CDr00r00            569 	call	_GetMapSize
   0070 E8 06               570 	add	sp, #6
   0072 21rA2r00            571 	ld	hl, #_current_map
   0075 4E                  572 	ld	c, (hl)
   0076 06 00               573 	ld	b, #0x00
                            574 ;StateGame.c:96: ScrollFindTile(lvls[current_map], 45, 0, 0, map_w, map_h, &drop_player_x, &drop_player_y);
   0078 CB 21               575 	sla	c
   007A CB 10               576 	rl	b
   007C E1                  577 	pop	hl
   007D E5                  578 	push	hl
   007E 09                  579 	add	hl, bc
   007F 7D                  580 	ld	a, l
   0080 54                  581 	ld	d, h
   0081 F8 06               582 	ldhl	sp,	#6
   0083 22                  583 	ld	(hl+), a
   0084 72                  584 	ld	(hl), d
                            585 ;StateGame.c:94: if (load_next_s){ //vengo da secret!
   0085 21rA0r00            586 	ld	hl, #_load_next_s
   0088 7E                  587 	ld	a, (hl)
   0089 B7                  588 	or	a, a
   008A CArBDr00            589 	jp	Z, 00103$
                            590 ;StateGame.c:95: load_next_s = 0;
   008D 36 00               591 	ld	(hl), #0x00
                            592 ;StateGame.c:96: ScrollFindTile(lvls[current_map], 45, 0, 0, map_w, map_h, &drop_player_x, &drop_player_y);
   008F F8 06               593 	ldhl	sp,#(7 - 1)
   0091 5E                  594 	ld	e, (hl)
   0092 23                  595 	inc	hl
   0093 56                  596 	ld	d, (hl)
   0094 1A                  597 	ld	a,(de)
   0095 4F                  598 	ld	c, a
   0096 13                  599 	inc	de
   0097 1A                  600 	ld	a,(de)
   0098 47                  601 	ld	b, a
   0099 21rABr00            602 	ld	hl, #_drop_player_y
   009C E5                  603 	push	hl
   009D 21rA9r00            604 	ld	hl, #_drop_player_x
   00A0 E5                  605 	push	hl
   00A1 F8 07               606 	ldhl	sp,	#7
   00A3 7E                  607 	ld	a, (hl)
   00A4 F5                  608 	push	af
   00A5 33                  609 	inc	sp
   00A6 2B                  610 	dec	hl
   00A7 7E                  611 	ld	a, (hl)
   00A8 F5                  612 	push	af
   00A9 33                  613 	inc	sp
   00AA AF                  614 	xor	a, a
   00AB F5                  615 	push	af
   00AC 33                  616 	inc	sp
   00AD AF                  617 	xor	a, a
   00AE F5                  618 	push	af
   00AF 33                  619 	inc	sp
   00B0 3E 2D               620 	ld	a, #0x2d
   00B2 F5                  621 	push	af
   00B3 33                  622 	inc	sp
   00B4 C5                  623 	push	bc
   00B5 CDr00r00            624 	call	_ScrollFindTile
   00B8 E8 0B               625 	add	sp, #11
   00BA C3rE8r00            626 	jp	00104$
   00BD                     627 00103$:
                            628 ;StateGame.c:98: ScrollFindTile(lvls[current_map], 9, 0, 0, map_w, map_h, &drop_player_x, &drop_player_y);
   00BD F8 06               629 	ldhl	sp,#(7 - 1)
   00BF 5E                  630 	ld	e, (hl)
   00C0 23                  631 	inc	hl
   00C1 56                  632 	ld	d, (hl)
   00C2 1A                  633 	ld	a,(de)
   00C3 4F                  634 	ld	c, a
   00C4 13                  635 	inc	de
   00C5 1A                  636 	ld	a,(de)
   00C6 47                  637 	ld	b, a
   00C7 21rABr00            638 	ld	hl, #_drop_player_y
   00CA E5                  639 	push	hl
   00CB 21rA9r00            640 	ld	hl, #_drop_player_x
   00CE E5                  641 	push	hl
   00CF F8 07               642 	ldhl	sp,	#7
   00D1 7E                  643 	ld	a, (hl)
   00D2 F5                  644 	push	af
   00D3 33                  645 	inc	sp
   00D4 2B                  646 	dec	hl
   00D5 7E                  647 	ld	a, (hl)
   00D6 F5                  648 	push	af
   00D7 33                  649 	inc	sp
   00D8 AF                  650 	xor	a, a
   00D9 F5                  651 	push	af
   00DA 33                  652 	inc	sp
   00DB AF                  653 	xor	a, a
   00DC F5                  654 	push	af
   00DD 33                  655 	inc	sp
   00DE 3E 09               656 	ld	a, #0x09
   00E0 F5                  657 	push	af
   00E1 33                  658 	inc	sp
   00E2 C5                  659 	push	bc
   00E3 CDr00r00            660 	call	_ScrollFindTile
   00E6 E8 0B               661 	add	sp, #11
   00E8                     662 00104$:
                            663 ;StateGame.c:100: scroll_target = SpriteManagerAdd(SpritePlayer, drop_player_x*8, drop_player_y*8);
   00E8 21rACr00            664 	ld	hl, #_drop_player_y + 1
   00EB 2B                  665 	dec	hl
   00EC 4E                  666 	ld	c, (hl)
   00ED 23                  667 	inc	hl
   00EE 46                  668 	ld	b, (hl)
   00EF CB 21               669 	sla	c
   00F1 CB 10               670 	rl	b
   00F3 CB 21               671 	sla	c
   00F5 CB 10               672 	rl	b
   00F7 CB 21               673 	sla	c
   00F9 CB 10               674 	rl	b
   00FB 21rAAr00            675 	ld	hl, #_drop_player_x + 1
   00FE 2B                  676 	dec	hl
   00FF 5E                  677 	ld	e, (hl)
   0100 23                  678 	inc	hl
   0101 56                  679 	ld	d, (hl)
   0102 CB 23               680 	sla	e
   0104 CB 12               681 	rl	d
   0106 CB 23               682 	sla	e
   0108 CB 12               683 	rl	d
   010A CB 23               684 	sla	e
   010C CB 12               685 	rl	d
   010E C5                  686 	push	bc
   010F D5                  687 	push	de
   0110 AF                  688 	xor	a, a
   0111 F5                  689 	push	af
   0112 33                  690 	inc	sp
   0113 CDr00r00            691 	call	_SpriteManagerAdd
   0116 E8 05               692 	add	sp, #5
   0118 21r00r00            693 	ld	hl, #_scroll_target
   011B 73                  694 	ld	(hl), e
   011C 23                  695 	inc	hl
   011D 72                  696 	ld	(hl), d
                            697 ;StateGame.c:101: InitScroll(lvls[current_map], collision_tiles, 0);
   011E 21rA2r00            698 	ld	hl, #_current_map
   0121 4E                  699 	ld	c, (hl)
   0122 06 00               700 	ld	b, #0x00
   0124 CB 21               701 	sla	c
   0126 CB 10               702 	rl	b
   0128 E1                  703 	pop	hl
   0129 E5                  704 	push	hl
   012A 09                  705 	add	hl, bc
   012B 4D                  706 	ld	c,l
   012C 44                  707 	ld	b,h
   012D 4E                  708 	ld	c, (hl)
   012E 23                  709 	inc	hl
   012F 46                  710 	ld	b, (hl)
   0130 21 00 00            711 	ld	hl, #0x0000
   0133 E5                  712 	push	hl
   0134 21r82r00            713 	ld	hl, #_collision_tiles
   0137 E5                  714 	push	hl
   0138 C5                  715 	push	bc
   0139 CDr00r00            716 	call	_InitScroll
   013C E8 06               717 	add	sp, #6
                            718 ;StateGame.c:102: SHOW_BKG;
   013E F0r00               719 	ldh	a, (_LCDC_REG+0)
   0140 F6 01               720 	or	a, #0x01
   0142 E0r00               721 	ldh	(_LCDC_REG+0),a
                            722 ;StateGame.c:105: struct ArcherInfo* archer_data = (struct ArcherInfo*)scroll_target->custom_data;
   0144 21r00r00            723 	ld	hl, #_scroll_target
   0147 46                  724 	ld	b, (hl)
   0148 23                  725 	inc	hl
   0149 4E                  726 	ld	c, (hl)
   014A 78                  727 	ld	a, b
   014B C6 19               728 	add	a, #0x19
   014D 47                  729 	ld	b, a
   014E 30 01               730 	jr	NC,00182$
   0150 0C                  731 	inc	c
   0151                     732 00182$:
   0151 F8 04               733 	ldhl	sp,	#4
   0153 70                  734 	ld	(hl), b
   0154 23                  735 	inc	hl
   0155 71                  736 	ld	(hl), c
                            737 ;StateGame.c:106: if (archer_data->ups > 0 & archer_data->ups != ups){
   0156 2B                  738 	dec	hl
   0157 4E                  739 	ld	c, (hl)
   0158 23                  740 	inc	hl
   0159 46                  741 	ld	b, (hl)
   015A 03                  742 	inc	bc
   015B 03                  743 	inc	bc
   015C 03                  744 	inc	bc
   015D 0A                  745 	ld	a, (bc)
   015E 23                  746 	inc	hl
   015F 77                  747 	ld	(hl), a
   0160 7E                  748 	ld	a, (hl)
   0161 5F                  749 	ld	e, a
   0162 3E 00               750 	ld	a, #0x00
   0164 57                  751 	ld	d, a
   0165 AF                  752 	xor	a, a
   0166 96                  753 	sub	a, (hl)
   0167 CB 7B               754 	bit	7, e
   0169 28 07               755 	jr	Z,00183$
   016B CB 7A               756 	bit	7, d
   016D 20 08               757 	jr	NZ,00184$
   016F BF                  758 	cp	a, a
   0170 18 05               759 	jr	00184$
   0172                     760 00183$:
   0172 CB 7A               761 	bit	7, d
   0174 28 01               762 	jr	Z,00184$
   0176 37                  763 	scf
   0177                     764 00184$:
   0177 3E 00               765 	ld	a, #0x00
   0179 17                  766 	rla
   017A F8 07               767 	ldhl	sp,	#7
   017C 77                  768 	ld	(hl), a
   017D 21r9Cr00            769 	ld	hl, #_ups
   0180 7E                  770 	ld	a, (hl)
   0181 F8 06               771 	ldhl	sp,	#6
   0183 96                  772 	sub	a, (hl)
   0184 3E 01               773 	ld	a, #0x01
   0186 28 01               774 	jr	Z,00186$
   0188 AF                  775 	xor	a, a
   0189                     776 00186$:
   0189 EE 01               777 	xor	a, #0x01
   018B F8 07               778 	ldhl	sp,	#7
   018D 5E                  779 	ld	e, (hl)
   018E A3                  780 	and	a,e
   018F 28 08               781 	jr	Z,00106$
                            782 ;StateGame.c:107: ups = archer_data->ups;
   0191 E5                  783 	push	hl
   0192 2B                  784 	dec	hl
   0193 7E                  785 	ld	a, (hl)
   0194 21r9Cr00            786 	ld	hl, #_ups
   0197 77                  787 	ld	(hl), a
   0198 E1                  788 	pop	hl
   0199                     789 00106$:
                            790 ;StateGame.c:109: if (ups == -1){ //cioè vengo dal gameOver
   0199 21r9Cr00            791 	ld	hl, #_ups
   019C 7E                  792 	ld	a, (hl)
   019D 3C                  793 	inc	a
   019E 20 0A               794 	jr	NZ,00108$
                            795 ;StateGame.c:110: ups = 3;
   01A0 21r9Cr00            796 	ld	hl, #_ups
   01A3 36 03               797 	ld	(hl), #0x03
                            798 ;StateGame.c:111: coins = 99u;
   01A5 21r9Br00            799 	ld	hl, #_coins
   01A8 36 63               800 	ld	(hl), #0x63
   01AA                     801 00108$:
                            802 ;StateGame.c:113: archer_data->ups =ups;
   01AA 21r9Cr00            803 	ld	hl, #_ups
   01AD 7E                  804 	ld	a, (hl)
   01AE 02                  805 	ld	(bc), a
                            806 ;StateGame.c:114: archer_data->hp = hp;
   01AF F8 04               807 	ldhl	sp,#(5 - 1)
   01B1 4E                  808 	ld	c, (hl)
   01B2 23                  809 	inc	hl
   01B3 46                  810 	ld	b, (hl)
   01B4 03                  811 	inc	bc
   01B5 03                  812 	inc	bc
   01B6 21r9Dr00            813 	ld	hl, #_hp
   01B9 7E                  814 	ld	a, (hl)
   01BA 02                  815 	ld	(bc), a
                            816 ;StateGame.c:115: archer_data->coins = coins;
   01BB F8 04               817 	ldhl	sp,#(5 - 1)
   01BD 4E                  818 	ld	c, (hl)
   01BE 23                  819 	inc	hl
   01BF 46                  820 	ld	b, (hl)
   01C0 03                  821 	inc	bc
   01C1 21r9Br00            822 	ld	hl, #_coins
   01C4 7E                  823 	ld	a, (hl)
   01C5 02                  824 	ld	(bc), a
                            825 ;StateGame.c:119: INIT_FONT(font, PRINT_WIN);
   01C6 21r00r00            826 	ld	hl, #_font
   01C9 E5                  827 	push	hl
   01CA 3E CC               828 	ld	a, #0xcc
   01CC F5                  829 	push	af
   01CD 33                  830 	inc	sp
   01CE CDr00r00            831 	call	_ScrollSetTiles
   01D1 E8 03               832 	add	sp, #3
   01D3 21r00r00            833 	ld	hl, #_font_idx
   01D6 36 CC               834 	ld	(hl), #0xcc
   01D8 21r00r00            835 	ld	hl, #_print_target
   01DB 36 01               836 	ld	(hl), #0x01
                            837 ;StateGame.c:121: WX_REG = 7;
   01DD 3E 07               838 	ld	a, #0x07
   01DF E0r00               839 	ldh	(_WX_REG+0),a
                            840 ;StateGame.c:122: WY_REG = 144 - 32;
   01E1 3E 70               841 	ld	a, #0x70
   01E3 E0r00               842 	ldh	(_WY_REG+0),a
                            843 ;StateGame.c:123: InitWindow(0, 0, &window);
   01E5 21r00r00            844 	ld	hl, #_window
   01E8 E5                  845 	push	hl
   01E9 AF                  846 	xor	a, a
   01EA F5                  847 	push	af
   01EB 33                  848 	inc	sp
   01EC AF                  849 	xor	a, a
   01ED F5                  850 	push	af
   01EE 33                  851 	inc	sp
   01EF CDr00r00            852 	call	_InitWindow
   01F2 E8 04               853 	add	sp, #4
                            854 ;StateGame.c:124: SHOW_WIN;
   01F4 F0r00               855 	ldh	a, (_LCDC_REG+0)
   01F6 F6 20               856 	or	a, #0x20
   01F8 E0r00               857 	ldh	(_LCDC_REG+0),a
                            858 ;StateGame.c:125: WriteAMULET();
   01FA CDr06r07            859 	call	_WriteAMULET
                            860 ;StateGame.c:126: WriteCOINS();
   01FD CDrA3r07            861 	call	_WriteCOINS
                            862 ;StateGame.c:127: WriteHP();
   0200 CDrD5r07            863 	call	_WriteHP
                            864 ;StateGame.c:128: WriteUPS();
   0203 CDr7Fr08            865 	call	_WriteUPS
                            866 ;StateGame.c:129: WriteMap();
   0206 CDr7Fr07            867 	call	_WriteMap
                            868 ;StateGame.c:132: switch(current_level){
   0209 21rA1r00            869 	ld	hl, #_current_level
   020C 7E                  870 	ld	a, (hl)
   020D B7                  871 	or	a, a
   020E C2r80r02            872 	jp	NZ,00116$
                            873 ;StateGame.c:134: switch(current_map){
   0211 21rA2r00            874 	ld	hl, #_current_map
   0214 7E                  875 	ld	a, (hl)
   0215 B7                  876 	or	a, a
   0216 28 0B               877 	jr	Z,00110$
   0218 21rA2r00            878 	ld	hl, #_current_map
   021B 7E                  879 	ld	a, (hl)
   021C 3D                  880 	dec	a
   021D CAr71r02            881 	jp	Z,00113$
   0220 C3r76r02            882 	jp	00114$
                            883 ;StateGame.c:135: case 0:
   0223                     884 00110$:
                            885 ;StateGame.c:136: populate_00();
   0223 CDr22r04            886 	call	_populate_00
                            887 ;StateGame.c:137: level_tool = 6;
   0226 21r9Er00            888 	ld	hl, #_level_tool
   0229 36 06               889 	ld	(hl), #0x06
                            890 ;StateGame.c:139: if(archer_data->tool == 0){
   022B F8 04               891 	ldhl	sp,#(5 - 1)
   022D 5E                  892 	ld	e, (hl)
   022E 23                  893 	inc	hl
   022F 56                  894 	ld	d, (hl)
   0230 21 04 00            895 	ld	hl, #0x0004
   0233 19                  896 	add	hl, de
   0234 4D                  897 	ld	c, l
   0235 44                  898 	ld	b, h
   0236 0A                  899 	ld	a, (bc)
   0237 B7                  900 	or	a, a
   0238 C2r8Dr02            901 	jp	NZ, 00117$
                            902 ;StateGame.c:140: struct Sprite* wrench_sprite = SpriteManagerAdd(SpriteItem, 46*8, 2*8);
   023B 21 10 00            903 	ld	hl, #0x0010
   023E E5                  904 	push	hl
   023F 21 70 01            905 	ld	hl, #0x0170
   0242 E5                  906 	push	hl
   0243 3E 03               907 	ld	a, #0x03
   0245 F5                  908 	push	af
   0246 33                  909 	inc	sp
   0247 CDr00r00            910 	call	_SpriteManagerAdd
   024A E8 05               911 	add	sp, #5
   024C 4B                  912 	ld	c, e
   024D 42                  913 	ld	b, d
                            914 ;StateGame.c:141: struct ItemInfo* datawrench = (struct ItemInfo*)wrench_sprite->custom_data;
   024E 21 19 00            915 	ld	hl, #0x0019
   0251 09                  916 	add	hl, bc
   0252 4D                  917 	ld	c, l
   0253 7C                  918 	ld	a, h
   0254 47                  919 	ld	b, a
                            920 ;StateGame.c:142: datawrench->type = 6;
   0255 21 01 00            921 	ld	hl, #0x0001
   0258 09                  922 	add	hl, bc
   0259 7D                  923 	ld	a, l
   025A 54                  924 	ld	d, h
   025B F8 06               925 	ldhl	sp,	#6
   025D 22                  926 	ld	(hl+), a
   025E 72                  927 	ld	(hl), d
   025F 2B                  928 	dec	hl
   0260 2A                  929 	ld	a, (hl+)
   0261 66                  930 	ld	h, (hl)
   0262 6F                  931 	ld	l, a
   0263 36 06               932 	ld	(hl), #0x06
                            933 ;StateGame.c:143: datawrench->collided = 1;
   0265 3E 01               934 	ld	a, #0x01
   0267 02                  935 	ld	(bc), a
                            936 ;StateGame.c:144: datawrench->setup = 1u;
   0268 03                  937 	inc	bc
   0269 03                  938 	inc	bc
   026A 03                  939 	inc	bc
   026B 03                  940 	inc	bc
   026C 3E 01               941 	ld	a, #0x01
   026E 02                  942 	ld	(bc), a
                            943 ;StateGame.c:146: break;
   026F 18 1C               944 	jr	00117$
                            945 ;StateGame.c:147: case 1:
   0271                     946 00113$:
                            947 ;StateGame.c:148: populate_01();
   0271 CDrAFr02            948 	call	_populate_01
                            949 ;StateGame.c:149: break;
   0274 18 17               950 	jr	00117$
                            951 ;StateGame.c:150: default:
   0276                     952 00114$:
                            953 ;StateGame.c:151: current_map = 0;
   0276 21rA2r00            954 	ld	hl, #_current_map
   0279 36 00               955 	ld	(hl), #0x00
                            956 ;StateGame.c:152: populate_00();
   027B CDr22r04            957 	call	_populate_00
                            958 ;StateGame.c:155: break;
   027E 18 0D               959 	jr	00117$
                            960 ;StateGame.c:156: default:
   0280                     961 00116$:
                            962 ;StateGame.c:157: current_level = 0;
   0280 21rA1r00            963 	ld	hl, #_current_level
   0283 36 00               964 	ld	(hl), #0x00
                            965 ;StateGame.c:158: current_map = 0;
   0285 21rA2r00            966 	ld	hl, #_current_map
   0288 36 00               967 	ld	(hl), #0x00
                            968 ;StateGame.c:159: populate_00();
   028A CDr22r04            969 	call	_populate_00
                            970 ;StateGame.c:161: }
   028D                     971 00117$:
                            972 ;StateGame.c:164: NR52_REG = 0x80; //Enables sound, you should always setup this first
   028D 3E 80               973 	ld	a, #0x80
   028F E0r00               974 	ldh	(_NR52_REG+0),a
                            975 ;StateGame.c:165: NR51_REG = 0xFF; //Enables all channels (left and right)
   0291 3E FF               976 	ld	a, #0xff
   0293 E0r00               977 	ldh	(_NR51_REG+0),a
                            978 ;StateGame.c:167: }
   0295 E8 08               979 	add	sp, #8
   0297 C9                  980 	ret
   0298                     981 _level_names:
   0298r9Cr02               982 	.dw __str_0
   029ArA4r02               983 	.dw __str_1
   029C                     984 __str_0:
   029C 54 48 45 20 5A 4F   985 	.ascii "THE ZOO"
        4F
   02A3 00                  986 	.db 0x00
   02A4                     987 __str_1:
   02A4 54 48 45 20 53 45   988 	.ascii "THE SEWERS"
        57 45 52 53
   02AE 00                  989 	.db 0x00
                            990 ;StateGame.c:170: void populate_01(){
                            991 ;	---------------------------------
                            992 ; Function populate_01
                            993 ; ---------------------------------
   02AF                     994 _populate_01::
   02AF E8 EE               995 	add	sp, #-18
                            996 ;StateGame.c:173: UINT8 platform_positions_x[] = {9}; //10
   02B1 F8 00               997 	ldhl	sp,	#0
   02B3 7D                  998 	ld	a, l
   02B4 54                  999 	ld	d, h
   02B5 F8 0B              1000 	ldhl	sp,	#11
   02B7 22                 1001 	ld	(hl+), a
   02B8 72                 1002 	ld	(hl), d
   02B9 2B                 1003 	dec	hl
   02BA 2A                 1004 	ld	a, (hl+)
   02BB 66                 1005 	ld	h, (hl)
   02BC 6F                 1006 	ld	l, a
   02BD 36 09              1007 	ld	(hl), #0x09
                           1008 ;StateGame.c:174: UINT8 platform_positions_y[] = {21}; //30
   02BF F8 01              1009 	ldhl	sp,	#1
   02C1 7D                 1010 	ld	a, l
   02C2 54                 1011 	ld	d, h
   02C3 F8 0D              1012 	ldhl	sp,	#13
   02C5 22                 1013 	ld	(hl+), a
   02C6 72                 1014 	ld	(hl), d
   02C7 2B                 1015 	dec	hl
   02C8 2A                 1016 	ld	a, (hl+)
   02C9 66                 1017 	ld	h, (hl)
   02CA 6F                 1018 	ld	l, a
   02CB 36 15              1019 	ld	(hl), #0x15
                           1020 ;StateGame.c:176: for(plc=0; plc < platform_count; plc++){
   02CD AF                 1021 	xor	a, a
   02CE F8 11              1022 	ldhl	sp,	#17
   02D0 77                 1023 	ld	(hl), a
   02D1                    1024 00108$:
   02D1 F8 11              1025 	ldhl	sp,	#17
   02D3 7E                 1026 	ld	a, (hl)
   02D4 D6 01              1027 	sub	a, #0x01
   02D6 D2r41r03           1028 	jp	NC, 00101$
                           1029 ;StateGame.c:177: struct Sprite* platform_sprite = SpriteManagerAdd(SpritePlatform, platform_positions_x[plc]*8, platform_positions_y[plc]*8);
   02D9 F8 0D              1030 	ldhl	sp,#(14 - 1)
   02DB 5E                 1031 	ld	e, (hl)
   02DC 23                 1032 	inc	hl
   02DD 56                 1033 	ld	d, (hl)
   02DE F8 11              1034 	ldhl	sp,	#17
   02E0 6E                 1035 	ld	l, (hl)
   02E1 26 00              1036 	ld	h, #0x00
   02E3 19                 1037 	add	hl, de
   02E4 4D                 1038 	ld	c, l
   02E5 44                 1039 	ld	b, h
   02E6 0A                 1040 	ld	a, (bc)
   02E7 4F                 1041 	ld	c, a
   02E8 06 00              1042 	ld	b, #0x00
   02EA CB 21              1043 	sla	c
   02EC CB 10              1044 	rl	b
   02EE CB 21              1045 	sla	c
   02F0 CB 10              1046 	rl	b
   02F2 CB 21              1047 	sla	c
   02F4 CB 10              1048 	rl	b
   02F6 F8 0B              1049 	ldhl	sp,#(12 - 1)
   02F8 5E                 1050 	ld	e, (hl)
   02F9 23                 1051 	inc	hl
   02FA 56                 1052 	ld	d, (hl)
   02FB F8 11              1053 	ldhl	sp,	#17
   02FD 6E                 1054 	ld	l, (hl)
   02FE 26 00              1055 	ld	h, #0x00
   0300 19                 1056 	add	hl, de
   0301 7D                 1057 	ld	a, l
   0302 54                 1058 	ld	d, h
   0303 F8 0F              1059 	ldhl	sp,	#15
   0305 22                 1060 	ld	(hl+), a
   0306 72                 1061 	ld	(hl), d
   0307 2B                 1062 	dec	hl
   0308 5E                 1063 	ld	e, (hl)
   0309 23                 1064 	inc	hl
   030A 56                 1065 	ld	d, (hl)
   030B 1A                 1066 	ld	a,(de)
   030C 5F                 1067 	ld	e, a
   030D 16 00              1068 	ld	d, #0x00
   030F CB 23              1069 	sla	e
   0311 CB 12              1070 	rl	d
   0313 CB 23              1071 	sla	e
   0315 CB 12              1072 	rl	d
   0317 CB 23              1073 	sla	e
   0319 CB 12              1074 	rl	d
   031B C5                 1075 	push	bc
   031C D5                 1076 	push	de
   031D 3E 02              1077 	ld	a, #0x02
   031F F5                 1078 	push	af
   0320 33                 1079 	inc	sp
   0321 CDr00r00           1080 	call	_SpriteManagerAdd
   0324 E8 05              1081 	add	sp, #5
   0326 4B                 1082 	ld	c, e
   0327 42                 1083 	ld	b, d
                           1084 ;StateGame.c:178: struct PlatformInfo* dataplatform = (struct PlatformInfo*)platform_sprite->custom_data;
   0328 21 19 00           1085 	ld	hl, #0x0019
   032B 09                 1086 	add	hl, bc
   032C 4D                 1087 	ld	c, l
   032D 7C                 1088 	ld	a, h
   032E 47                 1089 	ld	b, a
                           1090 ;StateGame.c:179: dataplatform->initx = platform_positions_x[plc]*8;	
   032F 03                 1091 	inc	bc
   0330 03                 1092 	inc	bc
   0331 03                 1093 	inc	bc
   0332 F8 0F              1094 	ldhl	sp,#(16 - 1)
   0334 5E                 1095 	ld	e, (hl)
   0335 23                 1096 	inc	hl
   0336 56                 1097 	ld	d, (hl)
   0337 1A                 1098 	ld	a,(de)
   0338 87                 1099 	add	a, a
   0339 87                 1100 	add	a, a
   033A 87                 1101 	add	a, a
   033B 02                 1102 	ld	(bc), a
                           1103 ;StateGame.c:176: for(plc=0; plc < platform_count; plc++){
   033C 23                 1104 	inc	hl
   033D 34                 1105 	inc	(hl)
   033E C3rD1r02           1106 	jp	00108$
   0341                    1107 00101$:
                           1108 ;StateGame.c:184: UINT8 e_positions_x[] = {32, 17};
   0341 F8 02              1109 	ldhl	sp,	#2
   0343 7D                 1110 	ld	a, l
   0344 54                 1111 	ld	d, h
   0345 F8 08              1112 	ldhl	sp,	#8
   0347 22                 1113 	ld	(hl+), a
   0348 72                 1114 	ld	(hl), d
   0349 2B                 1115 	dec	hl
   034A 2A                 1116 	ld	a, (hl+)
   034B 66                 1117 	ld	h, (hl)
   034C 6F                 1118 	ld	l, a
   034D 36 20              1119 	ld	(hl), #0x20
   034F F8 08              1120 	ldhl	sp,#(9 - 1)
   0351 4E                 1121 	ld	c, (hl)
   0352 23                 1122 	inc	hl
   0353 46                 1123 	ld	b, (hl)
   0354 03                 1124 	inc	bc
   0355 3E 11              1125 	ld	a, #0x11
   0357 02                 1126 	ld	(bc), a
                           1127 ;StateGame.c:185: UINT8 e_positions_y[] = {9, 39};
   0358 F8 04              1128 	ldhl	sp,	#4
   035A 7D                 1129 	ld	a, l
   035B 54                 1130 	ld	d, h
   035C F8 0A              1131 	ldhl	sp,	#10
   035E 22                 1132 	ld	(hl+), a
   035F 72                 1133 	ld	(hl), d
   0360 2B                 1134 	dec	hl
   0361 2A                 1135 	ld	a, (hl+)
   0362 66                 1136 	ld	h, (hl)
   0363 6F                 1137 	ld	l, a
   0364 36 09              1138 	ld	(hl), #0x09
   0366 F8 0A              1139 	ldhl	sp,#(11 - 1)
   0368 4E                 1140 	ld	c, (hl)
   0369 23                 1141 	inc	hl
   036A 46                 1142 	ld	b, (hl)
   036B 03                 1143 	inc	bc
   036C 3E 27              1144 	ld	a, #0x27
   036E 02                 1145 	ld	(bc), a
                           1146 ;StateGame.c:186: INT8 e_types[] = {1, 2}; //0=snake, 1=scorpion, 2=porcupine
   036F F8 06              1147 	ldhl	sp,	#6
   0371 7D                 1148 	ld	a, l
   0372 54                 1149 	ld	d, h
   0373 F8 0C              1150 	ldhl	sp,	#12
   0375 22                 1151 	ld	(hl+), a
   0376 72                 1152 	ld	(hl), d
   0377 2B                 1153 	dec	hl
   0378 2A                 1154 	ld	a, (hl+)
   0379 66                 1155 	ld	h, (hl)
   037A 6F                 1156 	ld	l, a
   037B 36 01              1157 	ld	(hl), #0x01
   037D F8 0C              1158 	ldhl	sp,#(13 - 1)
   037F 4E                 1159 	ld	c, (hl)
   0380 23                 1160 	inc	hl
   0381 46                 1161 	ld	b, (hl)
   0382 03                 1162 	inc	bc
   0383 3E 02              1163 	ld	a, #0x02
   0385 02                 1164 	ld	(bc), a
                           1165 ;StateGame.c:187: for(plc=0; plc < e_count; plc++){
   0386 AF                 1166 	xor	a, a
   0387 F8 11              1167 	ldhl	sp,	#17
   0389 77                 1168 	ld	(hl), a
   038A                    1169 00111$:
   038A F8 11              1170 	ldhl	sp,	#17
   038C 7E                 1171 	ld	a, (hl)
   038D D6 02              1172 	sub	a, #0x02
   038F D2r1Fr04           1173 	jp	NC, 00113$
                           1174 ;StateGame.c:188: switch(e_types[plc]){
   0392 F8 0C              1175 	ldhl	sp,#(13 - 1)
   0394 5E                 1176 	ld	e, (hl)
   0395 23                 1177 	inc	hl
   0396 56                 1178 	ld	d, (hl)
   0397 F8 11              1179 	ldhl	sp,	#17
   0399 6E                 1180 	ld	l, (hl)
   039A 26 00              1181 	ld	h, #0x00
   039C 19                 1182 	add	hl, de
   039D 4D                 1183 	ld	c, l
   039E 44                 1184 	ld	b, h
   039F 0A                 1185 	ld	a, (bc)
   03A0 F8 0E              1186 	ldhl	sp,	#14
   03A2 77                 1187 	ld	(hl), a
                           1188 ;StateGame.c:189: case 1: SpriteManagerAdd(SpriteEnemy, e_positions_x[plc]*8, e_positions_y[plc]*8); break;
   03A3 F8 0A              1189 	ldhl	sp,#(11 - 1)
   03A5 5E                 1190 	ld	e, (hl)
   03A6 23                 1191 	inc	hl
   03A7 56                 1192 	ld	d, (hl)
   03A8 F8 11              1193 	ldhl	sp,	#17
   03AA 6E                 1194 	ld	l, (hl)
   03AB 26 00              1195 	ld	h, #0x00
   03AD 19                 1196 	add	hl, de
   03AE 4D                 1197 	ld	c, l
   03AF 44                 1198 	ld	b, h
   03B0 F8 08              1199 	ldhl	sp,#(9 - 1)
   03B2 5E                 1200 	ld	e, (hl)
   03B3 23                 1201 	inc	hl
   03B4 56                 1202 	ld	d, (hl)
   03B5 F8 11              1203 	ldhl	sp,	#17
   03B7 6E                 1204 	ld	l, (hl)
   03B8 26 00              1205 	ld	h, #0x00
   03BA 19                 1206 	add	hl, de
   03BB 7D                 1207 	ld	a, l
   03BC 54                 1208 	ld	d, h
   03BD F8 0F              1209 	ldhl	sp,	#15
   03BF 22                 1210 	ld	(hl+), a
   03C0 72                 1211 	ld	(hl), d
   03C1 0A                 1212 	ld	a, (bc)
   03C2 4F                 1213 	ld	c, a
   03C3 2B                 1214 	dec	hl
   03C4 5E                 1215 	ld	e, (hl)
   03C5 23                 1216 	inc	hl
   03C6 56                 1217 	ld	d, (hl)
   03C7 1A                 1218 	ld	a,(de)
   03C8 06 00              1219 	ld	b, #0x00
   03CA 5F                 1220 	ld	e, a
   03CB 16 00              1221 	ld	d, #0x00
   03CD CB 21              1222 	sla	c
   03CF CB 10              1223 	rl	b
   03D1 CB 21              1224 	sla	c
   03D3 CB 10              1225 	rl	b
   03D5 CB 21              1226 	sla	c
   03D7 CB 10              1227 	rl	b
   03D9 CB 23              1228 	sla	e
   03DB CB 12              1229 	rl	d
   03DD CB 23              1230 	sla	e
   03DF CB 12              1231 	rl	d
   03E1 CB 23              1232 	sla	e
   03E3 CB 12              1233 	rl	d
                           1234 ;StateGame.c:188: switch(e_types[plc]){
   03E5 2B                 1235 	dec	hl
   03E6 2B                 1236 	dec	hl
   03E7 7E                 1237 	ld	a, (hl)
   03E8 3D                 1238 	dec	a
   03E9 28 09              1239 	jr	Z,00102$
   03EB F8 0E              1240 	ldhl	sp,	#14
   03ED 7E                 1241 	ld	a, (hl)
   03EE D6 02              1242 	sub	a, #0x02
   03F0 28 0F              1243 	jr	Z,00103$
   03F2 18 1A              1244 	jr	00104$
                           1245 ;StateGame.c:189: case 1: SpriteManagerAdd(SpriteEnemy, e_positions_x[plc]*8, e_positions_y[plc]*8); break;
   03F4                    1246 00102$:
   03F4 C5                 1247 	push	bc
   03F5 D5                 1248 	push	de
   03F6 3E 04              1249 	ld	a, #0x04
   03F8 F5                 1250 	push	af
   03F9 33                 1251 	inc	sp
   03FA CDr00r00           1252 	call	_SpriteManagerAdd
   03FD E8 05              1253 	add	sp, #5
   03FF 18 18              1254 	jr	00112$
                           1255 ;StateGame.c:190: case 2: SpriteManagerAdd(SpritePorcupine, e_positions_x[plc]*8, e_positions_y[plc]*8); break;
   0401                    1256 00103$:
   0401 C5                 1257 	push	bc
   0402 D5                 1258 	push	de
   0403 3E 06              1259 	ld	a, #0x06
   0405 F5                 1260 	push	af
   0406 33                 1261 	inc	sp
   0407 CDr00r00           1262 	call	_SpriteManagerAdd
   040A E8 05              1263 	add	sp, #5
   040C 18 0B              1264 	jr	00112$
                           1265 ;StateGame.c:191: default: SpriteManagerAdd(SpriteScorpion, e_positions_x[plc]*8, e_positions_y[plc]*8);
   040E                    1266 00104$:
   040E C5                 1267 	push	bc
   040F D5                 1268 	push	de
   0410 3E 05              1269 	ld	a, #0x05
   0412 F5                 1270 	push	af
   0413 33                 1271 	inc	sp
   0414 CDr00r00           1272 	call	_SpriteManagerAdd
   0417 E8 05              1273 	add	sp, #5
                           1274 ;StateGame.c:192: }
   0419                    1275 00112$:
                           1276 ;StateGame.c:187: for(plc=0; plc < e_count; plc++){
   0419 F8 11              1277 	ldhl	sp,	#17
   041B 34                 1278 	inc	(hl)
   041C C3r8Ar03           1279 	jp	00111$
   041F                    1280 00113$:
                           1281 ;StateGame.c:194: }
   041F E8 12              1282 	add	sp, #18
   0421 C9                 1283 	ret
                           1284 ;StateGame.c:196: void populate_00(){
                           1285 ;	---------------------------------
                           1286 ; Function populate_00
                           1287 ; ---------------------------------
   0422                    1288 _populate_00::
   0422 E8 E3              1289 	add	sp, #-29
                           1290 ;StateGame.c:199: INT8 scrigni_positions_x[] = {7, 12, 9, 17};
   0424 F8 00              1291 	ldhl	sp,	#0
   0426 7D                 1292 	ld	a, l
   0427 54                 1293 	ld	d, h
   0428 F8 12              1294 	ldhl	sp,	#18
   042A 22                 1295 	ld	(hl+), a
   042B 72                 1296 	ld	(hl), d
   042C 2B                 1297 	dec	hl
   042D 2A                 1298 	ld	a, (hl+)
   042E 66                 1299 	ld	h, (hl)
   042F 6F                 1300 	ld	l, a
   0430 36 07              1301 	ld	(hl), #0x07
   0432 F8 12              1302 	ldhl	sp,#(19 - 1)
   0434 4E                 1303 	ld	c, (hl)
   0435 23                 1304 	inc	hl
   0436 46                 1305 	ld	b, (hl)
   0437 03                 1306 	inc	bc
   0438 3E 0C              1307 	ld	a, #0x0c
   043A 02                 1308 	ld	(bc), a
   043B 2B                 1309 	dec	hl
   043C 4E                 1310 	ld	c, (hl)
   043D 23                 1311 	inc	hl
   043E 46                 1312 	ld	b, (hl)
   043F 03                 1313 	inc	bc
   0440 03                 1314 	inc	bc
   0441 3E 09              1315 	ld	a, #0x09
   0443 02                 1316 	ld	(bc), a
   0444 2B                 1317 	dec	hl
   0445 4E                 1318 	ld	c, (hl)
   0446 23                 1319 	inc	hl
   0447 46                 1320 	ld	b, (hl)
   0448 03                 1321 	inc	bc
   0449 03                 1322 	inc	bc
   044A 03                 1323 	inc	bc
   044B 3E 11              1324 	ld	a, #0x11
   044D 02                 1325 	ld	(bc), a
                           1326 ;StateGame.c:200: INT8 scrigni_positions_y[] = {14, 23, 7, 36};
   044E F8 04              1327 	ldhl	sp,	#4
   0450 7D                 1328 	ld	a, l
   0451 54                 1329 	ld	d, h
   0452 F8 14              1330 	ldhl	sp,	#20
   0454 22                 1331 	ld	(hl+), a
   0455 72                 1332 	ld	(hl), d
   0456 2B                 1333 	dec	hl
   0457 2A                 1334 	ld	a, (hl+)
   0458 66                 1335 	ld	h, (hl)
   0459 6F                 1336 	ld	l, a
   045A 36 0E              1337 	ld	(hl), #0x0e
   045C F8 14              1338 	ldhl	sp,#(21 - 1)
   045E 4E                 1339 	ld	c, (hl)
   045F 23                 1340 	inc	hl
   0460 46                 1341 	ld	b, (hl)
   0461 03                 1342 	inc	bc
   0462 3E 17              1343 	ld	a, #0x17
   0464 02                 1344 	ld	(bc), a
   0465 2B                 1345 	dec	hl
   0466 4E                 1346 	ld	c, (hl)
   0467 23                 1347 	inc	hl
   0468 46                 1348 	ld	b, (hl)
   0469 03                 1349 	inc	bc
   046A 03                 1350 	inc	bc
   046B 3E 07              1351 	ld	a, #0x07
   046D 02                 1352 	ld	(bc), a
   046E 2B                 1353 	dec	hl
   046F 4E                 1354 	ld	c, (hl)
   0470 23                 1355 	inc	hl
   0471 46                 1356 	ld	b, (hl)
   0472 03                 1357 	inc	bc
   0473 03                 1358 	inc	bc
   0474 03                 1359 	inc	bc
   0475 3E 24              1360 	ld	a, #0x24
   0477 02                 1361 	ld	(bc), a
                           1362 ;StateGame.c:201: INT8 st [] = {1, 1, 1, 3};
   0478 F8 08              1363 	ldhl	sp,	#8
   047A 7D                 1364 	ld	a, l
   047B 54                 1365 	ld	d, h
   047C F8 16              1366 	ldhl	sp,	#22
   047E 22                 1367 	ld	(hl+), a
   047F 72                 1368 	ld	(hl), d
   0480 2B                 1369 	dec	hl
   0481 2A                 1370 	ld	a, (hl+)
   0482 66                 1371 	ld	h, (hl)
   0483 6F                 1372 	ld	l, a
   0484 36 01              1373 	ld	(hl), #0x01
   0486 F8 16              1374 	ldhl	sp,#(23 - 1)
   0488 4E                 1375 	ld	c, (hl)
   0489 23                 1376 	inc	hl
   048A 46                 1377 	ld	b, (hl)
   048B 03                 1378 	inc	bc
   048C 3E 01              1379 	ld	a, #0x01
   048E 02                 1380 	ld	(bc), a
   048F 2B                 1381 	dec	hl
   0490 4E                 1382 	ld	c, (hl)
   0491 23                 1383 	inc	hl
   0492 46                 1384 	ld	b, (hl)
   0493 03                 1385 	inc	bc
   0494 03                 1386 	inc	bc
   0495 3E 01              1387 	ld	a, #0x01
   0497 02                 1388 	ld	(bc), a
   0498 2B                 1389 	dec	hl
   0499 4E                 1390 	ld	c, (hl)
   049A 23                 1391 	inc	hl
   049B 46                 1392 	ld	b, (hl)
   049C 03                 1393 	inc	bc
   049D 03                 1394 	inc	bc
   049E 03                 1395 	inc	bc
   049F 3E 03              1396 	ld	a, #0x03
   04A1 02                 1397 	ld	(bc), a
                           1398 ;StateGame.c:204: for(c=0; c < count; c++){
   04A2 AF                 1399 	xor	a, a
   04A3 F8 1C              1400 	ldhl	sp,	#28
   04A5 77                 1401 	ld	(hl), a
   04A6                    1402 00104$:
   04A6 F8 1C              1403 	ldhl	sp,	#28
   04A8 7E                 1404 	ld	a, (hl)
   04A9 EE 80              1405 	xor	a, #0x80
   04AB D6 83              1406 	sub	a, #0x83
   04AD D2r52r05           1407 	jp	NC, 00101$
                           1408 ;StateGame.c:205: struct Sprite* scrigno_sprite = SpriteManagerAdd(SpriteItem, scrigni_positions_x[c]*8, scrigni_positions_y[c]*8);
   04B0 7E                 1409 	ld	a, (hl)
   04B1 F8 18              1410 	ldhl	sp,	#24
   04B3 77                 1411 	ld	(hl), a
   04B4 17                 1412 	rla
   04B5 9F                 1413 	sbc	a, a
   04B6 23                 1414 	inc	hl
   04B7 32                 1415 	ld	(hl-), a
   04B8 5E                 1416 	ld	e, (hl)
   04B9 23                 1417 	inc	hl
   04BA 56                 1418 	ld	d, (hl)
   04BB F8 14              1419 	ldhl	sp,	#20
   04BD 2A                 1420 	ld	a, (hl+)
   04BE 66                 1421 	ld	h, (hl)
   04BF 6F                 1422 	ld	l, a
   04C0 19                 1423 	add	hl, de
   04C1 4D                 1424 	ld	c, l
   04C2 44                 1425 	ld	b, h
   04C3 0A                 1426 	ld	a, (bc)
   04C4 4F                 1427 	ld	c, a
   04C5 17                 1428 	rla
   04C6 9F                 1429 	sbc	a, a
   04C7 47                 1430 	ld	b, a
   04C8 CB 21              1431 	sla	c
   04CA CB 10              1432 	rl	b
   04CC CB 21              1433 	sla	c
   04CE CB 10              1434 	rl	b
   04D0 CB 21              1435 	sla	c
   04D2 CB 10              1436 	rl	b
   04D4 F8 1A              1437 	ldhl	sp,	#26
   04D6 71                 1438 	ld	(hl), c
   04D7 23                 1439 	inc	hl
   04D8 70                 1440 	ld	(hl), b
   04D9 2B                 1441 	dec	hl
   04DA 2B                 1442 	dec	hl
   04DB 2B                 1443 	dec	hl
   04DC 5E                 1444 	ld	e, (hl)
   04DD 23                 1445 	inc	hl
   04DE 56                 1446 	ld	d, (hl)
   04DF F8 12              1447 	ldhl	sp,	#18
   04E1 2A                 1448 	ld	a, (hl+)
   04E2 66                 1449 	ld	h, (hl)
   04E3 6F                 1450 	ld	l, a
   04E4 19                 1451 	add	hl, de
   04E5 4D                 1452 	ld	c, l
   04E6 44                 1453 	ld	b, h
   04E7 0A                 1454 	ld	a, (bc)
   04E8 4F                 1455 	ld	c, a
   04E9 17                 1456 	rla
   04EA 9F                 1457 	sbc	a, a
   04EB 47                 1458 	ld	b, a
   04EC CB 21              1459 	sla	c
   04EE CB 10              1460 	rl	b
   04F0 CB 21              1461 	sla	c
   04F2 CB 10              1462 	rl	b
   04F4 CB 21              1463 	sla	c
   04F6 CB 10              1464 	rl	b
   04F8 F8 1A              1465 	ldhl	sp,	#26
   04FA 2A                 1466 	ld	a, (hl+)
   04FB 66                 1467 	ld	h, (hl)
   04FC 6F                 1468 	ld	l, a
   04FD E5                 1469 	push	hl
   04FE C5                 1470 	push	bc
   04FF 3E 03              1471 	ld	a, #0x03
   0501 F5                 1472 	push	af
   0502 33                 1473 	inc	sp
   0503 CDr00r00           1474 	call	_SpriteManagerAdd
   0506 E8 05              1475 	add	sp, #5
   0508 4B                 1476 	ld	c, e
   0509 42                 1477 	ld	b, d
                           1478 ;StateGame.c:206: struct ItemInfo* datascrigno = (struct ItemInfo*)scrigno_sprite->custom_data;
   050A 21 19 00           1479 	ld	hl, #0x0019
   050D 09                 1480 	add	hl, bc
   050E 4D                 1481 	ld	c, l
   050F 7C                 1482 	ld	a, h
   0510 47                 1483 	ld	b, a
                           1484 ;StateGame.c:207: datascrigno->type = 10;
   0511 21 01 00           1485 	ld	hl, #0x0001
   0514 09                 1486 	add	hl, bc
   0515 7D                 1487 	ld	a, l
   0516 54                 1488 	ld	d, h
   0517 F8 1A              1489 	ldhl	sp,	#26
   0519 22                 1490 	ld	(hl+), a
   051A 72                 1491 	ld	(hl), d
   051B 2B                 1492 	dec	hl
   051C 2A                 1493 	ld	a, (hl+)
   051D 66                 1494 	ld	h, (hl)
   051E 6F                 1495 	ld	l, a
   051F 36 0A              1496 	ld	(hl), #0x0a
                           1497 ;StateGame.c:208: datascrigno->setup = 1u;
   0521 21 04 00           1498 	ld	hl, #0x0004
   0524 09                 1499 	add	hl, bc
   0525 7D                 1500 	ld	a, l
   0526 54                 1501 	ld	d, h
   0527 F8 1A              1502 	ldhl	sp,	#26
   0529 22                 1503 	ld	(hl+), a
   052A 72                 1504 	ld	(hl), d
   052B 2B                 1505 	dec	hl
   052C 2A                 1506 	ld	a, (hl+)
   052D 66                 1507 	ld	h, (hl)
   052E 6F                 1508 	ld	l, a
   052F 36 01              1509 	ld	(hl), #0x01
                           1510 ;StateGame.c:209: datascrigno->content_type = st[c]; 
   0531 03                 1511 	inc	bc
   0532 03                 1512 	inc	bc
   0533 03                 1513 	inc	bc
   0534 03                 1514 	inc	bc
   0535 03                 1515 	inc	bc
   0536 F8 18              1516 	ldhl	sp,#(25 - 1)
   0538 5E                 1517 	ld	e, (hl)
   0539 23                 1518 	inc	hl
   053A 56                 1519 	ld	d, (hl)
   053B F8 16              1520 	ldhl	sp,	#22
   053D 2A                 1521 	ld	a, (hl+)
   053E 66                 1522 	ld	h, (hl)
   053F 6F                 1523 	ld	l, a
   0540 19                 1524 	add	hl, de
   0541 7D                 1525 	ld	a, l
   0542 54                 1526 	ld	d, h
   0543 F8 1A              1527 	ldhl	sp,	#26
   0545 22                 1528 	ld	(hl+), a
   0546 72                 1529 	ld	(hl), d
   0547 2B                 1530 	dec	hl
   0548 5E                 1531 	ld	e, (hl)
   0549 23                 1532 	inc	hl
   054A 56                 1533 	ld	d, (hl)
   054B 1A                 1534 	ld	a,(de)
   054C 02                 1535 	ld	(bc), a
                           1536 ;StateGame.c:204: for(c=0; c < count; c++){
   054D 23                 1537 	inc	hl
   054E 34                 1538 	inc	(hl)
   054F C3rA6r04           1539 	jp	00104$
   0552                    1540 00101$:
                           1541 ;StateGame.c:215: INT8 invitems_positions_x[] = {31}; //13
   0552 F8 0C              1542 	ldhl	sp,	#12
   0554 7D                 1543 	ld	a, l
   0555 54                 1544 	ld	d, h
   0556 F8 10              1545 	ldhl	sp,	#16
   0558 22                 1546 	ld	(hl+), a
   0559 72                 1547 	ld	(hl), d
   055A 2B                 1548 	dec	hl
   055B 2A                 1549 	ld	a, (hl+)
   055C 66                 1550 	ld	h, (hl)
   055D 6F                 1551 	ld	l, a
   055E 36 1F              1552 	ld	(hl), #0x1f
                           1553 ;StateGame.c:216: INT8 invitems_positions_y[] = {27};//11
   0560 F8 0D              1554 	ldhl	sp,	#13
   0562 7D                 1555 	ld	a, l
   0563 54                 1556 	ld	d, h
   0564 F8 12              1557 	ldhl	sp,	#18
   0566 22                 1558 	ld	(hl+), a
   0567 72                 1559 	ld	(hl), d
   0568 2B                 1560 	dec	hl
   0569 2A                 1561 	ld	a, (hl+)
   056A 66                 1562 	ld	h, (hl)
   056B 6F                 1563 	ld	l, a
   056C 36 1B              1564 	ld	(hl), #0x1b
                           1565 ;StateGame.c:217: INT8 iit [] = {3, 1};
   056E F8 0E              1566 	ldhl	sp,	#14
   0570 7D                 1567 	ld	a, l
   0571 54                 1568 	ld	d, h
   0572 F8 14              1569 	ldhl	sp,	#20
   0574 22                 1570 	ld	(hl+), a
   0575 72                 1571 	ld	(hl), d
   0576 2B                 1572 	dec	hl
   0577 2A                 1573 	ld	a, (hl+)
   0578 66                 1574 	ld	h, (hl)
   0579 6F                 1575 	ld	l, a
   057A 36 03              1576 	ld	(hl), #0x03
   057C F8 14              1577 	ldhl	sp,#(21 - 1)
   057E 4E                 1578 	ld	c, (hl)
   057F 23                 1579 	inc	hl
   0580 46                 1580 	ld	b, (hl)
   0581 03                 1581 	inc	bc
   0582 3E 01              1582 	ld	a, #0x01
   0584 02                 1583 	ld	(bc), a
                           1584 ;StateGame.c:218: for(invc=0; invc < invcount; invc++){
   0585 AF                 1585 	xor	a, a
   0586 F8 1C              1586 	ldhl	sp,	#28
   0588 77                 1587 	ld	(hl), a
   0589                    1588 00107$:
   0589 F8 1C              1589 	ldhl	sp,	#28
   058B 7E                 1590 	ld	a, (hl)
   058C EE 80              1591 	xor	a, #0x80
   058E D6 81              1592 	sub	a, #0x81
   0590 D2r29r06           1593 	jp	NC, 00109$
                           1594 ;StateGame.c:219: struct Sprite* item_sprite = SpriteManagerAdd(SpriteItem, invitems_positions_x[invc]*8, invitems_positions_y[invc]*8);
   0593 7E                 1595 	ld	a, (hl)
   0594 F8 16              1596 	ldhl	sp,	#22
   0596 77                 1597 	ld	(hl), a
   0597 17                 1598 	rla
   0598 9F                 1599 	sbc	a, a
   0599 23                 1600 	inc	hl
   059A 32                 1601 	ld	(hl-), a
   059B 5E                 1602 	ld	e, (hl)
   059C 23                 1603 	inc	hl
   059D 56                 1604 	ld	d, (hl)
   059E F8 12              1605 	ldhl	sp,	#18
   05A0 2A                 1606 	ld	a, (hl+)
   05A1 66                 1607 	ld	h, (hl)
   05A2 6F                 1608 	ld	l, a
   05A3 19                 1609 	add	hl, de
   05A4 4D                 1610 	ld	c, l
   05A5 44                 1611 	ld	b, h
   05A6 0A                 1612 	ld	a, (bc)
   05A7 4F                 1613 	ld	c, a
   05A8 17                 1614 	rla
   05A9 9F                 1615 	sbc	a, a
   05AA 47                 1616 	ld	b, a
   05AB CB 21              1617 	sla	c
   05AD CB 10              1618 	rl	b
   05AF CB 21              1619 	sla	c
   05B1 CB 10              1620 	rl	b
   05B3 CB 21              1621 	sla	c
   05B5 CB 10              1622 	rl	b
   05B7 F8 1A              1623 	ldhl	sp,	#26
   05B9 71                 1624 	ld	(hl), c
   05BA 23                 1625 	inc	hl
   05BB 70                 1626 	ld	(hl), b
   05BC F8 16              1627 	ldhl	sp,#(23 - 1)
   05BE 5E                 1628 	ld	e, (hl)
   05BF 23                 1629 	inc	hl
   05C0 56                 1630 	ld	d, (hl)
   05C1 F8 10              1631 	ldhl	sp,	#16
   05C3 2A                 1632 	ld	a, (hl+)
   05C4 66                 1633 	ld	h, (hl)
   05C5 6F                 1634 	ld	l, a
   05C6 19                 1635 	add	hl, de
   05C7 4D                 1636 	ld	c, l
   05C8 44                 1637 	ld	b, h
   05C9 0A                 1638 	ld	a, (bc)
   05CA 4F                 1639 	ld	c, a
   05CB 17                 1640 	rla
   05CC 9F                 1641 	sbc	a, a
   05CD 47                 1642 	ld	b, a
   05CE CB 21              1643 	sla	c
   05D0 CB 10              1644 	rl	b
   05D2 CB 21              1645 	sla	c
   05D4 CB 10              1646 	rl	b
   05D6 CB 21              1647 	sla	c
   05D8 CB 10              1648 	rl	b
   05DA F8 1A              1649 	ldhl	sp,	#26
   05DC 2A                 1650 	ld	a, (hl+)
   05DD 66                 1651 	ld	h, (hl)
   05DE 6F                 1652 	ld	l, a
   05DF E5                 1653 	push	hl
   05E0 C5                 1654 	push	bc
   05E1 3E 03              1655 	ld	a, #0x03
   05E3 F5                 1656 	push	af
   05E4 33                 1657 	inc	sp
   05E5 CDr00r00           1658 	call	_SpriteManagerAdd
   05E8 E8 05              1659 	add	sp, #5
   05EA 4B                 1660 	ld	c, e
   05EB 42                 1661 	ld	b, d
                           1662 ;StateGame.c:220: struct ItemInfo* dataitem = (struct ItemInfo*)item_sprite->custom_data;
   05EC 21 19 00           1663 	ld	hl, #0x0019
   05EF 09                 1664 	add	hl, bc
   05F0 4D                 1665 	ld	c, l
   05F1 7C                 1666 	ld	a, h
   05F2 47                 1667 	ld	b, a
                           1668 ;StateGame.c:221: dataitem->type = iit[invc];
   05F3 21 01 00           1669 	ld	hl, #0x0001
   05F6 09                 1670 	add	hl, bc
   05F7 7D                 1671 	ld	a, l
   05F8 54                 1672 	ld	d, h
   05F9 F8 18              1673 	ldhl	sp,	#24
   05FB 22                 1674 	ld	(hl+), a
   05FC 72                 1675 	ld	(hl), d
   05FD 2B                 1676 	dec	hl
   05FE 2B                 1677 	dec	hl
   05FF 2B                 1678 	dec	hl
   0600 5E                 1679 	ld	e, (hl)
   0601 23                 1680 	inc	hl
   0602 56                 1681 	ld	d, (hl)
   0603 F8 14              1682 	ldhl	sp,	#20
   0605 2A                 1683 	ld	a, (hl+)
   0606 66                 1684 	ld	h, (hl)
   0607 6F                 1685 	ld	l, a
   0608 19                 1686 	add	hl, de
   0609 7D                 1687 	ld	a, l
   060A 54                 1688 	ld	d, h
   060B F8 1A              1689 	ldhl	sp,	#26
   060D 22                 1690 	ld	(hl+), a
   060E 72                 1691 	ld	(hl), d
   060F 2B                 1692 	dec	hl
   0610 5E                 1693 	ld	e, (hl)
   0611 23                 1694 	inc	hl
   0612 56                 1695 	ld	d, (hl)
   0613 1A                 1696 	ld	a,(de)
   0614 F8 18              1697 	ldhl	sp,	#24
   0616 F5                 1698 	push	af
   0617 2A                 1699 	ld	a, (hl+)
   0618 66                 1700 	ld	h, (hl)
   0619 6F                 1701 	ld	l, a
   061A F1                 1702 	pop	af
   061B 77                 1703 	ld	(hl), a
                           1704 ;StateGame.c:222: dataitem->setup = 1u;
   061C 03                 1705 	inc	bc
   061D 03                 1706 	inc	bc
   061E 03                 1707 	inc	bc
   061F 03                 1708 	inc	bc
   0620 3E 01              1709 	ld	a, #0x01
   0622 02                 1710 	ld	(bc), a
                           1711 ;StateGame.c:218: for(invc=0; invc < invcount; invc++){
   0623 F8 1C              1712 	ldhl	sp,	#28
   0625 34                 1713 	inc	(hl)
   0626 C3r89r05           1714 	jp	00107$
   0629                    1715 00109$:
                           1716 ;StateGame.c:226: }
   0629 E8 1D              1717 	add	sp, #29
   062B C9                 1718 	ret
                           1719 ;StateGame.c:228: void Update_StateGame() {
                           1720 ;	---------------------------------
                           1721 ; Function Update_StateGame
                           1722 ; ---------------------------------
   062C                    1723 _Update_StateGame::
   062C E8 FE              1724 	add	sp, #-2
                           1725 ;StateGame.c:230: struct ArcherInfo* archer_data = (struct ArcherInfo*)scroll_target->custom_data;
   062E 21r00r00           1726 	ld	hl, #_scroll_target
   0631 46                 1727 	ld	b, (hl)
   0632 23                 1728 	inc	hl
   0633 4E                 1729 	ld	c, (hl)
   0634 78                 1730 	ld	a, b
   0635 C6 19              1731 	add	a, #0x19
   0637 47                 1732 	ld	b, a
   0638 30 01              1733 	jr	NC,00178$
   063A 0C                 1734 	inc	c
   063B                    1735 00178$:
   063B F8 00              1736 	ldhl	sp,	#0
   063D 70                 1737 	ld	(hl), b
   063E 23                 1738 	inc	hl
   063F 71                 1739 	ld	(hl), c
                           1740 ;StateGame.c:232: if (amulet != archer_data->amulet){
   0640 D1                 1741 	pop	de
   0641 D5                 1742 	push	de
   0642 1A                 1743 	ld	a,(de)
   0643 4F                 1744 	ld	c, a
   0644 21r9Ar00           1745 	ld	hl, #_amulet
   0647 7E                 1746 	ld	a, (hl)
   0648 91                 1747 	sub	a, c
   0649 28 07              1748 	jr	Z,00102$
                           1749 ;StateGame.c:233: amulet = archer_data->amulet;
   064B 21r9Ar00           1750 	ld	hl, #_amulet
   064E 71                 1751 	ld	(hl), c
                           1752 ;StateGame.c:234: WriteAMULET();		
   064F CDr06r07           1753 	call	_WriteAMULET
   0652                    1754 00102$:
                           1755 ;StateGame.c:236: if (coins != archer_data->coins){
   0652 C1                 1756 	pop	bc
   0653 C5                 1757 	push	bc
   0654 03                 1758 	inc	bc
   0655 0A                 1759 	ld	a, (bc)
   0656 4F                 1760 	ld	c, a
   0657 21r9Br00           1761 	ld	hl, #_coins
   065A 7E                 1762 	ld	a, (hl)
   065B 91                 1763 	sub	a, c
   065C 28 07              1764 	jr	Z,00104$
                           1765 ;StateGame.c:237: coins = archer_data->coins;
   065E 21r9Br00           1766 	ld	hl, #_coins
   0661 71                 1767 	ld	(hl), c
                           1768 ;StateGame.c:238: WriteCOINS();
   0662 CDrA3r07           1769 	call	_WriteCOINS
   0665                    1770 00104$:
                           1771 ;StateGame.c:240: if (hp != archer_data->hp){
   0665 C1                 1772 	pop	bc
   0666 C5                 1773 	push	bc
   0667 03                 1774 	inc	bc
   0668 03                 1775 	inc	bc
   0669 0A                 1776 	ld	a, (bc)
   066A 4F                 1777 	ld	c, a
   066B 21r9Dr00           1778 	ld	hl, #_hp
   066E 7E                 1779 	ld	a, (hl)
   066F 91                 1780 	sub	a, c
   0670 28 07              1781 	jr	Z,00106$
                           1782 ;StateGame.c:241: hp = archer_data->hp;
   0672 21r9Dr00           1783 	ld	hl, #_hp
   0675 71                 1784 	ld	(hl), c
                           1785 ;StateGame.c:242: WriteHP();
   0676 CDrD5r07           1786 	call	_WriteHP
   0679                    1787 00106$:
                           1788 ;StateGame.c:244: if (ups != archer_data->ups){
   0679 C1                 1789 	pop	bc
   067A C5                 1790 	push	bc
   067B 03                 1791 	inc	bc
   067C 03                 1792 	inc	bc
   067D 03                 1793 	inc	bc
   067E 0A                 1794 	ld	a, (bc)
   067F 4F                 1795 	ld	c, a
   0680 21r9Cr00           1796 	ld	hl, #_ups
   0683 7E                 1797 	ld	a, (hl)
   0684 91                 1798 	sub	a, c
   0685 28 07              1799 	jr	Z,00108$
                           1800 ;StateGame.c:245: ups = archer_data->ups;
   0687 21r9Cr00           1801 	ld	hl, #_ups
   068A 71                 1802 	ld	(hl), c
                           1803 ;StateGame.c:246: WriteUPS();
   068B CDr7Fr08           1804 	call	_WriteUPS
   068E                    1805 00108$:
                           1806 ;StateGame.c:248: if(archer_data->tool == level_tool){
   068E D1                 1807 	pop	de
   068F D5                 1808 	push	de
   0690 21 04 00           1809 	ld	hl, #0x0004
   0693 19                 1810 	add	hl, de
   0694 4D                 1811 	ld	c, l
   0695 44                 1812 	ld	b, h
   0696 0A                 1813 	ld	a, (bc)
   0697 5F                 1814 	ld	e, a
   0698 21r9Er00           1815 	ld	hl, #_level_tool
   069B 7E                 1816 	ld	a, (hl)
   069C 93                 1817 	sub	a, e
   069D 20 0A              1818 	jr	NZ,00110$
                           1819 ;StateGame.c:249: WriteTOOL();
   069F C5                 1820 	push	bc
   06A0 CDr59r08           1821 	call	_WriteTOOL
   06A3 C1                 1822 	pop	bc
                           1823 ;StateGame.c:250: level_tool = -1; //TODO non sono sicurissimo
   06A4 21r9Er00           1824 	ld	hl, #_level_tool
   06A7 36 FF              1825 	ld	(hl), #0xff
   06A9                    1826 00110$:
                           1827 ;StateGame.c:253: if(load_next) {
   06A9 21r9Fr00           1828 	ld	hl, #_load_next
   06AC 7E                 1829 	ld	a, (hl)
   06AD B7                 1830 	or	a, a
   06AE CArF2r06           1831 	jp	Z, 00118$
                           1832 ;StateGame.c:254: switch(load_next){
   06B1 7E                 1833 	ld	a, (hl)
   06B2 3C                 1834 	inc	a
   06B3 28 11              1835 	jr	Z,00112$
   06B5 21r9Fr00           1836 	ld	hl, #_load_next
   06B8 7E                 1837 	ld	a, (hl)
   06B9 3D                 1838 	dec	a
   06BA 28 0A              1839 	jr	Z,00112$
   06BC 21r9Fr00           1840 	ld	hl, #_load_next
   06BF 7E                 1841 	ld	a, (hl)
   06C0 D6 0A              1842 	sub	a, #0x0a
   06C2 28 10              1843 	jr	Z,00113$
   06C4 18 20              1844 	jr	00116$
                           1845 ;StateGame.c:256: case -1:
   06C6                    1846 00112$:
                           1847 ;StateGame.c:257: current_map += load_next;
   06C6 21rA2r00           1848 	ld	hl, #_current_map
   06C9 7E                 1849 	ld	a, (hl)
   06CA 21r9Fr00           1850 	ld	hl, #_load_next
   06CD 86                 1851 	add	a, (hl)
   06CE 21rA2r00           1852 	ld	hl, #_current_map
   06D1 77                 1853 	ld	(hl), a
                           1854 ;StateGame.c:258: break;
   06D2 18 12              1855 	jr	00116$
                           1856 ;StateGame.c:259: case 10: //level
   06D4                    1857 00113$:
                           1858 ;StateGame.c:260: if (archer_data->tool == level_tool){
   06D4 0A                 1859 	ld	a, (bc)
   06D5 4F                 1860 	ld	c, a
   06D6 21r9Er00           1861 	ld	hl, #_level_tool
   06D9 7E                 1862 	ld	a, (hl)
   06DA 91                 1863 	sub	a, c
   06DB 20 09              1864 	jr	NZ,00116$
                           1865 ;StateGame.c:261: current_level++;
   06DD 21rA1r00           1866 	ld	hl, #_current_level
   06E0 34                 1867 	inc	(hl)
                           1868 ;StateGame.c:262: current_map = 0;
   06E1 21rA2r00           1869 	ld	hl, #_current_map
   06E4 36 00              1870 	ld	(hl), #0x00
                           1871 ;StateGame.c:267: }
   06E6                    1872 00116$:
                           1873 ;StateGame.c:269: load_next = 0;
   06E6 21r9Fr00           1874 	ld	hl, #_load_next
   06E9 36 00              1875 	ld	(hl), #0x00
                           1876 ;StateGame.c:270: SetState(StateGame);
   06EB AF                 1877 	xor	a, a
   06EC F5                 1878 	push	af
   06ED 33                 1879 	inc	sp
   06EE CDr00r00           1880 	call	_SetState
   06F1 33                 1881 	inc	sp
   06F2                    1882 00118$:
                           1883 ;StateGame.c:273: if(load_next_s){
   06F2 21rA0r00           1884 	ld	hl, #_load_next_s
   06F5 7E                 1885 	ld	a, (hl)
   06F6 B7                 1886 	or	a, a
   06F7 28 0A              1887 	jr	Z,00121$
                           1888 ;StateGame.c:274: load_next_s = 0;
   06F9 36 00              1889 	ld	(hl), #0x00
                           1890 ;StateGame.c:275: SetState(StateSecret);
   06FB 3E 01              1891 	ld	a, #0x01
   06FD F5                 1892 	push	af
   06FE 33                 1893 	inc	sp
   06FF CDr00r00           1894 	call	_SetState
   0702 33                 1895 	inc	sp
   0703                    1896 00121$:
                           1897 ;StateGame.c:278: }
   0703 E8 02              1898 	add	sp, #2
   0705 C9                 1899 	ret
                           1900 ;StateGame.c:280: void WriteAMULET(){
                           1901 ;	---------------------------------
                           1902 ; Function WriteAMULET
                           1903 ; ---------------------------------
   0706                    1904 _WriteAMULET::
                           1905 ;StateGame.c:281: PRINT_POS(13,1);
   0706 21r00r00           1906 	ld	hl, #_print_x
   0709 36 0D              1907 	ld	(hl), #0x0d
   070B 21r00r00           1908 	ld	hl, #_print_y
   070E 36 01              1909 	ld	(hl), #0x01
                           1910 ;StateGame.c:282: switch (amulet){
   0710 21r9Ar00           1911 	ld	hl, #_amulet
   0713 7E                 1912 	ld	a, (hl)
   0714 3D                 1913 	dec	a
   0715 28 22              1914 	jr	Z,00101$
   0717 21r9Ar00           1915 	ld	hl, #_amulet
   071A 7E                 1916 	ld	a, (hl)
   071B D6 02              1917 	sub	a, #0x02
   071D 28 24              1918 	jr	Z,00102$
   071F 21r9Ar00           1919 	ld	hl, #_amulet
   0722 7E                 1920 	ld	a, (hl)
   0723 D6 03              1921 	sub	a, #0x03
   0725 28 26              1922 	jr	Z,00103$
   0727 21r9Ar00           1923 	ld	hl, #_amulet
   072A 7E                 1924 	ld	a, (hl)
   072B D6 04              1925 	sub	a, #0x04
   072D 28 28              1926 	jr	Z,00104$
   072F 21r9Ar00           1927 	ld	hl, #_amulet
   0732 7E                 1928 	ld	a, (hl)
   0733 D6 05              1929 	sub	a, #0x05
   0735 28 2A              1930 	jr	Z,00105$
   0737 18 32              1931 	jr	00106$
                           1932 ;StateGame.c:283: case 1: Printf("$"); break;
   0739                    1933 00101$:
   0739 21r75r07           1934 	ld	hl, #___str_2
   073C E5                 1935 	push	hl
   073D CDr00r00           1936 	call	_Printf
   0740 E8 02              1937 	add	sp, #2
   0742 C9                 1938 	ret
                           1939 ;StateGame.c:284: case 2: Printf("]"); break;
   0743                    1940 00102$:
   0743 21r77r07           1941 	ld	hl, #___str_3
   0746 E5                 1942 	push	hl
   0747 CDr00r00           1943 	call	_Printf
   074A E8 02              1944 	add	sp, #2
   074C C9                 1945 	ret
                           1946 ;StateGame.c:285: case 3: Printf("["); break;
   074D                    1947 00103$:
   074D 21r79r07           1948 	ld	hl, #___str_4
   0750 E5                 1949 	push	hl
   0751 CDr00r00           1950 	call	_Printf
   0754 E8 02              1951 	add	sp, #2
   0756 C9                 1952 	ret
                           1953 ;StateGame.c:286: case 4: Printf("#"); break;
   0757                    1954 00104$:
   0757 21r7Br07           1955 	ld	hl, #___str_5
   075A E5                 1956 	push	hl
   075B CDr00r00           1957 	call	_Printf
   075E E8 02              1958 	add	sp, #2
   0760 C9                 1959 	ret
                           1960 ;StateGame.c:287: case 5: Printf("@"); break;
   0761                    1961 00105$:
   0761 21r7Dr07           1962 	ld	hl, #___str_6
   0764 E5                 1963 	push	hl
   0765 CDr00r00           1964 	call	_Printf
   0768 E8 02              1965 	add	sp, #2
   076A C9                 1966 	ret
                           1967 ;StateGame.c:288: default: Printf("$"); break;
   076B                    1968 00106$:
   076B 21r75r07           1969 	ld	hl, #___str_2
   076E E5                 1970 	push	hl
   076F CDr00r00           1971 	call	_Printf
   0772 E8 02              1972 	add	sp, #2
                           1973 ;StateGame.c:289: }	
                           1974 ;StateGame.c:290: }
   0774 C9                 1975 	ret
   0775                    1976 ___str_2:
   0775 24                 1977 	.ascii "$"
   0776 00                 1978 	.db 0x00
   0777                    1979 ___str_3:
   0777 5D                 1980 	.ascii "]"
   0778 00                 1981 	.db 0x00
   0779                    1982 ___str_4:
   0779 5B                 1983 	.ascii "["
   077A 00                 1984 	.db 0x00
   077B                    1985 ___str_5:
   077B 23                 1986 	.ascii "#"
   077C 00                 1987 	.db 0x00
   077D                    1988 ___str_6:
   077D 40                 1989 	.ascii "@"
   077E 00                 1990 	.db 0x00
                           1991 ;StateGame.c:292: void WriteMap(){
                           1992 ;	---------------------------------
                           1993 ; Function WriteMap
                           1994 ; ---------------------------------
   077F                    1995 _WriteMap::
                           1996 ;StateGame.c:293: PRINT_POS(1, 3);
   077F 21r00r00           1997 	ld	hl, #_print_x
   0782 36 01              1998 	ld	(hl), #0x01
   0784 21r00r00           1999 	ld	hl, #_print_y
   0787 36 03              2000 	ld	(hl), #0x03
                           2001 ;StateGame.c:294: Printf(level_names[current_level]);	
   0789 21rA1r00           2002 	ld	hl, #_current_level
   078C 4E                 2003 	ld	c, (hl)
   078D 06 00              2004 	ld	b, #0x00
   078F CB 21              2005 	sla	c
   0791 CB 10              2006 	rl	b
   0793 21r98r02           2007 	ld	hl, #_level_names
   0796 09                 2008 	add	hl, bc
   0797 4D                 2009 	ld	c,l
   0798 44                 2010 	ld	b,h
   0799 4E                 2011 	ld	c, (hl)
   079A 23                 2012 	inc	hl
   079B 46                 2013 	ld	b, (hl)
   079C C5                 2014 	push	bc
   079D CDr00r00           2015 	call	_Printf
   07A0 E8 02              2016 	add	sp, #2
                           2017 ;StateGame.c:295: }
   07A2 C9                 2018 	ret
                           2019 ;StateGame.c:297: void WriteCOINS(){
                           2020 ;	---------------------------------
                           2021 ; Function WriteCOINS
                           2022 ; ---------------------------------
   07A3                    2023 _WriteCOINS::
                           2024 ;StateGame.c:298: PRINT_POS(17, 1);
   07A3 21r00r00           2025 	ld	hl, #_print_x
   07A6 36 11              2026 	ld	(hl), #0x11
   07A8 21r00r00           2027 	ld	hl, #_print_y
   07AB 36 01              2028 	ld	(hl), #0x01
                           2029 ;StateGame.c:300: Printf("%d", coins);
   07AD 21r9Br00           2030 	ld	hl, #_coins
   07B0 4E                 2031 	ld	c, (hl)
   07B1 06 00              2032 	ld	b, #0x00
                           2033 ;StateGame.c:299: if (coins > 9u){
   07B3 3E 09              2034 	ld	a, #0x09
   07B5 96                 2035 	sub	a, (hl)
   07B6 30 0B              2036 	jr	NC,00102$
                           2037 ;StateGame.c:300: Printf("%d", coins);
   07B8 C5                 2038 	push	bc
   07B9 21rCEr07           2039 	ld	hl, #___str_7
   07BC E5                 2040 	push	hl
   07BD CDr00r00           2041 	call	_Printf
   07C0 E8 04              2042 	add	sp, #4
   07C2 C9                 2043 	ret
   07C3                    2044 00102$:
                           2045 ;StateGame.c:302: Printf("0%d", coins);
   07C3 C5                 2046 	push	bc
   07C4 21rD1r07           2047 	ld	hl, #___str_8
   07C7 E5                 2048 	push	hl
   07C8 CDr00r00           2049 	call	_Printf
   07CB E8 04              2050 	add	sp, #4
                           2051 ;StateGame.c:304: }
   07CD C9                 2052 	ret
   07CE                    2053 ___str_7:
   07CE 25 64              2054 	.ascii "%d"
   07D0 00                 2055 	.db 0x00
   07D1                    2056 ___str_8:
   07D1 30 25 64           2057 	.ascii "0%d"
   07D4 00                 2058 	.db 0x00
                           2059 ;StateGame.c:306: void WriteHP(){	
                           2060 ;	---------------------------------
                           2061 ; Function WriteHP
                           2062 ; ---------------------------------
   07D5                    2063 _WriteHP::
                           2064 ;StateGame.c:307: PRINT_POS(7, 1);
   07D5 21r00r00           2065 	ld	hl, #_print_x
   07D8 36 07              2066 	ld	(hl), #0x07
   07DA 21r00r00           2067 	ld	hl, #_print_y
   07DD 36 01              2068 	ld	(hl), #0x01
                           2069 ;StateGame.c:308: if (hp < 10){
   07DF 21r9Dr00           2070 	ld	hl, #_hp
   07E2 7E                 2071 	ld	a, (hl)
   07E3 EE 80              2072 	xor	a, #0x80
   07E5 D6 8A              2073 	sub	a, #0x8a
   07E7 30 0F              2074 	jr	NC,00102$
                           2075 ;StateGame.c:309: Printf("00%d", hp);
   07E9 7E                 2076 	ld	a, (hl)
   07EA 4F                 2077 	ld	c, a
   07EB 17                 2078 	rla
   07EC 9F                 2079 	sbc	a, a
   07ED 47                 2080 	ld	b, a
   07EE C5                 2081 	push	bc
   07EF 21r4Dr08           2082 	ld	hl, #___str_9
   07F2 E5                 2083 	push	hl
   07F3 CDr00r00           2084 	call	_Printf
   07F6 E8 04              2085 	add	sp, #4
   07F8                    2086 00102$:
                           2087 ;StateGame.c:311: if (hp > 9 & hp < 100){
   07F8 21r9Dr00           2088 	ld	hl, #_hp
   07FB 7E                 2089 	ld	a, (hl)
   07FC 5F                 2090 	ld	e, a
   07FD 3E 09              2091 	ld	a, #0x09
   07FF 57                 2092 	ld	d, a
   0800 3E 09              2093 	ld	a, #0x09
   0802 96                 2094 	sub	a, (hl)
   0803 CB 7B              2095 	bit	7, e
   0805 28 07              2096 	jr	Z,00124$
   0807 CB 7A              2097 	bit	7, d
   0809 20 08              2098 	jr	NZ,00125$
   080B BF                 2099 	cp	a, a
   080C 18 05              2100 	jr	00125$
   080E                    2101 00124$:
   080E CB 7A              2102 	bit	7, d
   0810 28 01              2103 	jr	Z,00125$
   0812 37                 2104 	scf
   0813                    2105 00125$:
   0813 3E 00              2106 	ld	a, #0x00
   0815 17                 2107 	rla
   0816 4F                 2108 	ld	c, a
   0817 21r9Dr00           2109 	ld	hl, #_hp
   081A 7E                 2110 	ld	a, (hl)
   081B EE 80              2111 	xor	a, #0x80
   081D D6 E4              2112 	sub	a, #0xe4
   081F 3E 00              2113 	ld	a, #0x00
   0821 17                 2114 	rla
   0822 A1                 2115 	and	a,c
   0823 28 0F              2116 	jr	Z,00104$
                           2117 ;StateGame.c:312: Printf("0%d", hp);
   0825 7E                 2118 	ld	a, (hl)
   0826 4F                 2119 	ld	c, a
   0827 17                 2120 	rla
   0828 9F                 2121 	sbc	a, a
   0829 47                 2122 	ld	b, a
   082A C5                 2123 	push	bc
   082B 21r52r08           2124 	ld	hl, #___str_10
   082E E5                 2125 	push	hl
   082F CDr00r00           2126 	call	_Printf
   0832 E8 04              2127 	add	sp, #4
   0834                    2128 00104$:
                           2129 ;StateGame.c:314: if (hp >= 100){
   0834 21r9Dr00           2130 	ld	hl, #_hp
   0837 7E                 2131 	ld	a, (hl)
   0838 EE 80              2132 	xor	a, #0x80
   083A D6 E4              2133 	sub	a, #0xe4
   083C D8                 2134 	ret	C
                           2135 ;StateGame.c:315: Printf("%d", hp);	
   083D 7E                 2136 	ld	a, (hl)
   083E 4F                 2137 	ld	c, a
   083F 17                 2138 	rla
   0840 9F                 2139 	sbc	a, a
   0841 47                 2140 	ld	b, a
   0842 C5                 2141 	push	bc
   0843 21r56r08           2142 	ld	hl, #___str_11
   0846 E5                 2143 	push	hl
   0847 CDr00r00           2144 	call	_Printf
   084A E8 04              2145 	add	sp, #4
                           2146 ;StateGame.c:317: }
   084C C9                 2147 	ret
   084D                    2148 ___str_9:
   084D 30 30 25 64        2149 	.ascii "00%d"
   0851 00                 2150 	.db 0x00
   0852                    2151 ___str_10:
   0852 30 25 64           2152 	.ascii "0%d"
   0855 00                 2153 	.db 0x00
   0856                    2154 ___str_11:
   0856 25 64              2155 	.ascii "%d"
   0858 00                 2156 	.db 0x00
                           2157 ;StateGame.c:319: void WriteTOOL(){
                           2158 ;	---------------------------------
                           2159 ; Function WriteTOOL
                           2160 ; ---------------------------------
   0859                    2161 _WriteTOOL::
                           2162 ;StateGame.c:320: switch(level_tool){
   0859 21r9Er00           2163 	ld	hl, #_level_tool
   085C 7E                 2164 	ld	a, (hl)
   085D D6 06              2165 	sub	a, #0x06
   085F C0                 2166 	ret	NZ
                           2167 ;StateGame.c:322: PRINT_POS(11, 1);
   0860 21r00r00           2168 	ld	hl, #_print_x
   0863 36 0B              2169 	ld	(hl), #0x0b
   0865 21r00r00           2170 	ld	hl, #_print_y
   0868 36 01              2171 	ld	(hl), #0x01
                           2172 ;StateGame.c:323: Printf("<", level_tool);
   086A 21r9Er00           2173 	ld	hl, #_level_tool
   086D 7E                 2174 	ld	a, (hl)
   086E 4F                 2175 	ld	c, a
   086F 17                 2176 	rla
   0870 9F                 2177 	sbc	a, a
   0871 47                 2178 	ld	b, a
   0872 C5                 2179 	push	bc
   0873 21r7Dr08           2180 	ld	hl, #___str_12
   0876 E5                 2181 	push	hl
   0877 CDr00r00           2182 	call	_Printf
   087A E8 04              2183 	add	sp, #4
                           2184 ;StateGame.c:325: }
                           2185 ;StateGame.c:326: }
   087C C9                 2186 	ret
   087D                    2187 ___str_12:
   087D 3C                 2188 	.ascii "<"
   087E 00                 2189 	.db 0x00
                           2190 ;StateGame.c:328: void WriteUPS(){
                           2191 ;	---------------------------------
                           2192 ; Function WriteUPS
                           2193 ; ---------------------------------
   087F                    2194 _WriteUPS::
                           2195 ;StateGame.c:329: PRINT_POS(2, 1); //up
   087F 21r00r00           2196 	ld	hl, #_print_x
   0882 36 02              2197 	ld	(hl), #0x02
   0884 21r00r00           2198 	ld	hl, #_print_y
   0887 36 01              2199 	ld	(hl), #0x01
                           2200 ;StateGame.c:330: if (ups > 9){Printf("%d", ups);}
   0889 21r9Cr00           2201 	ld	hl, #_ups
   088C 7E                 2202 	ld	a, (hl)
   088D 4F                 2203 	ld	c, a
   088E 17                 2204 	rla
   088F 9F                 2205 	sbc	a, a
   0890 47                 2206 	ld	b, a
   0891 7E                 2207 	ld	a, (hl)
   0892 5F                 2208 	ld	e, a
   0893 3E 09              2209 	ld	a, #0x09
   0895 57                 2210 	ld	d, a
   0896 3E 09              2211 	ld	a, #0x09
   0898 96                 2212 	sub	a, (hl)
   0899 CB 7B              2213 	bit	7, e
   089B 28 07              2214 	jr	Z,00111$
   089D CB 7A              2215 	bit	7, d
   089F 20 08              2216 	jr	NZ,00112$
   08A1 BF                 2217 	cp	a, a
   08A2 18 05              2218 	jr	00112$
   08A4                    2219 00111$:
   08A4 CB 7A              2220 	bit	7, d
   08A6 28 01              2221 	jr	Z,00112$
   08A8 37                 2222 	scf
   08A9                    2223 00112$:
   08A9 30 0B              2224 	jr	NC,00102$
   08AB C5                 2225 	push	bc
   08AC 21rC1r08           2226 	ld	hl, #___str_13
   08AF E5                 2227 	push	hl
   08B0 CDr00r00           2228 	call	_Printf
   08B3 E8 04              2229 	add	sp, #4
   08B5 C9                 2230 	ret
   08B6                    2231 00102$:
                           2232 ;StateGame.c:331: else{Printf("0%d", ups);}
   08B6 C5                 2233 	push	bc
   08B7 21rC4r08           2234 	ld	hl, #___str_14
   08BA E5                 2235 	push	hl
   08BB CDr00r00           2236 	call	_Printf
   08BE E8 04              2237 	add	sp, #4
                           2238 ;StateGame.c:332: }
   08C0 C9                 2239 	ret
   08C1                    2240 ___str_13:
   08C1 25 64              2241 	.ascii "%d"
   08C3 00                 2242 	.db 0x00
   08C4                    2243 ___str_14:
   08C4 30 25 64           2244 	.ascii "0%d"
   08C7 00                 2245 	.db 0x00
                           2246 	.area _CODE_2
                           2247 	.area _CABS (ABS)
