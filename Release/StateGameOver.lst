                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ANSI-C Compiler
                              3 ; Version 4.0.0 #11528 (MINGW32)
                              4 ;--------------------------------------------------------
                              5 	.module StateGameOver
                              6 	.optsdcc -mgbz80
                              7 	
                              8 ;--------------------------------------------------------
                              9 ; Public variables in this module
                             10 ;--------------------------------------------------------
                             11 	.globl _Update_StateGameOver
                             12 	.globl _Start_StateGameOver
                             13 	.globl _InitScroll
                             14 	.globl _SetState
                             15 	.globl _empty
                             16 	.globl _bank_StateGameOver
                             17 ;--------------------------------------------------------
                             18 ; special function registers
                             19 ;--------------------------------------------------------
                             20 ;--------------------------------------------------------
                             21 ; ram data
                             22 ;--------------------------------------------------------
                             23 	.area _DATA
                             24 ;--------------------------------------------------------
                             25 ; CODE rom data
                             26 ;--------------------------------------------------------
                             27 	.area _CODE
   0000                      28 _bank_StateGameOver:
   0000 02                   29 	.db #0x02	; 2
                             30 ;--------------------------------------------------------
                             31 ; absolute external ram data
                             32 ;--------------------------------------------------------
                             33 	.area _DABS (ABS)
                             34 ;--------------------------------------------------------
                             35 ; global & static initialisations
                             36 ;--------------------------------------------------------
                             37 	.area _HOME
                             38 	.area _GSINIT
                             39 	.area _GSFINAL
                             40 	.area _GSINIT
                             41 ;--------------------------------------------------------
                             42 ; Home
                             43 ;--------------------------------------------------------
                             44 	.area _HOME
                             45 ;C:/GB/ZGB/common/include/Banks/SetBankCommon.h:4: void empty(void) __nonbanked {}
                             46 ;	---------------------------------
                             47 ; Function empty
                             48 ; ---------------------------------
   0000                      49 _empty::
   0000 C9                   50 	ret
                             51 	.area _HOME
                             52 ;--------------------------------------------------------
                             53 ; code
                             54 ;--------------------------------------------------------
                             55 	.area _CODE_2
                             56 ;StateGameOver.c:11: void Start_StateGameOver() {
                             57 ;	---------------------------------
                             58 ; Function Start_StateGameOver
                             59 ; ---------------------------------
   0000                      60 _Start_StateGameOver::
                             61 ;StateGameOver.c:12: InitScroll(&mapgameover, 0, 0);
   0000 21 00 00             62 	ld	hl, #0x0000
   0003 E5                   63 	push	hl
   0004 2E 00                64 	ld	l, #0x00
   0006 E5                   65 	push	hl
   0007 21r00r00             66 	ld	hl, #_mapgameover
   000A E5                   67 	push	hl
   000B CDr00r00             68 	call	_InitScroll
   000E E8 06                69 	add	sp, #6
                             70 ;StateGameOver.c:13: SHOW_BKG;
   0010 F0r00                71 	ldh	a, (_LCDC_REG+0)
   0012 F6 01                72 	or	a, #0x01
   0014 E0r00                73 	ldh	(_LCDC_REG+0),a
                             74 ;StateGameOver.c:14: }
   0016 C9                   75 	ret
                             76 ;StateGameOver.c:16: void Update_StateGameOver() {
                             77 ;	---------------------------------
                             78 ; Function Update_StateGameOver
                             79 ; ---------------------------------
   0017                      80 _Update_StateGameOver::
                             81 ;StateGameOver.c:17: if(KEY_TICKED(J_START) | KEY_TICKED(J_A) | KEY_TICKED(J_B)) {
   0017 21r00r00             82 	ld	hl, #_keys
   001A 7E                   83 	ld	a, (hl)
   001B CB 07                84 	rlc	a
   001D E6 01                85 	and	a, #0x01
   001F CB 47                86 	bit	0, a
   0021 28 0C                87 	jr	Z,00105$
   0023 21r00r00             88 	ld	hl, #_previous_keys
   0026 7E                   89 	ld	a, (hl)
   0027 CB 07                90 	rlc	a
   0029 E6 01                91 	and	a, #0x01
   002B CB 47                92 	bit	0, a
   002D 28 04                93 	jr	Z,00106$
   002F                      94 00105$:
   002F 0E 00                95 	ld	c, #0x00
   0031 18 02                96 	jr	00107$
   0033                      97 00106$:
   0033 0E 01                98 	ld	c, #0x01
   0035                      99 00107$:
   0035 21r00r00            100 	ld	hl, #_keys
   0038 56                  101 	ld	d, (hl)
   0039 21r00r00            102 	ld	hl, #_previous_keys
   003C 46                  103 	ld	b, (hl)
   003D 1E 00               104 	ld	e, #0x00
   003F CB 62               105 	bit	4, d
   0041 28 04               106 	jr	Z,00108$
   0043 CB 60               107 	bit	4, b
   0045 28 03               108 	jr	Z,00109$
   0047                     109 00108$:
   0047 AF                  110 	xor	a, a
   0048 18 02               111 	jr	00110$
   004A                     112 00109$:
   004A 3E 01               113 	ld	a, #0x01
   004C                     114 00110$:
   004C B1                  115 	or	a, c
   004D 4F                  116 	ld	c, a
   004E CB 6A               117 	bit	5, d
   0050 28 04               118 	jr	Z,00111$
   0052 CB 68               119 	bit	5, b
   0054 28 03               120 	jr	Z,00112$
   0056                     121 00111$:
   0056 AF                  122 	xor	a, a
   0057 18 02               123 	jr	00113$
   0059                     124 00112$:
   0059 3E 01               125 	ld	a, #0x01
   005B                     126 00113$:
   005B B1                  127 	or	a, c
   005C CB 47               128 	bit	0, a
   005E C8                  129 	ret	Z
                            130 ;StateGameOver.c:18: SetState(StateGame);
   005F AF                  131 	xor	a, a
   0060 F5                  132 	push	af
   0061 33                  133 	inc	sp
   0062 CDr00r00            134 	call	_SetState
   0065 33                  135 	inc	sp
                            136 ;StateGameOver.c:20: }
   0066 C9                  137 	ret
                            138 	.area _CODE_2
                            139 	.area _CABS (ABS)
