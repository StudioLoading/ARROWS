                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ANSI-C Compiler
                              3 ; Version 4.0.0 #11528 (MINGW32)
                              4 ;--------------------------------------------------------
                              5 	.module main
                              6 	.optsdcc -mgbz80
                              7 	
                              8 ;--------------------------------------------------------
                              9 ; Public variables in this module
                             10 ;--------------------------------------------------------
                             11 	.globl _main
                             12 	.globl _MusicUpdate
                             13 	.globl _InitSprites
                             14 	.globl _InitStates
                             15 	.globl _vbl_update
                             16 	.globl _FadeOut
                             17 	.globl _FadeIn
                             18 	.globl _PopBank
                             19 	.globl _PushBank
                             20 	.globl _SpriteManagerUpdate
                             21 	.globl _SpriteManagerReset
                             22 	.globl _gbt_enable_channels
                             23 	.globl _gbt_update
                             24 	.globl _gbt_loop
                             25 	.globl _gbt_stop
                             26 	.globl _gbt_play
                             27 	.globl _display_off
                             28 	.globl _wait_vbl_done
                             29 	.globl _set_interrupts
                             30 	.globl _disable_interrupts
                             31 	.globl _enable_interrupts
                             32 	.globl _joypad
                             33 	.globl _add_TIM
                             34 	.globl _add_VBL
                             35 	.globl _default_palette
                             36 	.globl _music_mute_frames
                             37 	.globl _old_scroll_y
                             38 	.globl _old_scroll_x
                             39 	.globl _vbl_count
                             40 	.globl _last_music
                             41 	.globl _state_running
                             42 	.globl _current_state
                             43 	.globl _delta_time
                             44 	.globl _SetState
                             45 	.globl _PlayMusic
                             46 ;--------------------------------------------------------
                             47 ; special function registers
                             48 ;--------------------------------------------------------
                             49 ;--------------------------------------------------------
                             50 ; ram data
                             51 ;--------------------------------------------------------
                             52 	.area _DATA
   0000                      53 _delta_time::
   0000                      54 	.ds 1
   0001                      55 _current_state::
   0001                      56 	.ds 1
   0002                      57 _state_running::
   0002                      58 	.ds 1
   0003                      59 _last_music::
   0003                      60 	.ds 2
   0005                      61 _vbl_count::
   0005                      62 	.ds 1
   0006                      63 _old_scroll_x::
   0006                      64 	.ds 2
   0008                      65 _old_scroll_y::
   0008                      66 	.ds 2
   000A                      67 _music_mute_frames::
   000A                      68 	.ds 1
   000B                      69 _default_palette::
   000B                      70 	.ds 8
                             71 ;--------------------------------------------------------
                             72 ; absolute external ram data
                             73 ;--------------------------------------------------------
                             74 	.area _DABS (ABS)
                             75 ;--------------------------------------------------------
                             76 ; global & static initialisations
                             77 ;--------------------------------------------------------
                             78 	.area _HOME
                             79 	.area _GSINIT
                             80 	.area _GSFINAL
                             81 	.area _GSINIT
                             82 ;C:/GB/ZGB/common/src/main.c:22: UINT8 state_running = 0;
   0000 21r02r00             83 	ld	hl, #_state_running
   0003 36 00                84 	ld	(hl), #0x00
                             85 ;C:/GB/ZGB/common/src/main.c:29: void* last_music = 0;
   0005 21r03r00             86 	ld	hl, #_last_music
   0008 36 00                87 	ld	(hl), #0x00
   000A 23                   88 	inc	hl
   000B 36 00                89 	ld	(hl), #0x00
                             90 ;C:/GB/ZGB/common/src/main.c:41: UINT8 music_mute_frames = 0;
   000D 21r0Ar00             91 	ld	hl, #_music_mute_frames
   0010 36 00                92 	ld	(hl), #0x00
                             93 ;C:/GB/ZGB/common/src/main.c:92: UINT16 default_palette[] = {RGB(31, 31, 31), RGB(20, 20, 20), RGB(10, 10, 10), RGB(0, 0, 0)};
   0012 21r0Br00             94 	ld	hl, #_default_palette
   0015 36 FF                95 	ld	(hl), #0xff
   0017 23                   96 	inc	hl
   0018 36 7F                97 	ld	(hl), #0x7f
   001A 21r0Dr00             98 	ld	hl, #(_default_palette + 0x0002)
   001D 36 94                99 	ld	(hl), #0x94
   001F 23                  100 	inc	hl
   0020 36 52               101 	ld	(hl), #0x52
   0022 21r0Fr00            102 	ld	hl, #(_default_palette + 0x0004)
   0025 36 4A               103 	ld	(hl), #0x4a
   0027 23                  104 	inc	hl
   0028 36 29               105 	ld	(hl), #0x29
   002A 21r11r00            106 	ld	hl, #(_default_palette + 0x0006)
   002D AF                  107 	xor	a, a
   002E 22                  108 	ld	(hl+), a
   002F 77                  109 	ld	(hl), a
                            110 ;--------------------------------------------------------
                            111 ; Home
                            112 ;--------------------------------------------------------
                            113 	.area _HOME
                            114 	.area _HOME
                            115 ;--------------------------------------------------------
                            116 ; code
                            117 ;--------------------------------------------------------
                            118 	.area _CODE
                            119 ;C:/GB/ZGB/common/src/main.c:24: void SetState(UINT8 state) {
                            120 ;	---------------------------------
                            121 ; Function SetState
                            122 ; ---------------------------------
   0000                     123 _SetState::
                            124 ;C:/GB/ZGB/common/src/main.c:25: state_running = 0;
   0000 21r02r00            125 	ld	hl, #_state_running
   0003 36 00               126 	ld	(hl), #0x00
                            127 ;C:/GB/ZGB/common/src/main.c:26: next_state = state;
   0005 E5                  128 	push	hl
   0006 F8 04               129 	ldhl	sp,	#4
   0008 7E                  130 	ld	a, (hl)
   0009 21r00r00            131 	ld	hl, #_next_state
   000C 77                  132 	ld	(hl), a
   000D E1                  133 	pop	hl
                            134 ;C:/GB/ZGB/common/src/main.c:27: }
   000E C9                  135 	ret
                            136 ;C:/GB/ZGB/common/src/main.c:30: void PlayMusic(const unsigned char* music[], unsigned char bank, unsigned char loop) {
                            137 ;	---------------------------------
                            138 ; Function PlayMusic
                            139 ; ---------------------------------
   000F                     140 _PlayMusic::
                            141 ;C:/GB/ZGB/common/src/main.c:31: if(music != last_music) {
   000F C1                  142 	pop	bc
   0010 D1                  143 	pop	de
   0011 D5                  144 	push	de
   0012 C5                  145 	push	bc
   0013 21r04r00            146 	ld	hl, #_last_music + 1
   0016 2B                  147 	dec	hl
   0017 4E                  148 	ld	c, (hl)
   0018 23                  149 	inc	hl
   0019 46                  150 	ld	b, (hl)
   001A 79                  151 	ld	a, c
   001B 93                  152 	sub	a, e
   001C 20 03               153 	jr	NZ,00110$
   001E 78                  154 	ld	a, b
   001F 92                  155 	sub	a, d
   0020 C8                  156 	ret	Z
   0021                     157 00110$:
                            158 ;C:/GB/ZGB/common/src/main.c:32: last_music = music;
   0021 C1                  159 	pop	bc
   0022 D1                  160 	pop	de
   0023 D5                  161 	push	de
   0024 C5                  162 	push	bc
   0025 2B                  163 	dec	hl
   0026 73                  164 	ld	(hl), e
   0027 23                  165 	inc	hl
   0028 72                  166 	ld	(hl), d
                            167 ;C:/GB/ZGB/common/src/main.c:33: gbt_play(music, bank, 7);
   0029 3E 07               168 	ld	a, #0x07
   002B F5                  169 	push	af
   002C 33                  170 	inc	sp
   002D F8 05               171 	ldhl	sp,	#5
   002F 7E                  172 	ld	a, (hl)
   0030 F5                  173 	push	af
   0031 33                  174 	inc	sp
   0032 D5                  175 	push	de
   0033 CDr00r00            176 	call	_gbt_play
   0036 E8 04               177 	add	sp, #4
                            178 ;C:/GB/ZGB/common/src/main.c:34: gbt_loop(loop);
   0038 F8 05               179 	ldhl	sp,	#5
   003A 7E                  180 	ld	a, (hl)
   003B F5                  181 	push	af
   003C 33                  182 	inc	sp
   003D CDr00r00            183 	call	_gbt_loop
   0040 33                  184 	inc	sp
                            185 ;C:/GB/ZGB/common/src/main.c:35: REFRESH_BANK;
   0041 11 00 20            186 	ld	de, #0x2000
   0044 21r00r00            187 	ld	hl, #__current_bank
   0047 7E                  188 	ld	a, (hl)
   0048 12                  189 	ld	(de), a
                            190 ;C:/GB/ZGB/common/src/main.c:37: }
   0049 C9                  191 	ret
                            192 ;C:/GB/ZGB/common/src/main.c:42: void vbl_update() {
                            193 ;	---------------------------------
                            194 ; Function vbl_update
                            195 ; ---------------------------------
   004A                     196 _vbl_update::
                            197 ;C:/GB/ZGB/common/src/main.c:43: vbl_count ++;
   004A 21r05r00            198 	ld	hl, #_vbl_count
   004D 34                  199 	inc	(hl)
                            200 ;C:/GB/ZGB/common/src/main.c:47: if(old_scroll_x < scroll_x)
   004E 11r06r00            201 	ld	de, #_old_scroll_x
   0051 21r00r00            202 	ld	hl, #_scroll_x
   0054 1A                  203 	ld	a, (de)
   0055 96                  204 	sub	a, (hl)
   0056 23                  205 	inc	hl
   0057 13                  206 	inc	de
   0058 1A                  207 	ld	a, (de)
   0059 9E                  208 	sbc	a, (hl)
   005A 1A                  209 	ld	a, (de)
   005B 57                  210 	ld	d, a
   005C 5E                  211 	ld	e, (hl)
   005D CB 7B               212 	bit	7, e
   005F 28 07               213 	jr	Z,00147$
   0061 CB 7A               214 	bit	7, d
   0063 20 08               215 	jr	NZ,00148$
   0065 BF                  216 	cp	a, a
   0066 18 05               217 	jr	00148$
   0068                     218 00147$:
   0068 CB 7A               219 	bit	7, d
   006A 28 01               220 	jr	Z,00148$
   006C 37                  221 	scf
   006D                     222 00148$:
   006D 30 21               223 	jr	NC,00104$
                            224 ;C:/GB/ZGB/common/src/main.c:48: old_scroll_x += (scroll_x - old_scroll_x + 1) >> 1;
   006F 21r00r00            225 	ld	hl, #_scroll_x
   0072 7E                  226 	ld	a, (hl)
   0073 21r06r00            227 	ld	hl, #_old_scroll_x
   0076 96                  228 	sub	a, (hl)
   0077 4F                  229 	ld	c, a
   0078 21r01r00            230 	ld	hl, #_scroll_x + 1
   007B 7E                  231 	ld	a, (hl)
   007C 21r07r00            232 	ld	hl, #_old_scroll_x + 1
   007F 9E                  233 	sbc	a, (hl)
   0080 47                  234 	ld	b, a
   0081 03                  235 	inc	bc
   0082 CB 28               236 	sra	b
   0084 CB 19               237 	rr	c
   0086 2B                  238 	dec	hl
   0087 7E                  239 	ld	a, (hl)
   0088 81                  240 	add	a, c
   0089 22                  241 	ld	(hl+), a
   008A 7E                  242 	ld	a, (hl)
   008B 88                  243 	adc	a, b
   008C 77                  244 	ld	(hl), a
   008D C3rD1r00            245 	jp	00105$
   0090                     246 00104$:
                            247 ;C:/GB/ZGB/common/src/main.c:49: else if(old_scroll_x > scroll_x)
   0090 11r00r00            248 	ld	de, #_scroll_x
   0093 21r06r00            249 	ld	hl, #_old_scroll_x
   0096 1A                  250 	ld	a, (de)
   0097 96                  251 	sub	a, (hl)
   0098 23                  252 	inc	hl
   0099 13                  253 	inc	de
   009A 1A                  254 	ld	a, (de)
   009B 9E                  255 	sbc	a, (hl)
   009C 1A                  256 	ld	a, (de)
   009D 57                  257 	ld	d, a
   009E 5E                  258 	ld	e, (hl)
   009F CB 7B               259 	bit	7, e
   00A1 28 07               260 	jr	Z,00149$
   00A3 CB 7A               261 	bit	7, d
   00A5 20 08               262 	jr	NZ,00150$
   00A7 BF                  263 	cp	a, a
   00A8 18 05               264 	jr	00150$
   00AA                     265 00149$:
   00AA CB 7A               266 	bit	7, d
   00AC 28 01               267 	jr	Z,00150$
   00AE 37                  268 	scf
   00AF                     269 00150$:
   00AF 30 20               270 	jr	NC,00105$
                            271 ;C:/GB/ZGB/common/src/main.c:50: old_scroll_x -= (old_scroll_x - scroll_x + 1) >> 1;
   00B1 21r06r00            272 	ld	hl, #_old_scroll_x
   00B4 7E                  273 	ld	a, (hl)
   00B5 21r00r00            274 	ld	hl, #_scroll_x
   00B8 96                  275 	sub	a, (hl)
   00B9 4F                  276 	ld	c, a
   00BA 21r07r00            277 	ld	hl, #_old_scroll_x + 1
   00BD 7E                  278 	ld	a, (hl)
   00BE 21r01r00            279 	ld	hl, #_scroll_x + 1
   00C1 9E                  280 	sbc	a, (hl)
   00C2 47                  281 	ld	b, a
   00C3 03                  282 	inc	bc
   00C4 CB 28               283 	sra	b
   00C6 CB 19               284 	rr	c
   00C8 21r06r00            285 	ld	hl, #_old_scroll_x
   00CB 7E                  286 	ld	a, (hl)
   00CC 91                  287 	sub	a, c
   00CD 22                  288 	ld	(hl+), a
   00CE 7E                  289 	ld	a, (hl)
   00CF 98                  290 	sbc	a, b
   00D0 77                  291 	ld	(hl), a
   00D1                     292 00105$:
                            293 ;C:/GB/ZGB/common/src/main.c:51: SCX_REG = old_scroll_x + (scroll_offset_x << 3);
   00D1 21r06r00            294 	ld	hl, #_old_scroll_x
   00D4 4E                  295 	ld	c, (hl)
   00D5 21r00r00            296 	ld	hl, #_scroll_offset_x
   00D8 7E                  297 	ld	a, (hl)
   00D9 87                  298 	add	a, a
   00DA 87                  299 	add	a, a
   00DB 87                  300 	add	a, a
   00DC 81                  301 	add	a, c
   00DD E0r00               302 	ldh	(_SCX_REG+0),a
                            303 ;C:/GB/ZGB/common/src/main.c:53: if(old_scroll_y < scroll_y)
   00DF 11r08r00            304 	ld	de, #_old_scroll_y
   00E2 21r00r00            305 	ld	hl, #_scroll_y
   00E5 1A                  306 	ld	a, (de)
   00E6 96                  307 	sub	a, (hl)
   00E7 23                  308 	inc	hl
   00E8 13                  309 	inc	de
   00E9 1A                  310 	ld	a, (de)
   00EA 9E                  311 	sbc	a, (hl)
   00EB 1A                  312 	ld	a, (de)
   00EC 57                  313 	ld	d, a
   00ED 5E                  314 	ld	e, (hl)
   00EE CB 7B               315 	bit	7, e
   00F0 28 07               316 	jr	Z,00151$
   00F2 CB 7A               317 	bit	7, d
   00F4 20 08               318 	jr	NZ,00152$
   00F6 BF                  319 	cp	a, a
   00F7 18 05               320 	jr	00152$
   00F9                     321 00151$:
   00F9 CB 7A               322 	bit	7, d
   00FB 28 01               323 	jr	Z,00152$
   00FD 37                  324 	scf
   00FE                     325 00152$:
   00FE 30 21               326 	jr	NC,00109$
                            327 ;C:/GB/ZGB/common/src/main.c:54: old_scroll_y += (scroll_y - old_scroll_y + 1) >> 1;
   0100 21r00r00            328 	ld	hl, #_scroll_y
   0103 7E                  329 	ld	a, (hl)
   0104 21r08r00            330 	ld	hl, #_old_scroll_y
   0107 96                  331 	sub	a, (hl)
   0108 4F                  332 	ld	c, a
   0109 21r01r00            333 	ld	hl, #_scroll_y + 1
   010C 7E                  334 	ld	a, (hl)
   010D 21r09r00            335 	ld	hl, #_old_scroll_y + 1
   0110 9E                  336 	sbc	a, (hl)
   0111 47                  337 	ld	b, a
   0112 03                  338 	inc	bc
   0113 CB 28               339 	sra	b
   0115 CB 19               340 	rr	c
   0117 2B                  341 	dec	hl
   0118 7E                  342 	ld	a, (hl)
   0119 81                  343 	add	a, c
   011A 22                  344 	ld	(hl+), a
   011B 7E                  345 	ld	a, (hl)
   011C 88                  346 	adc	a, b
   011D 77                  347 	ld	(hl), a
   011E C3r62r01            348 	jp	00110$
   0121                     349 00109$:
                            350 ;C:/GB/ZGB/common/src/main.c:55: else if(old_scroll_y > scroll_y)
   0121 11r00r00            351 	ld	de, #_scroll_y
   0124 21r08r00            352 	ld	hl, #_old_scroll_y
   0127 1A                  353 	ld	a, (de)
   0128 96                  354 	sub	a, (hl)
   0129 23                  355 	inc	hl
   012A 13                  356 	inc	de
   012B 1A                  357 	ld	a, (de)
   012C 9E                  358 	sbc	a, (hl)
   012D 1A                  359 	ld	a, (de)
   012E 57                  360 	ld	d, a
   012F 5E                  361 	ld	e, (hl)
   0130 CB 7B               362 	bit	7, e
   0132 28 07               363 	jr	Z,00153$
   0134 CB 7A               364 	bit	7, d
   0136 20 08               365 	jr	NZ,00154$
   0138 BF                  366 	cp	a, a
   0139 18 05               367 	jr	00154$
   013B                     368 00153$:
   013B CB 7A               369 	bit	7, d
   013D 28 01               370 	jr	Z,00154$
   013F 37                  371 	scf
   0140                     372 00154$:
   0140 30 20               373 	jr	NC,00110$
                            374 ;C:/GB/ZGB/common/src/main.c:56: old_scroll_y -= (old_scroll_y - scroll_y + 1) >> 1;
   0142 21r08r00            375 	ld	hl, #_old_scroll_y
   0145 7E                  376 	ld	a, (hl)
   0146 21r00r00            377 	ld	hl, #_scroll_y
   0149 96                  378 	sub	a, (hl)
   014A 4F                  379 	ld	c, a
   014B 21r09r00            380 	ld	hl, #_old_scroll_y + 1
   014E 7E                  381 	ld	a, (hl)
   014F 21r01r00            382 	ld	hl, #_scroll_y + 1
   0152 9E                  383 	sbc	a, (hl)
   0153 47                  384 	ld	b, a
   0154 03                  385 	inc	bc
   0155 CB 28               386 	sra	b
   0157 CB 19               387 	rr	c
   0159 21r08r00            388 	ld	hl, #_old_scroll_y
   015C 7E                  389 	ld	a, (hl)
   015D 91                  390 	sub	a, c
   015E 22                  391 	ld	(hl+), a
   015F 7E                  392 	ld	a, (hl)
   0160 98                  393 	sbc	a, b
   0161 77                  394 	ld	(hl), a
   0162                     395 00110$:
                            396 ;C:/GB/ZGB/common/src/main.c:57: SCY_REG = old_scroll_y + (scroll_offset_y << 3);
   0162 21r08r00            397 	ld	hl, #_old_scroll_y
   0165 4E                  398 	ld	c, (hl)
   0166 21r00r00            399 	ld	hl, #_scroll_offset_y
   0169 7E                  400 	ld	a, (hl)
   016A 87                  401 	add	a, a
   016B 87                  402 	add	a, a
   016C 87                  403 	add	a, a
   016D 81                  404 	add	a, c
   016E E0r00               405 	ldh	(_SCY_REG+0),a
                            406 ;C:/GB/ZGB/common/src/main.c:59: if(music_mute_frames != 0) {
   0170 21r0Ar00            407 	ld	hl, #_music_mute_frames
   0173 7E                  408 	ld	a, (hl)
   0174 B7                  409 	or	a, a
   0175 C8                  410 	ret	Z
                            411 ;C:/GB/ZGB/common/src/main.c:60: music_mute_frames --;
   0176 35                  412 	dec	(hl)
                            413 ;C:/GB/ZGB/common/src/main.c:61: if(music_mute_frames == 0) {
   0177 7E                  414 	ld	a, (hl)
   0178 B7                  415 	or	a, a
   0179 C0                  416 	ret	NZ
                            417 ;C:/GB/ZGB/common/src/main.c:62: gbt_enable_channels(0xF);
   017A 3E 0F               418 	ld	a, #0x0f
   017C F5                  419 	push	af
   017D 33                  420 	inc	sp
   017E CDr00r00            421 	call	_gbt_enable_channels
   0181 33                  422 	inc	sp
                            423 ;C:/GB/ZGB/common/src/main.c:65: }
   0182 C9                  424 	ret
                            425 ;C:/GB/ZGB/common/src/main.c:70: void MusicUpdate() {
                            426 ;	---------------------------------
                            427 ; Function MusicUpdate
                            428 ; ---------------------------------
   0183                     429 _MusicUpdate::
                            430 ;C:/GB/ZGB/common/src/main.c:71: gbt_update();
   0183 CDr00r00            431 	call	_gbt_update
                            432 ;C:/GB/ZGB/common/src/main.c:72: REFRESH_BANK;
   0186 11 00 20            433 	ld	de, #0x2000
   0189 21r00r00            434 	ld	hl, #__current_bank
   018C 7E                  435 	ld	a, (hl)
   018D 12                  436 	ld	(de), a
                            437 ;C:/GB/ZGB/common/src/main.c:73: }
   018E C9                  438 	ret
                            439 ;C:/GB/ZGB/common/src/main.c:93: void main() {
                            440 ;	---------------------------------
                            441 ; Function main
                            442 ; ---------------------------------
   018F                     443 _main::
                            444 ;C:/GB/ZGB/common/src/main.c:98: PUSH_BANK(1);
   018F 3E 01               445 	ld	a, #0x01
   0191 F5                  446 	push	af
   0192 33                  447 	inc	sp
   0193 CDr00r00            448 	call	_PushBank
   0196 33                  449 	inc	sp
                            450 ;C:/GB/ZGB/common/src/main.c:99: InitStates();
   0197 CDr00r00            451 	call	_InitStates
                            452 ;C:/GB/ZGB/common/src/main.c:100: InitSprites();
   019A CDr00r00            453 	call	_InitSprites
                            454 ;C:/GB/ZGB/common/src/main.c:101: POP_BANK;
   019D CDr00r00            455 	call	_PopBank
                            456 ;C:/GB/ZGB/common/src/main.c:103: disable_interrupts();
   01A0 CDr00r00            457 	call	_disable_interrupts
                            458 ;C:/GB/ZGB/common/src/main.c:104: add_VBL(vbl_update);
   01A3 21r4Ar00            459 	ld	hl, #_vbl_update
   01A6 E5                  460 	push	hl
   01A7 CDr00r00            461 	call	_add_VBL
   01AA E8 02               462 	add	sp, #2
                            463 ;C:/GB/ZGB/common/src/main.c:105: add_TIM(MusicUpdate);
   01AC 21r83r01            464 	ld	hl, #_MusicUpdate
   01AF E5                  465 	push	hl
   01B0 CDr00r00            466 	call	_add_TIM
   01B3 E8 02               467 	add	sp, #2
                            468 ;C:/GB/ZGB/common/src/main.c:109: TMA_REG = 0xBCU;
   01B5 3E BC               469 	ld	a, #0xbc
   01B7 E0r00               470 	ldh	(_TMA_REG+0),a
                            471 ;C:/GB/ZGB/common/src/main.c:111: TAC_REG = 0x04U;
   01B9 3E 04               472 	ld	a, #0x04
   01BB E0r00               473 	ldh	(_TAC_REG+0),a
                            474 ;C:/GB/ZGB/common/src/main.c:113: set_interrupts(VBL_IFLAG | TIM_IFLAG);
   01BD 3E 05               475 	ld	a, #0x05
   01BF F5                  476 	push	af
   01C0 33                  477 	inc	sp
   01C1 CDr00r00            478 	call	_set_interrupts
   01C4 33                  479 	inc	sp
                            480 ;C:/GB/ZGB/common/src/main.c:114: enable_interrupts();
   01C5 CDr00r00            481 	call	_enable_interrupts
                            482 ;C:/GB/ZGB/common/src/main.c:117: while (state_running) {
   01C8                     483 00103$:
   01C8 21r02r00            484 	ld	hl, #_state_running
   01CB 7E                  485 	ld	a, (hl)
   01CC B7                  486 	or	a, a
   01CD CAr37r02            487 	jp	Z, 00105$
                            488 ;C:/GB/ZGB/common/src/main.c:118: if(!vbl_count)
   01D0 21r05r00            489 	ld	hl, #_vbl_count
   01D3 7E                  490 	ld	a, (hl)
   01D4 B7                  491 	or	a, a
   01D5 20 03               492 	jr	NZ,00102$
                            493 ;C:/GB/ZGB/common/src/main.c:119: wait_vbl_done();
   01D7 CDr00r00            494 	call	_wait_vbl_done
   01DA                     495 00102$:
                            496 ;C:/GB/ZGB/common/src/main.c:120: delta_time = vbl_count == 1u ? 0u : 1u;
   01DA 21r05r00            497 	ld	hl, #_vbl_count
   01DD 7E                  498 	ld	a, (hl)
   01DE 3D                  499 	dec	a
   01DF 20 05               500 	jr	NZ,00113$
   01E1 01 00 00            501 	ld	bc, #0x0000
   01E4 18 03               502 	jr	00114$
   01E6                     503 00113$:
   01E6 01 01 00            504 	ld	bc, #0x0001
   01E9                     505 00114$:
   01E9 21r00r00            506 	ld	hl, #_delta_time
   01EC 71                  507 	ld	(hl), c
                            508 ;C:/GB/ZGB/common/src/main.c:121: vbl_count = 0;
   01ED 21r05r00            509 	ld	hl, #_vbl_count
   01F0 36 00               510 	ld	(hl), #0x00
                            511 ;C:/GB/ZGB/common/src/main.c:123: UPDATE_KEYS();
   01F2 E5                  512 	push	hl
   01F3 21r00r00            513 	ld	hl, #_keys
   01F6 7E                  514 	ld	a, (hl)
   01F7 21r00r00            515 	ld	hl, #_previous_keys
   01FA 77                  516 	ld	(hl), a
   01FB E1                  517 	pop	hl
   01FC CDr00r00            518 	call	_joypad
   01FF 21r00r00            519 	ld	hl, #_keys
   0202 73                  520 	ld	(hl), e
                            521 ;C:/GB/ZGB/common/src/main.c:125: SpriteManagerUpdate();
   0203 CDr00r00            522 	call	_SpriteManagerUpdate
                            523 ;C:/GB/ZGB/common/src/main.c:126: PUSH_BANK(stateBanks[current_state]);
   0206 3Er00               524 	ld	a, #<(_stateBanks)
   0208 21r01r00            525 	ld	hl, #_current_state
   020B 86                  526 	add	a, (hl)
   020C 4F                  527 	ld	c, a
   020D 3Es00               528 	ld	a, #>(_stateBanks)
   020F CE 00               529 	adc	a, #0x00
   0211 47                  530 	ld	b, a
   0212 0A                  531 	ld	a, (bc)
   0213 F5                  532 	push	af
   0214 33                  533 	inc	sp
   0215 CDr00r00            534 	call	_PushBank
   0218 33                  535 	inc	sp
                            536 ;C:/GB/ZGB/common/src/main.c:127: updateFuncs[current_state]();
   0219 21r01r00            537 	ld	hl, #_current_state
   021C 4E                  538 	ld	c, (hl)
   021D 06 00               539 	ld	b, #0x00
   021F CB 21               540 	sla	c
   0221 CB 10               541 	rl	b
   0223 21r00r00            542 	ld	hl, #_updateFuncs
   0226 09                  543 	add	hl, bc
   0227 4D                  544 	ld	c,l
   0228 44                  545 	ld	b,h
   0229 4E                  546 	ld	c, (hl)
   022A 23                  547 	inc	hl
   022B 46                  548 	ld	b, (hl)
   022C 69                  549 	ld	l, c
   022D 60                  550 	ld	h, b
   022E CDr00r00            551 	call	___sdcc_call_hl
                            552 ;C:/GB/ZGB/common/src/main.c:128: POP_BANK;
   0231 CDr00r00            553 	call	_PopBank
   0234 C3rC8r01            554 	jp	00103$
   0237                     555 00105$:
                            556 ;C:/GB/ZGB/common/src/main.c:131: FadeIn();
   0237 CDr00r00            557 	call	_FadeIn
                            558 ;C:/GB/ZGB/common/src/main.c:132: DISPLAY_OFF
   023A CDr00r00            559 	call	_display_off
                            560 ;C:/GB/ZGB/common/src/main.c:134: gbt_stop();
   023D CDr00r00            561 	call	_gbt_stop
                            562 ;C:/GB/ZGB/common/src/main.c:135: last_music = 0;
   0240 21r03r00            563 	ld	hl, #_last_music
   0243 36 00               564 	ld	(hl), #0x00
   0245 23                  565 	inc	hl
   0246 36 00               566 	ld	(hl), #0x00
                            567 ;C:/GB/ZGB/common/src/main.c:137: last_sprite_loaded = 0;
   0248 21r00r00            568 	ld	hl, #_last_sprite_loaded
   024B 36 00               569 	ld	(hl), #0x00
                            570 ;C:/GB/ZGB/common/src/main.c:138: SpriteManagerReset();
   024D CDr00r00            571 	call	_SpriteManagerReset
                            572 ;C:/GB/ZGB/common/src/main.c:139: state_running = 1;
   0250 21r02r00            573 	ld	hl, #_state_running
   0253 36 01               574 	ld	(hl), #0x01
                            575 ;C:/GB/ZGB/common/src/main.c:140: current_state = next_state;
   0255 E5                  576 	push	hl
   0256 21r00r00            577 	ld	hl, #_next_state
   0259 7E                  578 	ld	a, (hl)
   025A 21r01r00            579 	ld	hl, #_current_state
   025D 77                  580 	ld	(hl), a
   025E E1                  581 	pop	hl
                            582 ;C:/GB/ZGB/common/src/main.c:141: scroll_target = 0;
   025F 21r00r00            583 	ld	hl, #_scroll_target
   0262 36 00               584 	ld	(hl), #0x00
   0264 23                  585 	inc	hl
   0265 36 00               586 	ld	(hl), #0x00
                            587 ;C:/GB/ZGB/common/src/main.c:149: BGP_REG = OBP0_REG = OBP1_REG = PAL_DEF(0, 1, 2, 3);
   0267 3E E4               588 	ld	a, #0xe4
   0269 E0r00               589 	ldh	(_OBP1_REG+0),a
   026B 3E E4               590 	ld	a, #0xe4
   026D E0r00               591 	ldh	(_OBP0_REG+0),a
   026F 3E E4               592 	ld	a, #0xe4
   0271 E0r00               593 	ldh	(_BGP_REG+0),a
                            594 ;C:/GB/ZGB/common/src/main.c:151: PUSH_BANK(stateBanks[current_state]);
   0273 3Er00               595 	ld	a, #<(_stateBanks)
   0275 21r01r00            596 	ld	hl, #_current_state
   0278 86                  597 	add	a, (hl)
   0279 4F                  598 	ld	c, a
   027A 3Es00               599 	ld	a, #>(_stateBanks)
   027C CE 00               600 	adc	a, #0x00
   027E 47                  601 	ld	b, a
   027F 0A                  602 	ld	a, (bc)
   0280 F5                  603 	push	af
   0281 33                  604 	inc	sp
   0282 CDr00r00            605 	call	_PushBank
   0285 33                  606 	inc	sp
                            607 ;C:/GB/ZGB/common/src/main.c:152: (startFuncs[current_state])();
   0286 21r01r00            608 	ld	hl, #_current_state
   0289 4E                  609 	ld	c, (hl)
   028A 06 00               610 	ld	b, #0x00
   028C CB 21               611 	sla	c
   028E CB 10               612 	rl	b
   0290 21r00r00            613 	ld	hl, #_startFuncs
   0293 09                  614 	add	hl, bc
   0294 4D                  615 	ld	c,l
   0295 44                  616 	ld	b,h
   0296 4E                  617 	ld	c, (hl)
   0297 23                  618 	inc	hl
   0298 46                  619 	ld	b, (hl)
   0299 69                  620 	ld	l, c
   029A 60                  621 	ld	h, b
   029B CDr00r00            622 	call	___sdcc_call_hl
                            623 ;C:/GB/ZGB/common/src/main.c:153: POP_BANK;
   029E CDr00r00            624 	call	_PopBank
                            625 ;C:/GB/ZGB/common/src/main.c:154: old_scroll_x = scroll_x;
   02A1 21r00r00            626 	ld	hl, #_scroll_x
   02A4 2A                  627 	ld	a, (hl+)
   02A5 5E                  628 	ld	e, (hl)
   02A6 21r06r00            629 	ld	hl, #_old_scroll_x
   02A9 22                  630 	ld	(hl+), a
   02AA 73                  631 	ld	(hl), e
                            632 ;C:/GB/ZGB/common/src/main.c:155: old_scroll_y = scroll_y;
   02AB 21r00r00            633 	ld	hl, #_scroll_y
   02AE 2A                  634 	ld	a, (hl+)
   02AF 5E                  635 	ld	e, (hl)
   02B0 21r08r00            636 	ld	hl, #_old_scroll_y
   02B3 22                  637 	ld	(hl+), a
   02B4 73                  638 	ld	(hl), e
                            639 ;C:/GB/ZGB/common/src/main.c:157: if(state_running) {
   02B5 21r02r00            640 	ld	hl, #_state_running
   02B8 7E                  641 	ld	a, (hl)
   02B9 B7                  642 	or	a, a
   02BA CArC8r01            643 	jp	Z, 00103$
                            644 ;C:/GB/ZGB/common/src/main.c:158: DISPLAY_ON;
   02BD F0r00               645 	ldh	a, (_LCDC_REG+0)
   02BF F6 80               646 	or	a, #0x80
   02C1 E0r00               647 	ldh	(_LCDC_REG+0),a
                            648 ;C:/GB/ZGB/common/src/main.c:159: FadeOut();
   02C3 CDr00r00            649 	call	_FadeOut
   02C6 C3rC8r01            650 	jp	00103$
                            651 ;C:/GB/ZGB/common/src/main.c:164: }
   02C9 C9                  652 	ret
                            653 	.area _CODE
                            654 	.area _CABS (ABS)
