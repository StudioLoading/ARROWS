                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ANSI-C Compiler
                              3 ; Version 4.0.0 #11528 (MINGW32)
                              4 ;--------------------------------------------------------
                              5 	.module Frame
                              6 	.optsdcc -mgbz80
                              7 	
                              8 ;--------------------------------------------------------
                              9 ; Public variables in this module
                             10 ;--------------------------------------------------------
                             11 	.globl _DrawFrame32x32
                             12 	.globl _FlushOAMSprite
                             13 	.globl _DrawFrame
                             14 ;--------------------------------------------------------
                             15 ; special function registers
                             16 ;--------------------------------------------------------
                             17 ;--------------------------------------------------------
                             18 ; ram data
                             19 ;--------------------------------------------------------
                             20 	.area _DATA
                             21 ;--------------------------------------------------------
                             22 ; absolute external ram data
                             23 ;--------------------------------------------------------
                             24 	.area _DABS (ABS)
                             25 ;--------------------------------------------------------
                             26 ; global & static initialisations
                             27 ;--------------------------------------------------------
                             28 	.area _HOME
                             29 	.area _GSINIT
                             30 	.area _GSFINAL
                             31 	.area _GSINIT
                             32 ;--------------------------------------------------------
                             33 ; Home
                             34 ;--------------------------------------------------------
                             35 	.area _HOME
                             36 	.area _HOME
                             37 ;--------------------------------------------------------
                             38 ; code
                             39 ;--------------------------------------------------------
                             40 	.area _CODE
                             41 ;C:/GB/ZGB/common/src/Frame.c:12: void DrawFrame(FrameSize size, int idx, UINT8 x, UINT8 y, UINT8 flags){
                             42 ;	---------------------------------
                             43 ; Function DrawFrame
                             44 ; ---------------------------------
   0000                      45 _DrawFrame::
                             46 ;C:/GB/ZGB/common/src/Frame.c:22: next_oam_sprite_y = y + 16u; next_oam_sprite_x = x + 8u; next_oam_sprite_idx = idx; next_oam_sprite_flags = flags; FlushOAMSprite();
   0000 F8 06                47 	ldhl	sp,	#6
   0002 7E                   48 	ld	a, (hl)
   0003 C6 10                49 	add	a, #0x10
   0005 4F                   50 	ld	c, a
   0006 2B                   51 	dec	hl
   0007 7E                   52 	ld	a, (hl)
   0008 C6 08                53 	add	a, #0x08
   000A 47                   54 	ld	b, a
   000B 2B                   55 	dec	hl
   000C 2B                   56 	dec	hl
   000D 5E                   57 	ld	e, (hl)
   000E F8 07                58 	ldhl	sp,	#7
   0010 56                   59 	ld	d, (hl)
                             60 ;C:/GB/ZGB/common/src/Frame.c:19: switch(size) {
   0011 F8 02                61 	ldhl	sp,	#2
   0013 7E                   62 	ld	a, (hl)
   0014 B7                   63 	or	a, a
   0015 28 16                64 	jr	Z,00102$
   0017 F8 02                65 	ldhl	sp,	#2
   0019 7E                   66 	ld	a, (hl)
   001A 3D                   67 	dec	a
   001B 28 10                68 	jr	Z,00102$
   001D F8 02                69 	ldhl	sp,	#2
   001F 7E                   70 	ld	a, (hl)
   0020 D6 02                71 	sub	a, #0x02
   0022 28 1C                72 	jr	Z,00103$
   0024 F8 02                73 	ldhl	sp,	#2
   0026 7E                   74 	ld	a, (hl)
   0027 D6 04                75 	sub	a, #0x04
   0029 CAr8Er00             76 	jp	Z,00107$
   002C C9                   77 	ret
                             78 ;C:/GB/ZGB/common/src/Frame.c:21: case FRAME_8x16:
   002D                      79 00102$:
                             80 ;C:/GB/ZGB/common/src/Frame.c:22: next_oam_sprite_y = y + 16u; next_oam_sprite_x = x + 8u; next_oam_sprite_idx = idx; next_oam_sprite_flags = flags; FlushOAMSprite();
   002D 21r00r00             81 	ld	hl, #_next_oam_sprite_y
   0030 71                   82 	ld	(hl), c
   0031 21r00r00             83 	ld	hl, #_next_oam_sprite_x
   0034 70                   84 	ld	(hl), b
   0035 21r00r00             85 	ld	hl, #_next_oam_sprite_idx
   0038 73                   86 	ld	(hl), e
   0039 21r00r00             87 	ld	hl, #_next_oam_sprite_flags
   003C 72                   88 	ld	(hl), d
                             89 ;C:/GB/ZGB/common/src/Frame.c:23: break;
   003D C3r00r00             90 	jp	_FlushOAMSprite
                             91 ;C:/GB/ZGB/common/src/Frame.c:25: case FRAME_16x16:
   0040                      92 00103$:
                             93 ;C:/GB/ZGB/common/src/Frame.c:26: if(flags & 32){
   0040 CB 6A                94 	bit	5, d
   0042 28 28                95 	jr	Z,00105$
                             96 ;C:/GB/ZGB/common/src/Frame.c:27: next_oam_sprite_y = y + 16u; next_oam_sprite_x = x + 8u; next_oam_sprite_idx = idx + 2u; next_oam_sprite_flags = flags; FlushOAMSprite();				
   0044 21r00r00             97 	ld	hl, #_next_oam_sprite_y
   0047 71                   98 	ld	(hl), c
   0048 21r00r00             99 	ld	hl, #_next_oam_sprite_x
   004B 70                  100 	ld	(hl), b
   004C F8 03               101 	ldhl	sp,	#3
   004E 7E                  102 	ld	a, (hl)
   004F C6 02               103 	add	a, #0x02
   0051 21r00r00            104 	ld	hl, #_next_oam_sprite_idx
   0054 77                  105 	ld	(hl), a
   0055 21r00r00            106 	ld	hl, #_next_oam_sprite_flags
   0058 72                  107 	ld	(hl), d
   0059 D5                  108 	push	de
   005A CDr00r00            109 	call	_FlushOAMSprite
   005D D1                  110 	pop	de
                            111 ;C:/GB/ZGB/common/src/Frame.c:28: next_oam_sprite_x += 8u; next_oam_sprite_idx = idx; FlushOAMSprite();
   005E 21r00r00            112 	ld	hl, #_next_oam_sprite_x
   0061 7E                  113 	ld	a, (hl)
   0062 C6 08               114 	add	a, #0x08
   0064 77                  115 	ld	(hl), a
   0065 21r00r00            116 	ld	hl, #_next_oam_sprite_idx
   0068 73                  117 	ld	(hl), e
   0069 C3r00r00            118 	jp	_FlushOAMSprite
   006C                     119 00105$:
                            120 ;C:/GB/ZGB/common/src/Frame.c:30: next_oam_sprite_y = y + 16u; next_oam_sprite_x = x + 8u; next_oam_sprite_idx = idx; next_oam_sprite_flags = flags; FlushOAMSprite();
   006C 21r00r00            121 	ld	hl, #_next_oam_sprite_y
   006F 71                  122 	ld	(hl), c
   0070 21r00r00            123 	ld	hl, #_next_oam_sprite_x
   0073 70                  124 	ld	(hl), b
   0074 21r00r00            125 	ld	hl, #_next_oam_sprite_idx
   0077 73                  126 	ld	(hl), e
   0078 21r00r00            127 	ld	hl, #_next_oam_sprite_flags
   007B 72                  128 	ld	(hl), d
   007C CDr00r00            129 	call	_FlushOAMSprite
                            130 ;C:/GB/ZGB/common/src/Frame.c:31: next_oam_sprite_x += 8u; next_oam_sprite_idx += 2u; FlushOAMSprite();
   007F 21r00r00            131 	ld	hl, #_next_oam_sprite_x
   0082 7E                  132 	ld	a, (hl)
   0083 C6 08               133 	add	a, #0x08
   0085 77                  134 	ld	(hl), a
   0086 21r00r00            135 	ld	hl, #_next_oam_sprite_idx
   0089 34                  136 	inc	(hl)
   008A 34                  137 	inc	(hl)
                            138 ;C:/GB/ZGB/common/src/Frame.c:33: break;
   008B C3r00r00            139 	jp	_FlushOAMSprite
                            140 ;C:/GB/ZGB/common/src/Frame.c:35: case FRAME_32x32:
   008E                     141 00107$:
                            142 ;C:/GB/ZGB/common/src/Frame.c:36: DrawFrame32x32(idx, x, y, flags);
   008E F8 07               143 	ldhl	sp,	#7
   0090 7E                  144 	ld	a, (hl)
   0091 F5                  145 	push	af
   0092 33                  146 	inc	sp
   0093 2B                  147 	dec	hl
   0094 7E                  148 	ld	a, (hl)
   0095 F5                  149 	push	af
   0096 33                  150 	inc	sp
   0097 2B                  151 	dec	hl
   0098 7E                  152 	ld	a, (hl)
   0099 F5                  153 	push	af
   009A 33                  154 	inc	sp
   009B 2B                  155 	dec	hl
   009C 2B                  156 	dec	hl
   009D 2A                  157 	ld	a, (hl+)
   009E 66                  158 	ld	h, (hl)
   009F 6F                  159 	ld	l, a
   00A0 E5                  160 	push	hl
   00A1 CDr00r00            161 	call	banked_call
   00A4r00r00               162 	.dw	_DrawFrame32x32
   00A6 00 00               163 	.dw 0     ; PENDING: bank support
   00A8 E8 05               164 	add	sp, #5
                            165 ;C:/GB/ZGB/common/src/Frame.c:38: }
                            166 ;C:/GB/ZGB/common/src/Frame.c:39: }
   00AA C9                  167 	ret
                            168 	.area _CODE
                            169 	.area _CABS (ABS)
