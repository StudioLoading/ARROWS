                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ANSI-C Compiler
                              3 ; Version 4.0.0 #11528 (MINGW32)
                              4 ;--------------------------------------------------------
                              5 	.module StateSecret
                              6 	.optsdcc -mgbz80
                              7 	
                              8 ;--------------------------------------------------------
                              9 ; Public variables in this module
                             10 ;--------------------------------------------------------
                             11 	.globl _Update_StateSecret
                             12 	.globl _populate_secret0
                             13 	.globl _Start_StateSecret
                             14 	.globl _WriteMap
                             15 	.globl _WriteUPS
                             16 	.globl _WriteHP
                             17 	.globl _WriteCOINS
                             18 	.globl _WriteAMULET
                             19 	.globl _SpriteManagerAdd
                             20 	.globl _SpriteManagerLoad
                             21 	.globl _ScrollFindTile
                             22 	.globl _GetMapSize
                             23 	.globl _InitWindow
                             24 	.globl _InitScroll
                             25 	.globl _ScrollSetTiles
                             26 	.globl _SetState
                             27 	.globl _empty
                             28 	.globl _bank_StateSecret
                             29 	.globl _secrets
                             30 	.globl _secret_1
                             31 	.globl _current_map_s
                             32 	.globl _current_level_s
                             33 	.globl _attack_wait
                             34 	.globl _damage_cooldown
                             35 ;--------------------------------------------------------
                             36 ; special function registers
                             37 ;--------------------------------------------------------
                             38 ;--------------------------------------------------------
                             39 ; ram data
                             40 ;--------------------------------------------------------
                             41 	.area _DATA
   0000                      42 _damage_cooldown::
   0000                      43 	.ds 1
   0001                      44 _attack_wait::
   0001                      45 	.ds 1
   0002                      46 _current_level_s::
   0002                      47 	.ds 1
   0003                      48 _current_map_s::
   0003                      49 	.ds 1
   0004                      50 _secret_1::
   0004                      51 	.ds 2
   0006                      52 _secrets::
   0006                      53 	.ds 2
                             54 ;--------------------------------------------------------
                             55 ; CODE rom data
                             56 ;--------------------------------------------------------
                             57 	.area _CODE
   0000                      58 _bank_StateSecret:
   0000 02                   59 	.db #0x02	; 2
                             60 ;--------------------------------------------------------
                             61 ; absolute external ram data
                             62 ;--------------------------------------------------------
                             63 	.area _DABS (ABS)
                             64 ;--------------------------------------------------------
                             65 ; global & static initialisations
                             66 ;--------------------------------------------------------
                             67 	.area _HOME
                             68 	.area _GSINIT
                             69 	.area _GSFINAL
                             70 	.area _GSINIT
                             71 ;custom_datas.h:44: UINT8 damage_cooldown = 30u;
   0000 21r00r00             72 	ld	hl, #_damage_cooldown
   0003 36 1E                73 	ld	(hl), #0x1e
                             74 ;custom_datas.h:45: UINT8 attack_wait = 32u;
   0005 21r01r00             75 	ld	hl, #_attack_wait
   0008 36 20                76 	ld	(hl), #0x20
                             77 ;StateSecret.c:40: UINT8 current_level_s = 0;
   000A 21r02r00             78 	ld	hl, #_current_level_s
   000D 36 00                79 	ld	(hl), #0x00
                             80 ;StateSecret.c:41: UINT8 current_map_s = 0;
   000F 21r03r00             81 	ld	hl, #_current_map_s
   0012 36 00                82 	ld	(hl), #0x00
                             83 ;StateSecret.c:42: const struct MapInfo* secret_1[] = {
   0014 21r04r00             84 	ld	hl, #_secret_1
   0017 36r00                85 	ld	(hl), #<(_mapsecret0)
   0019 23                   86 	inc	hl
   001A 36s00                87 	ld	(hl), #>(_mapsecret0)
                             88 ;StateSecret.c:45: const struct MapInfo** secrets[] = {secret_1};
   001C 21r06r00             89 	ld	hl, #_secrets
   001F 36r04                90 	ld	(hl), #<(_secret_1)
   0021 23                   91 	inc	hl
   0022 36s00                92 	ld	(hl), #>(_secret_1)
                             93 ;--------------------------------------------------------
                             94 ; Home
                             95 ;--------------------------------------------------------
                             96 	.area _HOME
                             97 ;C:/GB/ZGB/common/include/Banks/SetBankCommon.h:4: void empty(void) __nonbanked {}
                             98 ;	---------------------------------
                             99 ; Function empty
                            100 ; ---------------------------------
   0000                     101 _empty::
   0000 C9                  102 	ret
                            103 	.area _HOME
                            104 ;--------------------------------------------------------
                            105 ; code
                            106 ;--------------------------------------------------------
                            107 	.area _CODE_2
                            108 ;StateSecret.c:50: void Start_StateSecret() {
                            109 ;	---------------------------------
                            110 ; Function Start_StateSecret
                            111 ; ---------------------------------
   0000                     112 _Start_StateSecret::
   0000 E8 F8               113 	add	sp, #-8
                            114 ;StateSecret.c:55: SPRITES_8x16;
   0002 F0r00               115 	ldh	a, (_LCDC_REG+0)
   0004 F6 04               116 	or	a, #0x04
   0006 E0r00               117 	ldh	(_LCDC_REG+0),a
                            118 ;StateSecret.c:57: for(i = 0; i != N_SPRITE_TYPES; ++ i) {
   0008 06 00               119 	ld	b, #0x00
   000A                     120 00110$:
                            121 ;StateSecret.c:58: SpriteManagerLoad(i);
   000A C5                  122 	push	bc
   000B C5                  123 	push	bc
   000C 33                  124 	inc	sp
   000D CDr00r00            125 	call	_SpriteManagerLoad
   0010 33                  126 	inc	sp
   0011 C1                  127 	pop	bc
                            128 ;StateSecret.c:57: for(i = 0; i != N_SPRITE_TYPES; ++ i) {
   0012 04                  129 	inc	b
   0013 78                  130 	ld	a, b
   0014 D6 07               131 	sub	a, #0x07
   0016 20 F2               132 	jr	NZ,00110$
                            133 ;StateSecret.c:60: SHOW_SPRITES;
   0018 F0r00               134 	ldh	a, (_LCDC_REG+0)
   001A F6 02               135 	or	a, #0x02
   001C E0r00               136 	ldh	(_LCDC_REG+0),a
                            137 ;StateSecret.c:63: scroll_bottom_movement_limit = 60;//customizzo altezza archer sul display
   001E 21r00r00            138 	ld	hl, #_scroll_bottom_movement_limit
   0021 36 3C               139 	ld	(hl), #0x3c
                            140 ;StateSecret.c:64: const struct MapInfo** level_maps_s = secrets[current_level_s];
   0023 21r02r00            141 	ld	hl, #_current_level_s
   0026 4E                  142 	ld	c, (hl)
   0027 06 00               143 	ld	b, #0x00
   0029 CB 21               144 	sla	c
   002B CB 10               145 	rl	b
   002D 21r06r00            146 	ld	hl, #_secrets
   0030 09                  147 	add	hl, bc
   0031 4D                  148 	ld	c, l
   0032 44                  149 	ld	b, h
   0033 59                  150 	ld	e, c
   0034 50                  151 	ld	d, b
   0035 1A                  152 	ld	a,(de)
   0036 F8 00               153 	ldhl	sp,	#0
   0038 22                  154 	ld	(hl+), a
   0039 13                  155 	inc	de
   003A 1A                  156 	ld	a, (de)
   003B 77                  157 	ld	(hl), a
                            158 ;StateSecret.c:66: GetMapSize(level_maps_s[current_map_s], &map_w, &map_h);
   003C F8 03               159 	ldhl	sp,	#3
   003E 4D                  160 	ld	c, l
   003F 44                  161 	ld	b, h
   0040 F8 04               162 	ldhl	sp,	#4
   0042 71                  163 	ld	(hl), c
   0043 23                  164 	inc	hl
   0044 70                  165 	ld	(hl), b
   0045 F8 02               166 	ldhl	sp,	#2
   0047 4D                  167 	ld	c, l
   0048 44                  168 	ld	b, h
   0049 F8 06               169 	ldhl	sp,	#6
   004B 71                  170 	ld	(hl), c
   004C 23                  171 	inc	hl
   004D 70                  172 	ld	(hl), b
   004E 21r03r00            173 	ld	hl, #_current_map_s
   0051 4E                  174 	ld	c, (hl)
   0052 06 00               175 	ld	b, #0x00
   0054 CB 21               176 	sla	c
   0056 CB 10               177 	rl	b
   0058 E1                  178 	pop	hl
   0059 E5                  179 	push	hl
   005A 09                  180 	add	hl, bc
   005B 4D                  181 	ld	c,l
   005C 44                  182 	ld	b,h
   005D 4E                  183 	ld	c, (hl)
   005E 23                  184 	inc	hl
   005F 46                  185 	ld	b, (hl)
   0060 F8 04               186 	ldhl	sp,	#4
   0062 2A                  187 	ld	a, (hl+)
   0063 66                  188 	ld	h, (hl)
   0064 6F                  189 	ld	l, a
   0065 E5                  190 	push	hl
   0066 F8 08               191 	ldhl	sp,	#8
   0068 2A                  192 	ld	a, (hl+)
   0069 66                  193 	ld	h, (hl)
   006A 6F                  194 	ld	l, a
   006B E5                  195 	push	hl
   006C C5                  196 	push	bc
   006D CDr00r00            197 	call	_GetMapSize
   0070 E8 06               198 	add	sp, #6
                            199 ;StateSecret.c:67: ScrollFindTile(level_maps_s[current_map_s], 9, 0, 0, map_w, map_h, &drop_player_x, &drop_player_y);
   0072 21r03r00            200 	ld	hl, #_current_map_s
   0075 4E                  201 	ld	c, (hl)
   0076 06 00               202 	ld	b, #0x00
   0078 CB 21               203 	sla	c
   007A CB 10               204 	rl	b
   007C E1                  205 	pop	hl
   007D E5                  206 	push	hl
   007E 09                  207 	add	hl, bc
   007F 4D                  208 	ld	c,l
   0080 44                  209 	ld	b,h
   0081 4E                  210 	ld	c, (hl)
   0082 23                  211 	inc	hl
   0083 46                  212 	ld	b, (hl)
   0084 21r00r00            213 	ld	hl, #_drop_player_y
   0087 E5                  214 	push	hl
   0088 21r00r00            215 	ld	hl, #_drop_player_x
   008B E5                  216 	push	hl
   008C F8 07               217 	ldhl	sp,	#7
   008E 7E                  218 	ld	a, (hl)
   008F F5                  219 	push	af
   0090 33                  220 	inc	sp
   0091 2B                  221 	dec	hl
   0092 7E                  222 	ld	a, (hl)
   0093 F5                  223 	push	af
   0094 33                  224 	inc	sp
   0095 AF                  225 	xor	a, a
   0096 F5                  226 	push	af
   0097 33                  227 	inc	sp
   0098 AF                  228 	xor	a, a
   0099 F5                  229 	push	af
   009A 33                  230 	inc	sp
   009B 3E 09               231 	ld	a, #0x09
   009D F5                  232 	push	af
   009E 33                  233 	inc	sp
   009F C5                  234 	push	bc
   00A0 CDr00r00            235 	call	_ScrollFindTile
   00A3 E8 0B               236 	add	sp, #11
                            237 ;StateSecret.c:68: scroll_target = SpriteManagerAdd(SpritePlayer, drop_player_x*8, drop_player_y*8);
   00A5 21r00r00            238 	ld	hl, #_drop_player_y
   00A8 7E                  239 	ld	a, (hl)
   00A9 5F                  240 	ld	e, a
   00AA 17                  241 	rla
   00AB 9F                  242 	sbc	a, a
   00AC 57                  243 	ld	d, a
   00AD CB 23               244 	sla	e
   00AF CB 12               245 	rl	d
   00B1 CB 23               246 	sla	e
   00B3 CB 12               247 	rl	d
   00B5 CB 23               248 	sla	e
   00B7 CB 12               249 	rl	d
   00B9 21r00r00            250 	ld	hl, #_drop_player_x
   00BC 7E                  251 	ld	a, (hl)
   00BD 4F                  252 	ld	c, a
   00BE 17                  253 	rla
   00BF 9F                  254 	sbc	a, a
   00C0 47                  255 	ld	b, a
   00C1 CB 21               256 	sla	c
   00C3 CB 10               257 	rl	b
   00C5 CB 21               258 	sla	c
   00C7 CB 10               259 	rl	b
   00C9 CB 21               260 	sla	c
   00CB CB 10               261 	rl	b
   00CD D5                  262 	push	de
   00CE C5                  263 	push	bc
   00CF AF                  264 	xor	a, a
   00D0 F5                  265 	push	af
   00D1 33                  266 	inc	sp
   00D2 CDr00r00            267 	call	_SpriteManagerAdd
   00D5 E8 05               268 	add	sp, #5
   00D7 21r00r00            269 	ld	hl, #_scroll_target
   00DA 73                  270 	ld	(hl), e
   00DB 23                  271 	inc	hl
   00DC 72                  272 	ld	(hl), d
                            273 ;StateSecret.c:69: InitScroll(level_maps_s[current_map_s], collision_tiles, 0);
   00DD 21r03r00            274 	ld	hl, #_current_map_s
   00E0 4E                  275 	ld	c, (hl)
   00E1 06 00               276 	ld	b, #0x00
   00E3 CB 21               277 	sla	c
   00E5 CB 10               278 	rl	b
   00E7 E1                  279 	pop	hl
   00E8 E5                  280 	push	hl
   00E9 09                  281 	add	hl, bc
   00EA 4D                  282 	ld	c,l
   00EB 44                  283 	ld	b,h
   00EC 4E                  284 	ld	c, (hl)
   00ED 23                  285 	inc	hl
   00EE 46                  286 	ld	b, (hl)
   00EF 21 00 00            287 	ld	hl, #0x0000
   00F2 E5                  288 	push	hl
   00F3 21r00r00            289 	ld	hl, #_collision_tiles
   00F6 E5                  290 	push	hl
   00F7 C5                  291 	push	bc
   00F8 CDr00r00            292 	call	_InitScroll
   00FB E8 06               293 	add	sp, #6
                            294 ;StateSecret.c:70: SHOW_BKG;
   00FD F0r00               295 	ldh	a, (_LCDC_REG+0)
   00FF F6 01               296 	or	a, #0x01
   0101 E0r00               297 	ldh	(_LCDC_REG+0),a
                            298 ;StateSecret.c:73: struct ArcherInfo* archer_data = (struct ArcherInfo*)scroll_target->custom_data;
   0103 21r00r00            299 	ld	hl, #_scroll_target
   0106 46                  300 	ld	b, (hl)
   0107 23                  301 	inc	hl
   0108 4E                  302 	ld	c, (hl)
   0109 78                  303 	ld	a, b
   010A C6 19               304 	add	a, #0x19
   010C 47                  305 	ld	b, a
   010D 30 01               306 	jr	NC,00159$
   010F 0C                  307 	inc	c
   0110                     308 00159$:
   0110 F8 04               309 	ldhl	sp,	#4
   0112 70                  310 	ld	(hl), b
   0113 23                  311 	inc	hl
   0114 71                  312 	ld	(hl), c
                            313 ;StateSecret.c:74: if (archer_data->ups > 0 & archer_data->ups != ups){
   0115 2B                  314 	dec	hl
   0116 4E                  315 	ld	c, (hl)
   0117 23                  316 	inc	hl
   0118 46                  317 	ld	b, (hl)
   0119 03                  318 	inc	bc
   011A 03                  319 	inc	bc
   011B 03                  320 	inc	bc
   011C 0A                  321 	ld	a, (bc)
   011D 23                  322 	inc	hl
   011E 77                  323 	ld	(hl), a
   011F 7E                  324 	ld	a, (hl)
   0120 5F                  325 	ld	e, a
   0121 3E 00               326 	ld	a, #0x00
   0123 57                  327 	ld	d, a
   0124 AF                  328 	xor	a, a
   0125 96                  329 	sub	a, (hl)
   0126 CB 7B               330 	bit	7, e
   0128 28 07               331 	jr	Z,00160$
   012A CB 7A               332 	bit	7, d
   012C 20 08               333 	jr	NZ,00161$
   012E BF                  334 	cp	a, a
   012F 18 05               335 	jr	00161$
   0131                     336 00160$:
   0131 CB 7A               337 	bit	7, d
   0133 28 01               338 	jr	Z,00161$
   0135 37                  339 	scf
   0136                     340 00161$:
   0136 3E 00               341 	ld	a, #0x00
   0138 17                  342 	rla
   0139 F8 07               343 	ldhl	sp,	#7
   013B 77                  344 	ld	(hl), a
   013C 21r00r00            345 	ld	hl, #_ups
   013F 7E                  346 	ld	a, (hl)
   0140 F8 06               347 	ldhl	sp,	#6
   0142 96                  348 	sub	a, (hl)
   0143 3E 01               349 	ld	a, #0x01
   0145 28 01               350 	jr	Z,00163$
   0147 AF                  351 	xor	a, a
   0148                     352 00163$:
   0148 EE 01               353 	xor	a, #0x01
   014A F8 07               354 	ldhl	sp,	#7
   014C 5E                  355 	ld	e, (hl)
   014D A3                  356 	and	a,e
   014E 28 08               357 	jr	Z,00103$
                            358 ;StateSecret.c:75: ups = archer_data->ups;
   0150 E5                  359 	push	hl
   0151 2B                  360 	dec	hl
   0152 7E                  361 	ld	a, (hl)
   0153 21r00r00            362 	ld	hl, #_ups
   0156 77                  363 	ld	(hl), a
   0157 E1                  364 	pop	hl
   0158                     365 00103$:
                            366 ;StateSecret.c:77: if (ups == -1){ //cioè vengo dal gameOver
   0158 21r00r00            367 	ld	hl, #_ups
   015B 7E                  368 	ld	a, (hl)
   015C 3C                  369 	inc	a
   015D 20 0A               370 	jr	NZ,00105$
                            371 ;StateSecret.c:78: ups = 3;
   015F 21r00r00            372 	ld	hl, #_ups
   0162 36 03               373 	ld	(hl), #0x03
                            374 ;StateSecret.c:79: coins = 99u;
   0164 21r00r00            375 	ld	hl, #_coins
   0167 36 63               376 	ld	(hl), #0x63
   0169                     377 00105$:
                            378 ;StateSecret.c:81: archer_data->ups =ups;
   0169 21r00r00            379 	ld	hl, #_ups
   016C 7E                  380 	ld	a, (hl)
   016D 02                  381 	ld	(bc), a
                            382 ;StateSecret.c:82: archer_data->hp = hp;
   016E F8 04               383 	ldhl	sp,#(5 - 1)
   0170 4E                  384 	ld	c, (hl)
   0171 23                  385 	inc	hl
   0172 46                  386 	ld	b, (hl)
   0173 03                  387 	inc	bc
   0174 03                  388 	inc	bc
   0175 21r00r00            389 	ld	hl, #_hp
   0178 7E                  390 	ld	a, (hl)
   0179 02                  391 	ld	(bc), a
                            392 ;StateSecret.c:83: archer_data->coins = coins;
   017A F8 04               393 	ldhl	sp,#(5 - 1)
   017C 4E                  394 	ld	c, (hl)
   017D 23                  395 	inc	hl
   017E 46                  396 	ld	b, (hl)
   017F 03                  397 	inc	bc
   0180 21r00r00            398 	ld	hl, #_coins
   0183 7E                  399 	ld	a, (hl)
   0184 02                  400 	ld	(bc), a
                            401 ;StateSecret.c:87: INIT_FONT(font, PRINT_WIN);
   0185 21r00r00            402 	ld	hl, #_font
   0188 E5                  403 	push	hl
   0189 3E CC               404 	ld	a, #0xcc
   018B F5                  405 	push	af
   018C 33                  406 	inc	sp
   018D CDr00r00            407 	call	_ScrollSetTiles
   0190 E8 03               408 	add	sp, #3
   0192 21r00r00            409 	ld	hl, #_font_idx
   0195 36 CC               410 	ld	(hl), #0xcc
   0197 21r00r00            411 	ld	hl, #_print_target
   019A 36 01               412 	ld	(hl), #0x01
                            413 ;StateSecret.c:89: WX_REG = 7;
   019C 3E 07               414 	ld	a, #0x07
   019E E0r00               415 	ldh	(_WX_REG+0),a
                            416 ;StateSecret.c:90: WY_REG = 144 - 32;
   01A0 3E 70               417 	ld	a, #0x70
   01A2 E0r00               418 	ldh	(_WY_REG+0),a
                            419 ;StateSecret.c:91: InitWindow(0, 0, &window);
   01A4 21r00r00            420 	ld	hl, #_window
   01A7 E5                  421 	push	hl
   01A8 AF                  422 	xor	a, a
   01A9 F5                  423 	push	af
   01AA 33                  424 	inc	sp
   01AB AF                  425 	xor	a, a
   01AC F5                  426 	push	af
   01AD 33                  427 	inc	sp
   01AE CDr00r00            428 	call	_InitWindow
   01B1 E8 04               429 	add	sp, #4
                            430 ;StateSecret.c:92: SHOW_WIN;
   01B3 F0r00               431 	ldh	a, (_LCDC_REG+0)
   01B5 F6 20               432 	or	a, #0x20
   01B7 E0r00               433 	ldh	(_LCDC_REG+0),a
                            434 ;StateSecret.c:93: WriteAMULET();
   01B9 CDr00r00            435 	call	_WriteAMULET
                            436 ;StateSecret.c:94: WriteCOINS();
   01BC CDr00r00            437 	call	_WriteCOINS
                            438 ;StateSecret.c:95: WriteHP();
   01BF CDr00r00            439 	call	_WriteHP
                            440 ;StateSecret.c:96: WriteUPS();
   01C2 CDr00r00            441 	call	_WriteUPS
                            442 ;StateSecret.c:97: WriteMap();
   01C5 CDr00r00            443 	call	_WriteMap
                            444 ;StateSecret.c:99: switch(current_level_s){
   01C8 21r02r00            445 	ld	hl, #_current_level_s
   01CB 7E                  446 	ld	a, (hl)
   01CC B7                  447 	or	a, a
   01CD 20 0A               448 	jr	NZ,00109$
                            449 ;StateSecret.c:101: switch(current_map_s){
   01CF 21r03r00            450 	ld	hl, #_current_map_s
   01D2 7E                  451 	ld	a, (hl)
   01D3 B7                  452 	or	a, a
   01D4 20 03               453 	jr	NZ,00109$
                            454 ;StateSecret.c:103: populate_secret0();
   01D6 CDrE4r01            455 	call	_populate_secret0
                            456 ;StateSecret.c:107: }
   01D9                     457 00109$:
                            458 ;StateSecret.c:110: NR52_REG = 0x80; //Enables sound, you should always setup this first
   01D9 3E 80               459 	ld	a, #0x80
   01DB E0r00               460 	ldh	(_NR52_REG+0),a
                            461 ;StateSecret.c:111: NR51_REG = 0xFF; //Enables all channels (left and right)
   01DD 3E FF               462 	ld	a, #0xff
   01DF E0r00               463 	ldh	(_NR51_REG+0),a
                            464 ;StateSecret.c:113: }
   01E1 E8 08               465 	add	sp, #8
   01E3 C9                  466 	ret
                            467 ;StateSecret.c:115: void populate_secret0(){
                            468 ;	---------------------------------
                            469 ; Function populate_secret0
                            470 ; ---------------------------------
   01E4                     471 _populate_secret0::
   01E4 E8 EA               472 	add	sp, #-22
                            473 ;StateSecret.c:118: INT8 invitems_positions_x[] = {6,7,8};
   01E6 F8 00               474 	ldhl	sp,	#0
   01E8 7D                  475 	ld	a, l
   01E9 54                  476 	ld	d, h
   01EA F8 09               477 	ldhl	sp,	#9
   01EC 22                  478 	ld	(hl+), a
   01ED 72                  479 	ld	(hl), d
   01EE 2B                  480 	dec	hl
   01EF 2A                  481 	ld	a, (hl+)
   01F0 66                  482 	ld	h, (hl)
   01F1 6F                  483 	ld	l, a
   01F2 36 06               484 	ld	(hl), #0x06
   01F4 F8 09               485 	ldhl	sp,#(10 - 1)
   01F6 4E                  486 	ld	c, (hl)
   01F7 23                  487 	inc	hl
   01F8 46                  488 	ld	b, (hl)
   01F9 03                  489 	inc	bc
   01FA 3E 07               490 	ld	a, #0x07
   01FC 02                  491 	ld	(bc), a
   01FD 2B                  492 	dec	hl
   01FE 4E                  493 	ld	c, (hl)
   01FF 23                  494 	inc	hl
   0200 46                  495 	ld	b, (hl)
   0201 03                  496 	inc	bc
   0202 03                  497 	inc	bc
   0203 3E 08               498 	ld	a, #0x08
   0205 02                  499 	ld	(bc), a
                            500 ;StateSecret.c:119: INT8 invitems_positions_y[] = {14,14,14};
   0206 F8 03               501 	ldhl	sp,	#3
   0208 7D                  502 	ld	a, l
   0209 54                  503 	ld	d, h
   020A F8 0B               504 	ldhl	sp,	#11
   020C 22                  505 	ld	(hl+), a
   020D 72                  506 	ld	(hl), d
   020E 2B                  507 	dec	hl
   020F 2A                  508 	ld	a, (hl+)
   0210 66                  509 	ld	h, (hl)
   0211 6F                  510 	ld	l, a
   0212 36 0E               511 	ld	(hl), #0x0e
   0214 F8 0B               512 	ldhl	sp,#(12 - 1)
   0216 4E                  513 	ld	c, (hl)
   0217 23                  514 	inc	hl
   0218 46                  515 	ld	b, (hl)
   0219 03                  516 	inc	bc
   021A 3E 0E               517 	ld	a, #0x0e
   021C 02                  518 	ld	(bc), a
   021D 2B                  519 	dec	hl
   021E 4E                  520 	ld	c, (hl)
   021F 23                  521 	inc	hl
   0220 46                  522 	ld	b, (hl)
   0221 03                  523 	inc	bc
   0222 03                  524 	inc	bc
   0223 3E 0E               525 	ld	a, #0x0e
   0225 02                  526 	ld	(bc), a
                            527 ;StateSecret.c:120: INT8 iit [] = {7, 7, 7};
   0226 F8 06               528 	ldhl	sp,	#6
   0228 7D                  529 	ld	a, l
   0229 54                  530 	ld	d, h
   022A F8 0D               531 	ldhl	sp,	#13
   022C 22                  532 	ld	(hl+), a
   022D 72                  533 	ld	(hl), d
   022E 2B                  534 	dec	hl
   022F 2A                  535 	ld	a, (hl+)
   0230 66                  536 	ld	h, (hl)
   0231 6F                  537 	ld	l, a
   0232 36 07               538 	ld	(hl), #0x07
   0234 F8 0D               539 	ldhl	sp,#(14 - 1)
   0236 4E                  540 	ld	c, (hl)
   0237 23                  541 	inc	hl
   0238 46                  542 	ld	b, (hl)
   0239 03                  543 	inc	bc
   023A 3E 07               544 	ld	a, #0x07
   023C 02                  545 	ld	(bc), a
   023D 2B                  546 	dec	hl
   023E 4E                  547 	ld	c, (hl)
   023F 23                  548 	inc	hl
   0240 46                  549 	ld	b, (hl)
   0241 03                  550 	inc	bc
   0242 03                  551 	inc	bc
   0243 3E 07               552 	ld	a, #0x07
   0245 02                  553 	ld	(bc), a
                            554 ;StateSecret.c:121: for(invc=0; invc < invcount; invc++){
   0246 AF                  555 	xor	a, a
   0247 F8 15               556 	ldhl	sp,	#21
   0249 77                  557 	ld	(hl), a
   024A                     558 00103$:
   024A F8 15               559 	ldhl	sp,	#21
   024C 7E                  560 	ld	a, (hl)
   024D EE 80               561 	xor	a, #0x80
   024F D6 83               562 	sub	a, #0x83
   0251 D2rEDr02            563 	jp	NC, 00105$
                            564 ;StateSecret.c:122: struct Sprite* item_sprite = SpriteManagerAdd(SpriteItem, invitems_positions_x[invc]*8, invitems_positions_y[invc]*8);
   0254 7E                  565 	ld	a, (hl)
   0255 F8 0F               566 	ldhl	sp,	#15
   0257 77                  567 	ld	(hl), a
   0258 17                  568 	rla
   0259 9F                  569 	sbc	a, a
   025A 23                  570 	inc	hl
   025B 32                  571 	ld	(hl-), a
   025C 5E                  572 	ld	e, (hl)
   025D 23                  573 	inc	hl
   025E 56                  574 	ld	d, (hl)
   025F F8 0B               575 	ldhl	sp,	#11
   0261 2A                  576 	ld	a, (hl+)
   0262 66                  577 	ld	h, (hl)
   0263 6F                  578 	ld	l, a
   0264 19                  579 	add	hl, de
   0265 4D                  580 	ld	c, l
   0266 44                  581 	ld	b, h
   0267 0A                  582 	ld	a, (bc)
   0268 4F                  583 	ld	c, a
   0269 17                  584 	rla
   026A 9F                  585 	sbc	a, a
   026B 47                  586 	ld	b, a
   026C CB 21               587 	sla	c
   026E CB 10               588 	rl	b
   0270 CB 21               589 	sla	c
   0272 CB 10               590 	rl	b
   0274 CB 21               591 	sla	c
   0276 CB 10               592 	rl	b
   0278 F8 13               593 	ldhl	sp,	#19
   027A 71                  594 	ld	(hl), c
   027B 23                  595 	inc	hl
   027C 70                  596 	ld	(hl), b
   027D F8 0F               597 	ldhl	sp,#(16 - 1)
   027F 5E                  598 	ld	e, (hl)
   0280 23                  599 	inc	hl
   0281 56                  600 	ld	d, (hl)
   0282 F8 09               601 	ldhl	sp,	#9
   0284 2A                  602 	ld	a, (hl+)
   0285 66                  603 	ld	h, (hl)
   0286 6F                  604 	ld	l, a
   0287 19                  605 	add	hl, de
   0288 4D                  606 	ld	c, l
   0289 44                  607 	ld	b, h
   028A 0A                  608 	ld	a, (bc)
   028B 4F                  609 	ld	c, a
   028C 17                  610 	rla
   028D 9F                  611 	sbc	a, a
   028E 47                  612 	ld	b, a
   028F CB 21               613 	sla	c
   0291 CB 10               614 	rl	b
   0293 CB 21               615 	sla	c
   0295 CB 10               616 	rl	b
   0297 CB 21               617 	sla	c
   0299 CB 10               618 	rl	b
   029B F8 13               619 	ldhl	sp,	#19
   029D 2A                  620 	ld	a, (hl+)
   029E 66                  621 	ld	h, (hl)
   029F 6F                  622 	ld	l, a
   02A0 E5                  623 	push	hl
   02A1 C5                  624 	push	bc
   02A2 3E 03               625 	ld	a, #0x03
   02A4 F5                  626 	push	af
   02A5 33                  627 	inc	sp
   02A6 CDr00r00            628 	call	_SpriteManagerAdd
   02A9 E8 05               629 	add	sp, #5
   02AB 4B                  630 	ld	c, e
   02AC 42                  631 	ld	b, d
                            632 ;StateSecret.c:123: struct ItemInfo* dataitem = (struct ItemInfo*)item_sprite->custom_data;
   02AD 21 19 00            633 	ld	hl, #0x0019
   02B0 09                  634 	add	hl, bc
   02B1 4D                  635 	ld	c, l
   02B2 7C                  636 	ld	a, h
   02B3 47                  637 	ld	b, a
                            638 ;StateSecret.c:124: dataitem->type = iit[invc];
   02B4 21 01 00            639 	ld	hl, #0x0001
   02B7 09                  640 	add	hl, bc
   02B8 7D                  641 	ld	a, l
   02B9 54                  642 	ld	d, h
   02BA F8 11               643 	ldhl	sp,	#17
   02BC 22                  644 	ld	(hl+), a
   02BD 72                  645 	ld	(hl), d
   02BE 2B                  646 	dec	hl
   02BF 2B                  647 	dec	hl
   02C0 2B                  648 	dec	hl
   02C1 5E                  649 	ld	e, (hl)
   02C2 23                  650 	inc	hl
   02C3 56                  651 	ld	d, (hl)
   02C4 F8 0D               652 	ldhl	sp,	#13
   02C6 2A                  653 	ld	a, (hl+)
   02C7 66                  654 	ld	h, (hl)
   02C8 6F                  655 	ld	l, a
   02C9 19                  656 	add	hl, de
   02CA 7D                  657 	ld	a, l
   02CB 54                  658 	ld	d, h
   02CC F8 13               659 	ldhl	sp,	#19
   02CE 22                  660 	ld	(hl+), a
   02CF 72                  661 	ld	(hl), d
   02D0 2B                  662 	dec	hl
   02D1 5E                  663 	ld	e, (hl)
   02D2 23                  664 	inc	hl
   02D3 56                  665 	ld	d, (hl)
   02D4 1A                  666 	ld	a,(de)
   02D5 F8 11               667 	ldhl	sp,	#17
   02D7 F5                  668 	push	af
   02D8 2A                  669 	ld	a, (hl+)
   02D9 66                  670 	ld	h, (hl)
   02DA 6F                  671 	ld	l, a
   02DB F1                  672 	pop	af
   02DC 77                  673 	ld	(hl), a
                            674 ;StateSecret.c:125: dataitem->collided = 1u;
   02DD 3E 01               675 	ld	a, #0x01
   02DF 02                  676 	ld	(bc), a
                            677 ;StateSecret.c:126: dataitem->setup = 1u;
   02E0 03                  678 	inc	bc
   02E1 03                  679 	inc	bc
   02E2 03                  680 	inc	bc
   02E3 03                  681 	inc	bc
   02E4 3E 01               682 	ld	a, #0x01
   02E6 02                  683 	ld	(bc), a
                            684 ;StateSecret.c:121: for(invc=0; invc < invcount; invc++){
   02E7 F8 15               685 	ldhl	sp,	#21
   02E9 34                  686 	inc	(hl)
   02EA C3r4Ar02            687 	jp	00103$
   02ED                     688 00105$:
                            689 ;StateSecret.c:128: }
   02ED E8 16               690 	add	sp, #22
   02EF C9                  691 	ret
                            692 ;StateSecret.c:131: void Update_StateSecret() {
                            693 ;	---------------------------------
                            694 ; Function Update_StateSecret
                            695 ; ---------------------------------
   02F0                     696 _Update_StateSecret::
   02F0 E8 FE               697 	add	sp, #-2
                            698 ;StateSecret.c:133: struct ArcherInfo* archer_data = (struct ArcherInfo*)scroll_target->custom_data;
   02F2 21r00r00            699 	ld	hl, #_scroll_target
   02F5 46                  700 	ld	b, (hl)
   02F6 23                  701 	inc	hl
   02F7 4E                  702 	ld	c, (hl)
   02F8 78                  703 	ld	a, b
   02F9 C6 19               704 	add	a, #0x19
   02FB 47                  705 	ld	b, a
   02FC 30 01               706 	jr	NC,00151$
   02FE 0C                  707 	inc	c
   02FF                     708 00151$:
   02FF F8 00               709 	ldhl	sp,	#0
   0301 70                  710 	ld	(hl), b
   0302 23                  711 	inc	hl
   0303 71                  712 	ld	(hl), c
                            713 ;StateSecret.c:135: if (amulet != archer_data->amulet){
   0304 D1                  714 	pop	de
   0305 D5                  715 	push	de
   0306 1A                  716 	ld	a,(de)
   0307 4F                  717 	ld	c, a
   0308 21r00r00            718 	ld	hl, #_amulet
   030B 7E                  719 	ld	a, (hl)
   030C 91                  720 	sub	a, c
   030D 28 07               721 	jr	Z,00102$
                            722 ;StateSecret.c:136: amulet = archer_data->amulet;
   030F 21r00r00            723 	ld	hl, #_amulet
   0312 71                  724 	ld	(hl), c
                            725 ;StateSecret.c:137: WriteAMULET();		
   0313 CDr00r00            726 	call	_WriteAMULET
   0316                     727 00102$:
                            728 ;StateSecret.c:139: if (coins != archer_data->coins){
   0316 C1                  729 	pop	bc
   0317 C5                  730 	push	bc
   0318 03                  731 	inc	bc
   0319 0A                  732 	ld	a, (bc)
   031A 4F                  733 	ld	c, a
   031B 21r00r00            734 	ld	hl, #_coins
   031E 7E                  735 	ld	a, (hl)
   031F 91                  736 	sub	a, c
   0320 28 07               737 	jr	Z,00104$
                            738 ;StateSecret.c:140: coins = archer_data->coins;
   0322 21r00r00            739 	ld	hl, #_coins
   0325 71                  740 	ld	(hl), c
                            741 ;StateSecret.c:141: WriteCOINS();
   0326 CDr00r00            742 	call	_WriteCOINS
   0329                     743 00104$:
                            744 ;StateSecret.c:143: if (hp != archer_data->hp){
   0329 C1                  745 	pop	bc
   032A C5                  746 	push	bc
   032B 03                  747 	inc	bc
   032C 03                  748 	inc	bc
   032D 0A                  749 	ld	a, (bc)
   032E 4F                  750 	ld	c, a
   032F 21r00r00            751 	ld	hl, #_hp
   0332 7E                  752 	ld	a, (hl)
   0333 91                  753 	sub	a, c
   0334 28 07               754 	jr	Z,00106$
                            755 ;StateSecret.c:144: hp = archer_data->hp;
   0336 21r00r00            756 	ld	hl, #_hp
   0339 71                  757 	ld	(hl), c
                            758 ;StateSecret.c:145: WriteHP();
   033A CDr00r00            759 	call	_WriteHP
   033D                     760 00106$:
                            761 ;StateSecret.c:147: if (ups != archer_data->ups){
   033D C1                  762 	pop	bc
   033E C5                  763 	push	bc
   033F 03                  764 	inc	bc
   0340 03                  765 	inc	bc
   0341 03                  766 	inc	bc
   0342 0A                  767 	ld	a, (bc)
   0343 4F                  768 	ld	c, a
   0344 21r00r00            769 	ld	hl, #_ups
   0347 7E                  770 	ld	a, (hl)
   0348 91                  771 	sub	a, c
   0349 28 07               772 	jr	Z,00108$
                            773 ;StateSecret.c:148: ups = archer_data->ups;
   034B 21r00r00            774 	ld	hl, #_ups
   034E 71                  775 	ld	(hl), c
                            776 ;StateSecret.c:149: WriteUPS();
   034F CDr00r00            777 	call	_WriteUPS
   0352                     778 00108$:
                            779 ;StateSecret.c:153: if(load_next_s){
   0352 21r00r00            780 	ld	hl, #_load_next_s
   0355 7E                  781 	ld	a, (hl)
   0356 B7                  782 	or	a, a
   0357 28 30               783 	jr	Z,00114$
                            784 ;StateSecret.c:154: switch(load_next_s){
   0359 7E                  785 	ld	a, (hl)
   035A 3C                  786 	inc	a
   035B 28 25               787 	jr	Z,00110$
   035D 21r00r00            788 	ld	hl, #_load_next_s
   0360 7E                  789 	ld	a, (hl)
   0361 3D                  790 	dec	a
   0362 20 25               791 	jr	NZ,00114$
                            792 ;StateSecret.c:156: current_map_s += load_next_s;
   0364 21r03r00            793 	ld	hl, #_current_map_s
   0367 7E                  794 	ld	a, (hl)
   0368 21r00r00            795 	ld	hl, #_load_next_s
   036B 86                  796 	add	a, (hl)
   036C 21r03r00            797 	ld	hl, #_current_map_s
   036F 77                  798 	ld	(hl), a
                            799 ;StateSecret.c:157: WriteMap();
   0370 CDr00r00            800 	call	_WriteMap
                            801 ;StateSecret.c:158: load_next_s = 0;
   0373 21r00r00            802 	ld	hl, #_load_next_s
   0376 36 00               803 	ld	(hl), #0x00
                            804 ;StateSecret.c:159: SetState(StateSecret);
   0378 3E 01               805 	ld	a, #0x01
   037A F5                  806 	push	af
   037B 33                  807 	inc	sp
   037C CDr00r00            808 	call	_SetState
   037F 33                  809 	inc	sp
                            810 ;StateSecret.c:160: break;
   0380 18 07               811 	jr	00114$
                            812 ;StateSecret.c:161: case -1: //torno dalla secret a game
   0382                     813 00110$:
                            814 ;StateSecret.c:163: SetState(StateGame);
   0382 AF                  815 	xor	a, a
   0383 F5                  816 	push	af
   0384 33                  817 	inc	sp
   0385 CDr00r00            818 	call	_SetState
   0388 33                  819 	inc	sp
                            820 ;StateSecret.c:165: }
   0389                     821 00114$:
                            822 ;StateSecret.c:168: }
   0389 E8 02               823 	add	sp, #2
   038B C9                  824 	ret
                            825 	.area _CODE_2
                            826 	.area _CABS (ABS)
