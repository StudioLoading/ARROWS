                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ANSI-C Compiler
                              3 ; Version 4.0.0 #11528 (MINGW32)
                              4 ;--------------------------------------------------------
                              5 	.module StateSecret
                              6 	.optsdcc -mgbz80
                              7 	
                              8 ;--------------------------------------------------------
                              9 ; Public variables in this module
                             10 ;--------------------------------------------------------
                             11 	.globl _Update_StateSecret
                             12 	.globl _Start_StateSecret
                             13 	.globl _WriteTOOL
                             14 	.globl _WriteMap
                             15 	.globl _WriteUPS
                             16 	.globl _WriteHP
                             17 	.globl _WriteCOINS
                             18 	.globl _WriteAMULET
                             19 	.globl _SpriteManagerAdd
                             20 	.globl _SpriteManagerLoad
                             21 	.globl _ScrollFindTile
                             22 	.globl _GetMapSize
                             23 	.globl _InitWindow
                             24 	.globl _InitScroll
                             25 	.globl _ScrollSetTiles
                             26 	.globl _SetState
                             27 	.globl _empty
                             28 	.globl _bank_StateSecret
                             29 	.globl _secrets
                             30 	.globl _secret_1
                             31 	.globl _current_map_s
                             32 	.globl _current_level_s
                             33 	.globl _attack_wait
                             34 	.globl _damage_cooldown
                             35 	.globl _ShowSWindow
                             36 	.globl _populate_secret0
                             37 ;--------------------------------------------------------
                             38 ; special function registers
                             39 ;--------------------------------------------------------
                             40 ;--------------------------------------------------------
                             41 ; ram data
                             42 ;--------------------------------------------------------
                             43 	.area _DATA
   0000                      44 _damage_cooldown::
   0000                      45 	.ds 1
   0001                      46 _attack_wait::
   0001                      47 	.ds 1
   0002                      48 _current_level_s::
   0002                      49 	.ds 1
   0003                      50 _current_map_s::
   0003                      51 	.ds 1
   0004                      52 _secret_1::
   0004                      53 	.ds 2
   0006                      54 _secrets::
   0006                      55 	.ds 2
                             56 ;--------------------------------------------------------
                             57 ; CODE rom data
                             58 ;--------------------------------------------------------
                             59 	.area _CODE
   0000                      60 _bank_StateSecret:
   0000 02                   61 	.db #0x02	; 2
                             62 ;--------------------------------------------------------
                             63 ; absolute external ram data
                             64 ;--------------------------------------------------------
                             65 	.area _DABS (ABS)
                             66 ;--------------------------------------------------------
                             67 ; global & static initialisations
                             68 ;--------------------------------------------------------
                             69 	.area _HOME
                             70 	.area _GSINIT
                             71 	.area _GSFINAL
                             72 	.area _GSINIT
                             73 ;custom_datas.h:54: UINT8 damage_cooldown = 30u;
   0000 21r00r00             74 	ld	hl, #_damage_cooldown
   0003 36 1E                75 	ld	(hl), #0x1e
                             76 ;custom_datas.h:55: UINT8 attack_wait = 32u;
   0005 21r01r00             77 	ld	hl, #_attack_wait
   0008 36 20                78 	ld	(hl), #0x20
                             79 ;StateSecret.c:44: UINT8 current_level_s = 0;
   000A 21r02r00             80 	ld	hl, #_current_level_s
   000D 36 00                81 	ld	(hl), #0x00
                             82 ;StateSecret.c:45: UINT8 current_map_s = 0;
   000F 21r03r00             83 	ld	hl, #_current_map_s
   0012 36 00                84 	ld	(hl), #0x00
                             85 ;StateSecret.c:46: const struct MapInfo* secret_1[] = {
   0014 21r04r00             86 	ld	hl, #_secret_1
   0017 36r00                87 	ld	(hl), #<(_mapsecret0)
   0019 23                   88 	inc	hl
   001A 36s00                89 	ld	(hl), #>(_mapsecret0)
                             90 ;StateSecret.c:49: const struct MapInfo** secrets[] = {secret_1};
   001C 21r06r00             91 	ld	hl, #_secrets
   001F 36r04                92 	ld	(hl), #<(_secret_1)
   0021 23                   93 	inc	hl
   0022 36s00                94 	ld	(hl), #>(_secret_1)
                             95 ;--------------------------------------------------------
                             96 ; Home
                             97 ;--------------------------------------------------------
                             98 	.area _HOME
                             99 ;C:/GB/ZGB/common/include/Banks/SetBankCommon.h:4: void empty(void) __nonbanked {}
                            100 ;	---------------------------------
                            101 ; Function empty
                            102 ; ---------------------------------
   0000                     103 _empty::
   0000 C9                  104 	ret
                            105 	.area _HOME
                            106 ;--------------------------------------------------------
                            107 ; code
                            108 ;--------------------------------------------------------
                            109 	.area _CODE_2
                            110 ;StateSecret.c:62: void Start_StateSecret() {
                            111 ;	---------------------------------
                            112 ; Function Start_StateSecret
                            113 ; ---------------------------------
   0000                     114 _Start_StateSecret::
   0000 E8 F8               115 	add	sp, #-8
                            116 ;StateSecret.c:67: SPRITES_8x16;
   0002 F0r00               117 	ldh	a, (_LCDC_REG+0)
   0004 F6 04               118 	or	a, #0x04
   0006 E0r00               119 	ldh	(_LCDC_REG+0),a
                            120 ;StateSecret.c:68: SpriteManagerLoad(SpritePlayer);
   0008 AF                  121 	xor	a, a
   0009 F5                  122 	push	af
   000A 33                  123 	inc	sp
   000B CDr00r00            124 	call	_SpriteManagerLoad
   000E 33                  125 	inc	sp
                            126 ;StateSecret.c:69: SpriteManagerLoad(SpriteArrow);
   000F 3E 01               127 	ld	a, #0x01
   0011 F5                  128 	push	af
   0012 33                  129 	inc	sp
   0013 CDr00r00            130 	call	_SpriteManagerLoad
   0016 33                  131 	inc	sp
                            132 ;StateSecret.c:70: SpriteManagerLoad(SpriteItem);
   0017 3E 03               133 	ld	a, #0x03
   0019 F5                  134 	push	af
   001A 33                  135 	inc	sp
   001B CDr00r00            136 	call	_SpriteManagerLoad
   001E 33                  137 	inc	sp
                            138 ;StateSecret.c:71: SHOW_SPRITES;
   001F F0r00               139 	ldh	a, (_LCDC_REG+0)
   0021 F6 02               140 	or	a, #0x02
   0023 E0r00               141 	ldh	(_LCDC_REG+0),a
                            142 ;StateSecret.c:73: scroll_bottom_movement_limit = 60;//customizzo altezza archer sul display
   0025 21r00r00            143 	ld	hl, #_scroll_bottom_movement_limit
   0028 36 3C               144 	ld	(hl), #0x3c
                            145 ;StateSecret.c:74: const struct MapInfo** level_maps_s = secrets[current_level_s];
   002A 21r02r00            146 	ld	hl, #_current_level_s
   002D 4E                  147 	ld	c, (hl)
   002E 06 00               148 	ld	b, #0x00
   0030 CB 21               149 	sla	c
   0032 CB 10               150 	rl	b
   0034 21r06r00            151 	ld	hl, #_secrets
   0037 09                  152 	add	hl, bc
   0038 4D                  153 	ld	c, l
   0039 44                  154 	ld	b, h
   003A 59                  155 	ld	e, c
   003B 50                  156 	ld	d, b
   003C 1A                  157 	ld	a,(de)
   003D F8 00               158 	ldhl	sp,	#0
   003F 22                  159 	ld	(hl+), a
   0040 13                  160 	inc	de
   0041 1A                  161 	ld	a, (de)
   0042 77                  162 	ld	(hl), a
                            163 ;StateSecret.c:76: GetMapSize(level_maps_s[current_map_s], &map_w, &map_h);
   0043 F8 03               164 	ldhl	sp,	#3
   0045 4D                  165 	ld	c, l
   0046 44                  166 	ld	b, h
   0047 F8 04               167 	ldhl	sp,	#4
   0049 71                  168 	ld	(hl), c
   004A 23                  169 	inc	hl
   004B 70                  170 	ld	(hl), b
   004C F8 02               171 	ldhl	sp,	#2
   004E 4D                  172 	ld	c, l
   004F 44                  173 	ld	b, h
   0050 F8 06               174 	ldhl	sp,	#6
   0052 71                  175 	ld	(hl), c
   0053 23                  176 	inc	hl
   0054 70                  177 	ld	(hl), b
   0055 21r03r00            178 	ld	hl, #_current_map_s
   0058 4E                  179 	ld	c, (hl)
   0059 06 00               180 	ld	b, #0x00
   005B CB 21               181 	sla	c
   005D CB 10               182 	rl	b
   005F E1                  183 	pop	hl
   0060 E5                  184 	push	hl
   0061 09                  185 	add	hl, bc
   0062 4D                  186 	ld	c,l
   0063 44                  187 	ld	b,h
   0064 4E                  188 	ld	c, (hl)
   0065 23                  189 	inc	hl
   0066 46                  190 	ld	b, (hl)
   0067 F8 04               191 	ldhl	sp,	#4
   0069 2A                  192 	ld	a, (hl+)
   006A 66                  193 	ld	h, (hl)
   006B 6F                  194 	ld	l, a
   006C E5                  195 	push	hl
   006D F8 08               196 	ldhl	sp,	#8
   006F 2A                  197 	ld	a, (hl+)
   0070 66                  198 	ld	h, (hl)
   0071 6F                  199 	ld	l, a
   0072 E5                  200 	push	hl
   0073 C5                  201 	push	bc
   0074 CDr00r00            202 	call	_GetMapSize
   0077 E8 06               203 	add	sp, #6
                            204 ;StateSecret.c:77: ScrollFindTile(level_maps_s[current_map_s], 9, 0, 0, map_w, map_h, &drop_player_x, &drop_player_y);
   0079 21r03r00            205 	ld	hl, #_current_map_s
   007C 4E                  206 	ld	c, (hl)
   007D 06 00               207 	ld	b, #0x00
   007F CB 21               208 	sla	c
   0081 CB 10               209 	rl	b
   0083 E1                  210 	pop	hl
   0084 E5                  211 	push	hl
   0085 09                  212 	add	hl, bc
   0086 4D                  213 	ld	c,l
   0087 44                  214 	ld	b,h
   0088 4E                  215 	ld	c, (hl)
   0089 23                  216 	inc	hl
   008A 46                  217 	ld	b, (hl)
   008B 21r00r00            218 	ld	hl, #_drop_player_y
   008E E5                  219 	push	hl
   008F 21r00r00            220 	ld	hl, #_drop_player_x
   0092 E5                  221 	push	hl
   0093 F8 07               222 	ldhl	sp,	#7
   0095 7E                  223 	ld	a, (hl)
   0096 F5                  224 	push	af
   0097 33                  225 	inc	sp
   0098 2B                  226 	dec	hl
   0099 7E                  227 	ld	a, (hl)
   009A F5                  228 	push	af
   009B 33                  229 	inc	sp
   009C AF                  230 	xor	a, a
   009D F5                  231 	push	af
   009E 33                  232 	inc	sp
   009F AF                  233 	xor	a, a
   00A0 F5                  234 	push	af
   00A1 33                  235 	inc	sp
   00A2 3E 09               236 	ld	a, #0x09
   00A4 F5                  237 	push	af
   00A5 33                  238 	inc	sp
   00A6 C5                  239 	push	bc
   00A7 CDr00r00            240 	call	_ScrollFindTile
   00AA E8 0B               241 	add	sp, #11
                            242 ;StateSecret.c:78: scroll_target = SpriteManagerAdd(SpritePlayer, drop_player_x*8, drop_player_y*8);
   00AC 21r00r00            243 	ld	hl, #_drop_player_y
   00AF 7E                  244 	ld	a, (hl)
   00B0 5F                  245 	ld	e, a
   00B1 17                  246 	rla
   00B2 9F                  247 	sbc	a, a
   00B3 57                  248 	ld	d, a
   00B4 CB 23               249 	sla	e
   00B6 CB 12               250 	rl	d
   00B8 CB 23               251 	sla	e
   00BA CB 12               252 	rl	d
   00BC CB 23               253 	sla	e
   00BE CB 12               254 	rl	d
   00C0 21r00r00            255 	ld	hl, #_drop_player_x
   00C3 7E                  256 	ld	a, (hl)
   00C4 4F                  257 	ld	c, a
   00C5 17                  258 	rla
   00C6 9F                  259 	sbc	a, a
   00C7 47                  260 	ld	b, a
   00C8 CB 21               261 	sla	c
   00CA CB 10               262 	rl	b
   00CC CB 21               263 	sla	c
   00CE CB 10               264 	rl	b
   00D0 CB 21               265 	sla	c
   00D2 CB 10               266 	rl	b
   00D4 D5                  267 	push	de
   00D5 C5                  268 	push	bc
   00D6 AF                  269 	xor	a, a
   00D7 F5                  270 	push	af
   00D8 33                  271 	inc	sp
   00D9 CDr00r00            272 	call	_SpriteManagerAdd
   00DC E8 05               273 	add	sp, #5
   00DE 21r00r00            274 	ld	hl, #_scroll_target
   00E1 73                  275 	ld	(hl), e
   00E2 23                  276 	inc	hl
   00E3 72                  277 	ld	(hl), d
                            278 ;StateSecret.c:79: InitScroll(level_maps_s[current_map_s], collision_tiles, 0);
   00E4 21r03r00            279 	ld	hl, #_current_map_s
   00E7 4E                  280 	ld	c, (hl)
   00E8 06 00               281 	ld	b, #0x00
   00EA CB 21               282 	sla	c
   00EC CB 10               283 	rl	b
   00EE E1                  284 	pop	hl
   00EF E5                  285 	push	hl
   00F0 09                  286 	add	hl, bc
   00F1 4D                  287 	ld	c,l
   00F2 44                  288 	ld	b,h
   00F3 4E                  289 	ld	c, (hl)
   00F4 23                  290 	inc	hl
   00F5 46                  291 	ld	b, (hl)
   00F6 21 00 00            292 	ld	hl, #0x0000
   00F9 E5                  293 	push	hl
   00FA 21r00r00            294 	ld	hl, #_collision_tiles
   00FD E5                  295 	push	hl
   00FE C5                  296 	push	bc
   00FF CDr00r00            297 	call	_InitScroll
   0102 E8 06               298 	add	sp, #6
                            299 ;StateSecret.c:80: SHOW_BKG;
   0104 F0r00               300 	ldh	a, (_LCDC_REG+0)
   0106 F6 01               301 	or	a, #0x01
   0108 E0r00               302 	ldh	(_LCDC_REG+0),a
                            303 ;StateSecret.c:83: struct ArcherInfo* archer_data_s = (struct ArcherInfo*)scroll_target->custom_data;
   010A 21r00r00            304 	ld	hl, #_scroll_target
   010D 46                  305 	ld	b, (hl)
   010E 23                  306 	inc	hl
   010F 4E                  307 	ld	c, (hl)
   0110 78                  308 	ld	a, b
   0111 C6 19               309 	add	a, #0x19
   0113 47                  310 	ld	b, a
   0114 30 01               311 	jr	NC,00143$
   0116 0C                  312 	inc	c
   0117                     313 00143$:
   0117 F8 04               314 	ldhl	sp,	#4
   0119 70                  315 	ld	(hl), b
   011A 23                  316 	inc	hl
   011B 71                  317 	ld	(hl), c
                            318 ;StateSecret.c:84: if (archer_data_s->ups > 0 & archer_data_s->ups != ups){
   011C 2B                  319 	dec	hl
   011D 4E                  320 	ld	c, (hl)
   011E 23                  321 	inc	hl
   011F 46                  322 	ld	b, (hl)
   0120 03                  323 	inc	bc
   0121 03                  324 	inc	bc
   0122 03                  325 	inc	bc
   0123 0A                  326 	ld	a, (bc)
   0124 23                  327 	inc	hl
   0125 77                  328 	ld	(hl), a
   0126 7E                  329 	ld	a, (hl)
   0127 5F                  330 	ld	e, a
   0128 3E 00               331 	ld	a, #0x00
   012A 57                  332 	ld	d, a
   012B AF                  333 	xor	a, a
   012C 96                  334 	sub	a, (hl)
   012D CB 7B               335 	bit	7, e
   012F 28 07               336 	jr	Z,00144$
   0131 CB 7A               337 	bit	7, d
   0133 20 08               338 	jr	NZ,00145$
   0135 BF                  339 	cp	a, a
   0136 18 05               340 	jr	00145$
   0138                     341 00144$:
   0138 CB 7A               342 	bit	7, d
   013A 28 01               343 	jr	Z,00145$
   013C 37                  344 	scf
   013D                     345 00145$:
   013D 3E 00               346 	ld	a, #0x00
   013F 17                  347 	rla
   0140 F8 07               348 	ldhl	sp,	#7
   0142 77                  349 	ld	(hl), a
   0143 21r00r00            350 	ld	hl, #_ups
   0146 7E                  351 	ld	a, (hl)
   0147 F8 06               352 	ldhl	sp,	#6
   0149 96                  353 	sub	a, (hl)
   014A 3E 01               354 	ld	a, #0x01
   014C 28 01               355 	jr	Z,00147$
   014E AF                  356 	xor	a, a
   014F                     357 00147$:
   014F EE 01               358 	xor	a, #0x01
   0151 F8 07               359 	ldhl	sp,	#7
   0153 5E                  360 	ld	e, (hl)
   0154 A3                  361 	and	a,e
   0155 28 08               362 	jr	Z,00102$
                            363 ;StateSecret.c:85: ups = archer_data_s->ups;
   0157 E5                  364 	push	hl
   0158 2B                  365 	dec	hl
   0159 7E                  366 	ld	a, (hl)
   015A 21r00r00            367 	ld	hl, #_ups
   015D 77                  368 	ld	(hl), a
   015E E1                  369 	pop	hl
   015F                     370 00102$:
                            371 ;StateSecret.c:87: if (ups == -1){ //cioè vengo dal gameOver
   015F 21r00r00            372 	ld	hl, #_ups
   0162 7E                  373 	ld	a, (hl)
   0163 3C                  374 	inc	a
   0164 20 0A               375 	jr	NZ,00104$
                            376 ;StateSecret.c:88: ups = 3;
   0166 21r00r00            377 	ld	hl, #_ups
   0169 36 03               378 	ld	(hl), #0x03
                            379 ;StateSecret.c:89: coins = 99u;
   016B 21r00r00            380 	ld	hl, #_coins
   016E 36 63               381 	ld	(hl), #0x63
   0170                     382 00104$:
                            383 ;StateSecret.c:91: archer_data_s->ups =ups;
   0170 21r00r00            384 	ld	hl, #_ups
   0173 7E                  385 	ld	a, (hl)
   0174 02                  386 	ld	(bc), a
                            387 ;StateSecret.c:92: archer_data_s->hp = hp;
   0175 F8 04               388 	ldhl	sp,#(5 - 1)
   0177 4E                  389 	ld	c, (hl)
   0178 23                  390 	inc	hl
   0179 46                  391 	ld	b, (hl)
   017A 03                  392 	inc	bc
   017B 03                  393 	inc	bc
   017C 21r00r00            394 	ld	hl, #_hp
   017F 7E                  395 	ld	a, (hl)
   0180 02                  396 	ld	(bc), a
                            397 ;StateSecret.c:93: archer_data_s->coins = coins;
   0181 F8 04               398 	ldhl	sp,#(5 - 1)
   0183 4E                  399 	ld	c, (hl)
   0184 23                  400 	inc	hl
   0185 46                  401 	ld	b, (hl)
   0186 03                  402 	inc	bc
   0187 21r00r00            403 	ld	hl, #_coins
   018A 7E                  404 	ld	a, (hl)
   018B 02                  405 	ld	(bc), a
                            406 ;StateSecret.c:96: INIT_FONT(font, PRINT_WIN);
   018C 21r00r00            407 	ld	hl, #_font
   018F E5                  408 	push	hl
   0190 3E CA               409 	ld	a, #0xca
   0192 F5                  410 	push	af
   0193 33                  411 	inc	sp
   0194 CDr00r00            412 	call	_ScrollSetTiles
   0197 E8 03               413 	add	sp, #3
   0199 21r00r00            414 	ld	hl, #_font_idx
   019C 36 CA               415 	ld	(hl), #0xca
   019E 21r00r00            416 	ld	hl, #_print_target
   01A1 36 01               417 	ld	(hl), #0x01
                            418 ;StateSecret.c:98: ShowSWindow();
   01A3 CDrC2r01            419 	call	_ShowSWindow
                            420 ;StateSecret.c:101: switch(current_level_s){
   01A6 21r02r00            421 	ld	hl, #_current_level_s
   01A9 7E                  422 	ld	a, (hl)
   01AA B7                  423 	or	a, a
   01AB 20 0A               424 	jr	NZ,00108$
                            425 ;StateSecret.c:103: switch(current_map_s){
   01AD 21r03r00            426 	ld	hl, #_current_map_s
   01B0 7E                  427 	ld	a, (hl)
   01B1 B7                  428 	or	a, a
   01B2 20 03               429 	jr	NZ,00108$
                            430 ;StateSecret.c:105: populate_secret0();
   01B4 CDrF4r01            431 	call	_populate_secret0
                            432 ;StateSecret.c:109: }
   01B7                     433 00108$:
                            434 ;StateSecret.c:112: NR52_REG = 0x80; //Enables sound, you should always setup this first
   01B7 3E 80               435 	ld	a, #0x80
   01B9 E0r00               436 	ldh	(_NR52_REG+0),a
                            437 ;StateSecret.c:113: NR51_REG = 0xFF; //Enables all channels (left and right)
   01BB 3E FF               438 	ld	a, #0xff
   01BD E0r00               439 	ldh	(_NR51_REG+0),a
                            440 ;StateSecret.c:115: }
   01BF E8 08               441 	add	sp, #8
   01C1 C9                  442 	ret
                            443 ;StateSecret.c:118: void ShowSWindow(){
                            444 ;	---------------------------------
                            445 ; Function ShowSWindow
                            446 ; ---------------------------------
   01C2                     447 _ShowSWindow::
                            448 ;StateSecret.c:119: HIDE_WIN;
   01C2 F0r00               449 	ldh	a, (_LCDC_REG+0)
   01C4 E6 DF               450 	and	a, #0xdf
   01C6 E0r00               451 	ldh	(_LCDC_REG+0),a
                            452 ;StateSecret.c:121: WX_REG = 7;
   01C8 3E 07               453 	ld	a, #0x07
   01CA E0r00               454 	ldh	(_WX_REG+0),a
                            455 ;StateSecret.c:122: WY_REG = 144 - 32;
   01CC 3E 70               456 	ld	a, #0x70
   01CE E0r00               457 	ldh	(_WY_REG+0),a
                            458 ;StateSecret.c:123: InitWindow(0, 0, &window);
   01D0 21r00r00            459 	ld	hl, #_window
   01D3 E5                  460 	push	hl
   01D4 AF                  461 	xor	a, a
   01D5 F5                  462 	push	af
   01D6 33                  463 	inc	sp
   01D7 AF                  464 	xor	a, a
   01D8 F5                  465 	push	af
   01D9 33                  466 	inc	sp
   01DA CDr00r00            467 	call	_InitWindow
   01DD E8 04               468 	add	sp, #4
                            469 ;StateSecret.c:124: SHOW_WIN;
   01DF F0r00               470 	ldh	a, (_LCDC_REG+0)
   01E1 F6 20               471 	or	a, #0x20
   01E3 E0r00               472 	ldh	(_LCDC_REG+0),a
                            473 ;StateSecret.c:126: WriteAMULET();
   01E5 CDr00r00            474 	call	_WriteAMULET
                            475 ;StateSecret.c:127: WriteCOINS();
   01E8 CDr00r00            476 	call	_WriteCOINS
                            477 ;StateSecret.c:128: WriteHP();
   01EB CDr00r00            478 	call	_WriteHP
                            479 ;StateSecret.c:129: WriteUPS();
   01EE CDr00r00            480 	call	_WriteUPS
                            481 ;StateSecret.c:130: WriteMap();
                            482 ;StateSecret.c:132: }
   01F1 C3r00r00            483 	jp	_WriteMap
                            484 ;StateSecret.c:134: void populate_secret0(){
                            485 ;	---------------------------------
                            486 ; Function populate_secret0
                            487 ; ---------------------------------
   01F4                     488 _populate_secret0::
   01F4 E8 EA               489 	add	sp, #-22
                            490 ;StateSecret.c:137: INT8 invitems_positions_x[] = {6,7,8};
   01F6 F8 00               491 	ldhl	sp,	#0
   01F8 7D                  492 	ld	a, l
   01F9 54                  493 	ld	d, h
   01FA F8 09               494 	ldhl	sp,	#9
   01FC 22                  495 	ld	(hl+), a
   01FD 72                  496 	ld	(hl), d
   01FE 2B                  497 	dec	hl
   01FF 2A                  498 	ld	a, (hl+)
   0200 66                  499 	ld	h, (hl)
   0201 6F                  500 	ld	l, a
   0202 36 06               501 	ld	(hl), #0x06
   0204 F8 09               502 	ldhl	sp,#(10 - 1)
   0206 4E                  503 	ld	c, (hl)
   0207 23                  504 	inc	hl
   0208 46                  505 	ld	b, (hl)
   0209 03                  506 	inc	bc
   020A 3E 07               507 	ld	a, #0x07
   020C 02                  508 	ld	(bc), a
   020D 2B                  509 	dec	hl
   020E 4E                  510 	ld	c, (hl)
   020F 23                  511 	inc	hl
   0210 46                  512 	ld	b, (hl)
   0211 03                  513 	inc	bc
   0212 03                  514 	inc	bc
   0213 3E 08               515 	ld	a, #0x08
   0215 02                  516 	ld	(bc), a
                            517 ;StateSecret.c:138: INT8 invitems_positions_y[] = {14,14,14};
   0216 F8 03               518 	ldhl	sp,	#3
   0218 7D                  519 	ld	a, l
   0219 54                  520 	ld	d, h
   021A F8 0B               521 	ldhl	sp,	#11
   021C 22                  522 	ld	(hl+), a
   021D 72                  523 	ld	(hl), d
   021E 2B                  524 	dec	hl
   021F 2A                  525 	ld	a, (hl+)
   0220 66                  526 	ld	h, (hl)
   0221 6F                  527 	ld	l, a
   0222 36 0E               528 	ld	(hl), #0x0e
   0224 F8 0B               529 	ldhl	sp,#(12 - 1)
   0226 4E                  530 	ld	c, (hl)
   0227 23                  531 	inc	hl
   0228 46                  532 	ld	b, (hl)
   0229 03                  533 	inc	bc
   022A 3E 0E               534 	ld	a, #0x0e
   022C 02                  535 	ld	(bc), a
   022D 2B                  536 	dec	hl
   022E 4E                  537 	ld	c, (hl)
   022F 23                  538 	inc	hl
   0230 46                  539 	ld	b, (hl)
   0231 03                  540 	inc	bc
   0232 03                  541 	inc	bc
   0233 3E 0E               542 	ld	a, #0x0e
   0235 02                  543 	ld	(bc), a
                            544 ;StateSecret.c:139: INT8 iit [] = {7, 7, 7};
   0236 F8 06               545 	ldhl	sp,	#6
   0238 7D                  546 	ld	a, l
   0239 54                  547 	ld	d, h
   023A F8 0D               548 	ldhl	sp,	#13
   023C 22                  549 	ld	(hl+), a
   023D 72                  550 	ld	(hl), d
   023E 2B                  551 	dec	hl
   023F 2A                  552 	ld	a, (hl+)
   0240 66                  553 	ld	h, (hl)
   0241 6F                  554 	ld	l, a
   0242 36 07               555 	ld	(hl), #0x07
   0244 F8 0D               556 	ldhl	sp,#(14 - 1)
   0246 4E                  557 	ld	c, (hl)
   0247 23                  558 	inc	hl
   0248 46                  559 	ld	b, (hl)
   0249 03                  560 	inc	bc
   024A 3E 07               561 	ld	a, #0x07
   024C 02                  562 	ld	(bc), a
   024D 2B                  563 	dec	hl
   024E 4E                  564 	ld	c, (hl)
   024F 23                  565 	inc	hl
   0250 46                  566 	ld	b, (hl)
   0251 03                  567 	inc	bc
   0252 03                  568 	inc	bc
   0253 3E 07               569 	ld	a, #0x07
   0255 02                  570 	ld	(bc), a
                            571 ;StateSecret.c:140: for(invc=0; invc < invcount; invc++){
   0256 AF                  572 	xor	a, a
   0257 F8 15               573 	ldhl	sp,	#21
   0259 77                  574 	ld	(hl), a
   025A                     575 00103$:
   025A F8 15               576 	ldhl	sp,	#21
   025C 7E                  577 	ld	a, (hl)
   025D EE 80               578 	xor	a, #0x80
   025F D6 83               579 	sub	a, #0x83
   0261 D2rFDr02            580 	jp	NC, 00105$
                            581 ;StateSecret.c:141: struct Sprite* item_sprite = SpriteManagerAdd(SpriteItem, invitems_positions_x[invc]*8, invitems_positions_y[invc]*8);
   0264 7E                  582 	ld	a, (hl)
   0265 F8 0F               583 	ldhl	sp,	#15
   0267 77                  584 	ld	(hl), a
   0268 17                  585 	rla
   0269 9F                  586 	sbc	a, a
   026A 23                  587 	inc	hl
   026B 32                  588 	ld	(hl-), a
   026C 5E                  589 	ld	e, (hl)
   026D 23                  590 	inc	hl
   026E 56                  591 	ld	d, (hl)
   026F F8 0B               592 	ldhl	sp,	#11
   0271 2A                  593 	ld	a, (hl+)
   0272 66                  594 	ld	h, (hl)
   0273 6F                  595 	ld	l, a
   0274 19                  596 	add	hl, de
   0275 4D                  597 	ld	c, l
   0276 44                  598 	ld	b, h
   0277 0A                  599 	ld	a, (bc)
   0278 4F                  600 	ld	c, a
   0279 17                  601 	rla
   027A 9F                  602 	sbc	a, a
   027B 47                  603 	ld	b, a
   027C CB 21               604 	sla	c
   027E CB 10               605 	rl	b
   0280 CB 21               606 	sla	c
   0282 CB 10               607 	rl	b
   0284 CB 21               608 	sla	c
   0286 CB 10               609 	rl	b
   0288 F8 13               610 	ldhl	sp,	#19
   028A 71                  611 	ld	(hl), c
   028B 23                  612 	inc	hl
   028C 70                  613 	ld	(hl), b
   028D F8 0F               614 	ldhl	sp,#(16 - 1)
   028F 5E                  615 	ld	e, (hl)
   0290 23                  616 	inc	hl
   0291 56                  617 	ld	d, (hl)
   0292 F8 09               618 	ldhl	sp,	#9
   0294 2A                  619 	ld	a, (hl+)
   0295 66                  620 	ld	h, (hl)
   0296 6F                  621 	ld	l, a
   0297 19                  622 	add	hl, de
   0298 4D                  623 	ld	c, l
   0299 44                  624 	ld	b, h
   029A 0A                  625 	ld	a, (bc)
   029B 4F                  626 	ld	c, a
   029C 17                  627 	rla
   029D 9F                  628 	sbc	a, a
   029E 47                  629 	ld	b, a
   029F CB 21               630 	sla	c
   02A1 CB 10               631 	rl	b
   02A3 CB 21               632 	sla	c
   02A5 CB 10               633 	rl	b
   02A7 CB 21               634 	sla	c
   02A9 CB 10               635 	rl	b
   02AB F8 13               636 	ldhl	sp,	#19
   02AD 2A                  637 	ld	a, (hl+)
   02AE 66                  638 	ld	h, (hl)
   02AF 6F                  639 	ld	l, a
   02B0 E5                  640 	push	hl
   02B1 C5                  641 	push	bc
   02B2 3E 03               642 	ld	a, #0x03
   02B4 F5                  643 	push	af
   02B5 33                  644 	inc	sp
   02B6 CDr00r00            645 	call	_SpriteManagerAdd
   02B9 E8 05               646 	add	sp, #5
   02BB 4B                  647 	ld	c, e
   02BC 42                  648 	ld	b, d
                            649 ;StateSecret.c:142: struct ItemInfo* dataitem = (struct ItemInfo*)item_sprite->custom_data;
   02BD 21 19 00            650 	ld	hl, #0x0019
   02C0 09                  651 	add	hl, bc
   02C1 4D                  652 	ld	c, l
   02C2 7C                  653 	ld	a, h
   02C3 47                  654 	ld	b, a
                            655 ;StateSecret.c:143: dataitem->type = iit[invc];
   02C4 21 01 00            656 	ld	hl, #0x0001
   02C7 09                  657 	add	hl, bc
   02C8 7D                  658 	ld	a, l
   02C9 54                  659 	ld	d, h
   02CA F8 11               660 	ldhl	sp,	#17
   02CC 22                  661 	ld	(hl+), a
   02CD 72                  662 	ld	(hl), d
   02CE 2B                  663 	dec	hl
   02CF 2B                  664 	dec	hl
   02D0 2B                  665 	dec	hl
   02D1 5E                  666 	ld	e, (hl)
   02D2 23                  667 	inc	hl
   02D3 56                  668 	ld	d, (hl)
   02D4 F8 0D               669 	ldhl	sp,	#13
   02D6 2A                  670 	ld	a, (hl+)
   02D7 66                  671 	ld	h, (hl)
   02D8 6F                  672 	ld	l, a
   02D9 19                  673 	add	hl, de
   02DA 7D                  674 	ld	a, l
   02DB 54                  675 	ld	d, h
   02DC F8 13               676 	ldhl	sp,	#19
   02DE 22                  677 	ld	(hl+), a
   02DF 72                  678 	ld	(hl), d
   02E0 2B                  679 	dec	hl
   02E1 5E                  680 	ld	e, (hl)
   02E2 23                  681 	inc	hl
   02E3 56                  682 	ld	d, (hl)
   02E4 1A                  683 	ld	a,(de)
   02E5 F8 11               684 	ldhl	sp,	#17
   02E7 F5                  685 	push	af
   02E8 2A                  686 	ld	a, (hl+)
   02E9 66                  687 	ld	h, (hl)
   02EA 6F                  688 	ld	l, a
   02EB F1                  689 	pop	af
   02EC 77                  690 	ld	(hl), a
                            691 ;StateSecret.c:144: dataitem->collided = 1u;
   02ED 3E 01               692 	ld	a, #0x01
   02EF 02                  693 	ld	(bc), a
                            694 ;StateSecret.c:145: dataitem->setup = 1u;
   02F0 03                  695 	inc	bc
   02F1 03                  696 	inc	bc
   02F2 03                  697 	inc	bc
   02F3 03                  698 	inc	bc
   02F4 3E 01               699 	ld	a, #0x01
   02F6 02                  700 	ld	(bc), a
                            701 ;StateSecret.c:140: for(invc=0; invc < invcount; invc++){
   02F7 F8 15               702 	ldhl	sp,	#21
   02F9 34                  703 	inc	(hl)
   02FA C3r5Ar02            704 	jp	00103$
   02FD                     705 00105$:
                            706 ;StateSecret.c:147: }
   02FD E8 16               707 	add	sp, #22
   02FF C9                  708 	ret
                            709 ;StateSecret.c:149: void Update_StateSecret() {
                            710 ;	---------------------------------
                            711 ; Function Update_StateSecret
                            712 ; ---------------------------------
   0300                     713 _Update_StateSecret::
   0300 E8 FE               714 	add	sp, #-2
                            715 ;StateSecret.c:151: struct ArcherInfo* archer_data = (struct ArcherInfo*)scroll_target->custom_data;
   0302 21r00r00            716 	ld	hl, #_scroll_target
   0305 46                  717 	ld	b, (hl)
   0306 23                  718 	inc	hl
   0307 4E                  719 	ld	c, (hl)
   0308 78                  720 	ld	a, b
   0309 C6 19               721 	add	a, #0x19
   030B 47                  722 	ld	b, a
   030C 30 01               723 	jr	NC,00158$
   030E 0C                  724 	inc	c
   030F                     725 00158$:
   030F F8 00               726 	ldhl	sp,	#0
   0311 70                  727 	ld	(hl), b
   0312 23                  728 	inc	hl
   0313 71                  729 	ld	(hl), c
                            730 ;StateSecret.c:153: if (amulet != archer_data->amulet){
   0314 D1                  731 	pop	de
   0315 D5                  732 	push	de
   0316 1A                  733 	ld	a,(de)
   0317 4F                  734 	ld	c, a
   0318 21r00r00            735 	ld	hl, #_amulet
   031B 7E                  736 	ld	a, (hl)
   031C 91                  737 	sub	a, c
   031D 28 07               738 	jr	Z,00102$
                            739 ;StateSecret.c:154: amulet = archer_data->amulet;
   031F 21r00r00            740 	ld	hl, #_amulet
   0322 71                  741 	ld	(hl), c
                            742 ;StateSecret.c:155: WriteAMULET();		
   0323 CDr00r00            743 	call	_WriteAMULET
   0326                     744 00102$:
                            745 ;StateSecret.c:157: if (coins != archer_data->coins){
   0326 C1                  746 	pop	bc
   0327 C5                  747 	push	bc
   0328 03                  748 	inc	bc
   0329 0A                  749 	ld	a, (bc)
   032A 4F                  750 	ld	c, a
   032B 21r00r00            751 	ld	hl, #_coins
   032E 7E                  752 	ld	a, (hl)
   032F 91                  753 	sub	a, c
   0330 28 07               754 	jr	Z,00104$
                            755 ;StateSecret.c:158: coins = archer_data->coins;
   0332 21r00r00            756 	ld	hl, #_coins
   0335 71                  757 	ld	(hl), c
                            758 ;StateSecret.c:159: WriteCOINS();
   0336 CDr00r00            759 	call	_WriteCOINS
   0339                     760 00104$:
                            761 ;StateSecret.c:161: if (hp != archer_data->hp){
   0339 C1                  762 	pop	bc
   033A C5                  763 	push	bc
   033B 03                  764 	inc	bc
   033C 03                  765 	inc	bc
   033D 0A                  766 	ld	a, (bc)
   033E 4F                  767 	ld	c, a
   033F 21r00r00            768 	ld	hl, #_hp
   0342 7E                  769 	ld	a, (hl)
   0343 91                  770 	sub	a, c
   0344 28 07               771 	jr	Z,00106$
                            772 ;StateSecret.c:162: hp = archer_data->hp;
   0346 21r00r00            773 	ld	hl, #_hp
   0349 71                  774 	ld	(hl), c
                            775 ;StateSecret.c:163: WriteHP();
   034A CDr00r00            776 	call	_WriteHP
   034D                     777 00106$:
                            778 ;StateSecret.c:165: if (ups != archer_data->ups){
   034D C1                  779 	pop	bc
   034E C5                  780 	push	bc
   034F 03                  781 	inc	bc
   0350 03                  782 	inc	bc
   0351 03                  783 	inc	bc
   0352 0A                  784 	ld	a, (bc)
   0353 4F                  785 	ld	c, a
   0354 21r00r00            786 	ld	hl, #_ups
   0357 7E                  787 	ld	a, (hl)
   0358 91                  788 	sub	a, c
   0359 28 07               789 	jr	Z,00108$
                            790 ;StateSecret.c:166: ups = archer_data->ups;
   035B 21r00r00            791 	ld	hl, #_ups
   035E 71                  792 	ld	(hl), c
                            793 ;StateSecret.c:167: WriteUPS();
   035F CDr00r00            794 	call	_WriteUPS
   0362                     795 00108$:
                            796 ;StateSecret.c:169: if(archer_data->tool == level_tool){
   0362 D1                  797 	pop	de
   0363 D5                  798 	push	de
   0364 21 04 00            799 	ld	hl, #0x0004
   0367 19                  800 	add	hl, de
   0368 4D                  801 	ld	c,l
   0369 7C                  802 	ld	a,h
   036A 4E                  803 	ld	c, (hl)
   036B 21r00r00            804 	ld	hl, #_level_tool
   036E 7E                  805 	ld	a, (hl)
   036F 91                  806 	sub	a, c
   0370 20 03               807 	jr	NZ,00110$
                            808 ;StateSecret.c:170: WriteTOOL();
   0372 CDr00r00            809 	call	_WriteTOOL
   0375                     810 00110$:
                            811 ;StateSecret.c:173: if(load_next_s){
   0375 21r00r00            812 	ld	hl, #_load_next_s
   0378 7E                  813 	ld	a, (hl)
   0379 B7                  814 	or	a, a
   037A 28 30               815 	jr	Z,00116$
                            816 ;StateSecret.c:174: switch(load_next_s){
   037C 7E                  817 	ld	a, (hl)
   037D 3C                  818 	inc	a
   037E 28 25               819 	jr	Z,00112$
   0380 21r00r00            820 	ld	hl, #_load_next_s
   0383 7E                  821 	ld	a, (hl)
   0384 3D                  822 	dec	a
   0385 20 25               823 	jr	NZ,00116$
                            824 ;StateSecret.c:176: current_map_s += load_next_s;
   0387 21r03r00            825 	ld	hl, #_current_map_s
   038A 7E                  826 	ld	a, (hl)
   038B 21r00r00            827 	ld	hl, #_load_next_s
   038E 86                  828 	add	a, (hl)
   038F 21r03r00            829 	ld	hl, #_current_map_s
   0392 77                  830 	ld	(hl), a
                            831 ;StateSecret.c:177: WriteMap();
   0393 CDr00r00            832 	call	_WriteMap
                            833 ;StateSecret.c:178: load_next_s = 0;
   0396 21r00r00            834 	ld	hl, #_load_next_s
   0399 36 00               835 	ld	(hl), #0x00
                            836 ;StateSecret.c:179: SetState(StateSecret);
   039B 3E 01               837 	ld	a, #0x01
   039D F5                  838 	push	af
   039E 33                  839 	inc	sp
   039F CDr00r00            840 	call	_SetState
   03A2 33                  841 	inc	sp
                            842 ;StateSecret.c:180: break;
   03A3 18 07               843 	jr	00116$
                            844 ;StateSecret.c:181: case -1: //torno dalla secret a game
   03A5                     845 00112$:
                            846 ;StateSecret.c:183: SetState(StateGame);
   03A5 AF                  847 	xor	a, a
   03A6 F5                  848 	push	af
   03A7 33                  849 	inc	sp
   03A8 CDr00r00            850 	call	_SetState
   03AB 33                  851 	inc	sp
                            852 ;StateSecret.c:185: }
   03AC                     853 00116$:
                            854 ;StateSecret.c:188: }
   03AC E8 02               855 	add	sp, #2
   03AE C9                  856 	ret
                            857 	.area _CODE_2
                            858 	.area _CABS (ABS)
